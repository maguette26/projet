{
    "sourceFile": "src/pages/Ressources.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1750861795831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750861984867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,244 @@\n+import React, { useEffect, useState, useMemo, useCallback } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+import api from '../services/api';\r\n+import Layout from '../components/commun/Layout';\r\n+import { useRessource } from './RessourceContext.jsx';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+const Ressources = () => {\r\n+  const navigate = useNavigate();\r\n+  const { selectedCategory, setSelectedCategory, categoriesOrder } = useRessource();\r\n+\r\n+  const [fonctionnalites, setFonctionnalites] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+  const [isUserPremium, setIsUserPremium] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchUserInfo = async () => {\r\n+      try {\r\n+        const res = await api.get('/auth/me');\r\n+        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n+      } catch {\r\n+        setIsUserPremium(false);\r\n+      } finally {\r\n+        fetchFonctionnalites();\r\n+      }\r\n+    };\r\n+    fetchUserInfo();\r\n+  }, []);\r\n+\r\n+  const fetchFonctionnalites = useCallback(async () => {\r\n+    setLoading(true);\r\n+    setError(null);\r\n+    try {\r\n+      const res = await api.get('/fonctionnalites');\r\n+      if (Array.isArray(res.data)) {\r\n+        setFonctionnalites(res.data.filter(f => f.statut === true));\r\n+      } else {\r\n+        throw new Error(\"Format de données invalide.\");\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Erreur de chargement des fonctionnalités.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  }, []);\r\n+\r\n+  const filteredFonctionnalites = useMemo(() => {\r\n+    return fonctionnalites.filter(f =>\r\n+      selectedCategory === 'all' ||\r\n+      (selectedCategory === 'Autres' && !categoriesOrder.some(cat => cat.key === f.type)) ||\r\n+      f.type === selectedCategory\r\n+    );\r\n+  }, [fonctionnalites, selectedCategory, categoriesOrder]);\r\n+\r\n+  // 🔒 Redirection automatique si catégorie 100% premium\r\n+  useEffect(() => {\r\n+    if (!loading && !isUserPremium) {\r\n+      const hasOnlyPremium = filteredFonctionnalites.length > 0 && filteredFonctionnalites.every(f => f.premium);\r\n+      if (hasOnlyPremium) {\r\n+        navigate('/devenir-premium');\r\n+      }\r\n+    }\r\n+  }, [loading, isUserPremium, filteredFonctionnalites, navigate]);\r\n+\r\n+  const gratuits = filteredFonctionnalites.filter(f => !f.premium);\r\n+  const premiums = filteredFonctionnalites.filter(f => f.premium);\r\n+\r\n+  const renderResourceContent = (f) => {\r\n+    const { type, description, lienFichier, premium } = f;\r\n+\r\n+    if (premium && !isUserPremium) {\r\n+      return (\r\n+        <div className=\"mt-2 text-gray-600\">\r\n+          <p className=\"mb-2\">🔐 Cette ressource est réservée aux membres Premium.</p>\r\n+          <button\r\n+            onClick={() => navigate('/devenir-premium')}\r\n+            className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-semibold px-4 py-2 rounded\"\r\n+          >\r\n+            Devenir Premium\r\n+          </button>\r\n+        </div>\r\n+      );\r\n+    }\r\n+\r\n+    switch (type) {\r\n+      case 'citation':\r\n+        return <blockquote className=\"mt-3 italic text-gray-700\">💬 \"{description}\"</blockquote>;\r\n+      case 'video':\r\n+        if (lienFichier && (lienFichier.includes('youtube.com') || lienFichier.includes('youtu.be'))) {\r\n+          const youtubeId = lienFichier.split('v=')[1]?.split('&')[0] || lienFichier.split('/').pop();\r\n+          return (\r\n+            <div className=\"mt-3 aspect-w-16 aspect-h-9 rounded overflow-hidden shadow\">\r\n+              <iframe\r\n+                className=\"w-full h-full\"\r\n+                src={`https://www.youtube.com/embed/${youtubeId}`}\r\n+                allowFullScreen\r\n+                title={f.nom}\r\n+              />\r\n+            </div>\r\n+          );\r\n+        }\r\n+        return <a href={lienFichier} className=\"text-indigo-600 hover:underline mt-2 block\">▶️ Voir la vidéo</a>;\r\n+      case 'podcast':\r\n+        return (\r\n+          <div className=\"mt-3\">\r\n+            <audio controls className=\"w-full rounded-md shadow-sm\">\r\n+              <source src={lienFichier} type=\"audio/mpeg\" />\r\n+            </audio>\r\n+            <a href={lienFichier} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline mt-1 block\">\r\n+              🎧 Écouter le podcast\r\n+            </a>\r\n+          </div>\r\n+        );\r\n+      default:\r\n+        return (\r\n+          <div className=\"mt-2 text-gray-800\">\r\n+            <p>{description}</p>\r\n+            {lienFichier && (\r\n+              <a href={lienFichier} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline mt-1 inline-block\">\r\n+                📄 Consulter\r\n+              </a>\r\n+            )}\r\n+          </div>\r\n+        );\r\n+    }\r\n+  };\r\n+\r\n+  const cardVariants = {\r\n+    hidden: { opacity: 0, y: 20 },\r\n+    visible: { opacity: 1, y: 0 },\r\n+    hover: { scale: 1.05, boxShadow: \"0 8px 20px rgba(99, 102, 241, 0.3)\" }\r\n+  };\r\n+\r\n+  const emojiByCategory = {\r\n+    all: '📚',\r\n+    citation: '💬',\r\n+    video: '🎥',\r\n+    podcast: '🎧',\r\n+    article: '📝',\r\n+    livre: '📖',\r\n+    autres: '🔖',\r\n+  };\r\n+\r\n+  return (\r\n+    <Layout>\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n+        <motion.h1\r\n+          className=\"text-3xl font-bold mb-8 text-gray-900 text-center select-none\"\r\n+          initial={{ opacity: 0, y: -10 }}\r\n+          animate={{ opacity: 1, y: 0 }}\r\n+          transition={{ duration: 0.8, ease: 'easeOut' }}\r\n+        >\r\n+          📚 Bibliothèque de Ressources\r\n+        </motion.h1>\r\n+\r\n+        <div className=\"flex flex-wrap gap-3 justify-center mb-8\">\r\n+          {categoriesOrder.map(({ key, title }) => (\r\n+            <motion.button\r\n+              key={key}\r\n+              onClick={() => setSelectedCategory(key)}\r\n+              className={`px-5 py-2 rounded-full font-medium transition-colors duration-300\r\n+                ${selectedCategory === key ? 'bg-indigo-600 text-white shadow-lg' : 'bg-gray-100 text-gray-700 hover:bg-indigo-100 hover:text-indigo-700'}`}\r\n+              whileHover={{ scale: 1.1 }}\r\n+              whileTap={{ scale: 0.95 }}\r\n+              aria-pressed={selectedCategory === key}\r\n+            >\r\n+              {emojiByCategory[key.toLowerCase()] || '📁'} {title}\r\n+            </motion.button>\r\n+          ))}\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"bg-red-100 border border-red-400 text-red-700 p-4 rounded mb-6\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {loading ? (\r\n+          <p className=\"text-center text-gray-600\">Chargement...</p>\r\n+        ) : (\r\n+          <>\r\n+            {gratuits.length > 0 && (\r\n+              <section className=\"mb-10\">\r\n+                <h2 className=\"text-2xl font-semibold mb-6 border-b border-gray-300 pb-2 flex items-center gap-2 select-none\">\r\n+                  ✨ Ressources Gratuites\r\n+                </h2>\r\n+                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+                  {gratuits.map(f => (\r\n+                    <motion.div\r\n+                      key={f.id}\r\n+                      className=\"bg-white rounded-lg shadow p-5 border border-gray-200 cursor-pointer\"\r\n+                      variants={cardVariants}\r\n+                      initial=\"hidden\"\r\n+                      animate=\"visible\"\r\n+                      whileHover=\"hover\"\r\n+                      transition={{ duration: 0.3 }}\r\n+                    >\r\n+                      <div className=\"flex justify-between items-center mb-3\">\r\n+                        <h3 className=\"font-semibold text-lg\">{f.nom}</h3>\r\n+                      </div>\r\n+                      {renderResourceContent(f)}\r\n+                    </motion.div>\r\n+                  ))}\r\n+                </div>\r\n+              </section>\r\n+            )}\r\n+\r\n+            {premiums.length > 0 && (\r\n+              <section>\r\n+                <h2 className=\"text-2xl font-semibold mb-6 border-b border-yellow-400 pb-2 text-yellow-700 flex items-center gap-2 select-none\">\r\n+                  ⭐ Ressources Premium\r\n+                </h2>\r\n+                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+                  {premiums.map(f => (\r\n+                    <motion.div\r\n+                      key={f.id}\r\n+                      className=\"bg-yellow-50 rounded-lg shadow border border-yellow-300 p-5 cursor-pointer\"\r\n+                      variants={cardVariants}\r\n+                      initial=\"hidden\"\r\n+                      animate=\"visible\"\r\n+                      whileHover=\"hover\"\r\n+                      transition={{ duration: 0.3 }}\r\n+                    >\r\n+                      <div className=\"flex justify-between items-center mb-3\">\r\n+                        <h3 className=\"font-semibold text-lg\">{f.nom}</h3>\r\n+                        <span className=\"inline-block bg-yellow-400 text-yellow-900 text-xs font-semibold px-3 py-1 rounded-full select-none\">\r\n+                          🔒 Premium\r\n+                        </span>\r\n+                      </div>\r\n+                      {renderResourceContent(f)}\r\n+                    </motion.div>\r\n+                  ))}\r\n+                </div>\r\n+              </section>\r\n+            )}\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+    </Layout>\r\n+  );\r\n+};\r\n+\r\n+export default Ressources;\r\n"
                },
                {
                    "date": 1750862556399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,23 +12,10 @@\n   const [fonctionnalites, setFonctionnalites] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n   const [isUserPremium, setIsUserPremium] = useState(false);\r\n+  const [notConnectedMessage, setNotConnectedMessage] = useState('');\r\n \r\n-  useEffect(() => {\r\n-    const fetchUserInfo = async () => {\r\n-      try {\r\n-        const res = await api.get('/auth/me');\r\n-        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n-      } catch {\r\n-        setIsUserPremium(false);\r\n-      } finally {\r\n-        fetchFonctionnalites();\r\n-      }\r\n-    };\r\n-    fetchUserInfo();\r\n-  }, []);\r\n-\r\n   const fetchFonctionnalites = useCallback(async () => {\r\n     setLoading(true);\r\n     setError(null);\r\n     try {\r\n@@ -44,8 +31,38 @@\n       setLoading(false);\r\n     }\r\n   }, []);\r\n \r\n+  useEffect(() => {\r\n+    const roleLocal = localStorage.getItem('role');\r\n+\r\n+    if (!roleLocal) {\r\n+      setNotConnectedMessage('⚠️ Vous devez être connecté pour accéder aux ressources. Redirection...');\r\n+      setLoading(false);\r\n+      setFonctionnalites([]);\r\n+      setIsUserPremium(false);\r\n+\r\n+      const timer = setTimeout(() => {\r\n+        navigate('/connexion');\r\n+      }, 3000);\r\n+\r\n+      return () => clearTimeout(timer);\r\n+    }\r\n+\r\n+    const fetchUserInfo = async () => {\r\n+      try {\r\n+        const res = await api.get('/auth/me');\r\n+        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n+      } catch {\r\n+        setIsUserPremium(false);\r\n+      } finally {\r\n+        fetchFonctionnalites();\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserInfo();\r\n+  }, [navigate, fetchFonctionnalites]);\r\n+\r\n   const filteredFonctionnalites = useMemo(() => {\r\n     return fonctionnalites.filter(f =>\r\n       selectedCategory === 'all' ||\r\n       (selectedCategory === 'Autres' && !categoriesOrder.some(cat => cat.key === f.type)) ||\r\n@@ -62,8 +79,18 @@\n       }\r\n     }\r\n   }, [loading, isUserPremium, filteredFonctionnalites, navigate]);\r\n \r\n+  if (notConnectedMessage) {\r\n+    return (\r\n+      <Layout>\r\n+        <div className=\"max-w-7xl mx-auto px-4 py-8 text-center text-red-600 font-semibold select-none\">\r\n+          {notConnectedMessage}\r\n+        </div>\r\n+      </Layout>\r\n+    );\r\n+  }\r\n+\r\n   const gratuits = filteredFonctionnalites.filter(f => !f.premium);\r\n   const premiums = filteredFonctionnalites.filter(f => f.premium);\r\n \r\n   const renderResourceContent = (f) => {\r\n"
                },
                {
                    "date": 1750862563718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,23 @@\n   const [fonctionnalites, setFonctionnalites] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n   const [isUserPremium, setIsUserPremium] = useState(false);\r\n-  const [notConnectedMessage, setNotConnectedMessage] = useState('');\r\n \r\n+  useEffect(() => {\r\n+    const fetchUserInfo = async () => {\r\n+      try {\r\n+        const res = await api.get('/auth/me');\r\n+        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n+      } catch {\r\n+        setIsUserPremium(false);\r\n+      } finally {\r\n+        fetchFonctionnalites();\r\n+      }\r\n+    };\r\n+    fetchUserInfo();\r\n+  }, []);\r\n+\r\n   const fetchFonctionnalites = useCallback(async () => {\r\n     setLoading(true);\r\n     setError(null);\r\n     try {\r\n@@ -31,38 +44,8 @@\n       setLoading(false);\r\n     }\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    const roleLocal = localStorage.getItem('role');\r\n-\r\n-    if (!roleLocal) {\r\n-      setNotConnectedMessage('⚠️ Vous devez être connecté pour accéder aux ressources. Redirection...');\r\n-      setLoading(false);\r\n-      setFonctionnalites([]);\r\n-      setIsUserPremium(false);\r\n-\r\n-      const timer = setTimeout(() => {\r\n-        navigate('/connexion');\r\n-      }, 3000);\r\n-\r\n-      return () => clearTimeout(timer);\r\n-    }\r\n-\r\n-    const fetchUserInfo = async () => {\r\n-      try {\r\n-        const res = await api.get('/auth/me');\r\n-        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n-      } catch {\r\n-        setIsUserPremium(false);\r\n-      } finally {\r\n-        fetchFonctionnalites();\r\n-      }\r\n-    };\r\n-\r\n-    fetchUserInfo();\r\n-  }, [navigate, fetchFonctionnalites]);\r\n-\r\n   const filteredFonctionnalites = useMemo(() => {\r\n     return fonctionnalites.filter(f =>\r\n       selectedCategory === 'all' ||\r\n       (selectedCategory === 'Autres' && !categoriesOrder.some(cat => cat.key === f.type)) ||\r\n@@ -79,18 +62,8 @@\n       }\r\n     }\r\n   }, [loading, isUserPremium, filteredFonctionnalites, navigate]);\r\n \r\n-  if (notConnectedMessage) {\r\n-    return (\r\n-      <Layout>\r\n-        <div className=\"max-w-7xl mx-auto px-4 py-8 text-center text-red-600 font-semibold select-none\">\r\n-          {notConnectedMessage}\r\n-        </div>\r\n-      </Layout>\r\n-    );\r\n-  }\r\n-\r\n   const gratuits = filteredFonctionnalites.filter(f => !f.premium);\r\n   const premiums = filteredFonctionnalites.filter(f => f.premium);\r\n \r\n   const renderResourceContent = (f) => {\r\n"
                },
                {
                    "date": 1750862675993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,271 @@\n+import React, { useEffect, useState, useMemo, useCallback } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+import api from '../services/api';\r\n+import Layout from '../components/commun/Layout';\r\n+import { useRessource } from './RessourceContext.jsx';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+const Ressources = () => {\r\n+  const navigate = useNavigate();\r\n+  const { selectedCategory, setSelectedCategory, categoriesOrder } = useRessource();\r\n+\r\n+  const [fonctionnalites, setFonctionnalites] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+  const [isUserPremium, setIsUserPremium] = useState(false);\r\n+  const [notConnectedMessage, setNotConnectedMessage] = useState('');\r\n+\r\n+  const fetchFonctionnalites = useCallback(async () => {\r\n+    setLoading(true);\r\n+    setError(null);\r\n+    try {\r\n+      const res = await api.get('/fonctionnalites');\r\n+      if (Array.isArray(res.data)) {\r\n+        setFonctionnalites(res.data.filter(f => f.statut === true));\r\n+      } else {\r\n+        throw new Error(\"Format de données invalide.\");\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Erreur de chargement des fonctionnalités.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const roleLocal = localStorage.getItem('role');\r\n+\r\n+    if (!roleLocal) {\r\n+      setNotConnectedMessage('⚠️ Vous devez être connecté pour accéder aux ressources. Redirection...');\r\n+      setLoading(false);\r\n+      setFonctionnalites([]);\r\n+      setIsUserPremium(false);\r\n+\r\n+      const timer = setTimeout(() => {\r\n+        navigate('/connexion');\r\n+      }, 000);\r\n+\r\n+      return () => clearTimeout(timer);\r\n+    }\r\n+\r\n+    const fetchUserInfo = async () => {\r\n+      try {\r\n+        const res = await api.get('/auth/me');\r\n+        setIsUserPremium(res.data.role === 'PREMIUM' || res.data.role === 'ADMIN');\r\n+      } catch {\r\n+        setIsUserPremium(false);\r\n+      } finally {\r\n+        fetchFonctionnalites();\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserInfo();\r\n+  }, [navigate, fetchFonctionnalites]);\r\n+\r\n+  const filteredFonctionnalites = useMemo(() => {\r\n+    return fonctionnalites.filter(f =>\r\n+      selectedCategory === 'all' ||\r\n+      (selectedCategory === 'Autres' && !categoriesOrder.some(cat => cat.key === f.type)) ||\r\n+      f.type === selectedCategory\r\n+    );\r\n+  }, [fonctionnalites, selectedCategory, categoriesOrder]);\r\n+\r\n+  // 🔒 Redirection automatique si catégorie 100% premium\r\n+  useEffect(() => {\r\n+    if (!loading && !isUserPremium) {\r\n+      const hasOnlyPremium = filteredFonctionnalites.length > 0 && filteredFonctionnalites.every(f => f.premium);\r\n+      if (hasOnlyPremium) {\r\n+        navigate('/devenir-premium');\r\n+      }\r\n+    }\r\n+  }, [loading, isUserPremium, filteredFonctionnalites, navigate]);\r\n+\r\n+  if (notConnectedMessage) {\r\n+    return (\r\n+      <Layout>\r\n+        <div className=\"max-w-7xl mx-auto px-4 py-8 text-center text-red-600 font-semibold select-none\">\r\n+          {notConnectedMessage}\r\n+        </div>\r\n+      </Layout>\r\n+    );\r\n+  }\r\n+\r\n+  const gratuits = filteredFonctionnalites.filter(f => !f.premium);\r\n+  const premiums = filteredFonctionnalites.filter(f => f.premium);\r\n+\r\n+  const renderResourceContent = (f) => {\r\n+    const { type, description, lienFichier, premium } = f;\r\n+\r\n+    if (premium && !isUserPremium) {\r\n+      return (\r\n+        <div className=\"mt-2 text-gray-600\">\r\n+          <p className=\"mb-2\">🔐 Cette ressource est réservée aux membres Premium.</p>\r\n+          <button\r\n+            onClick={() => navigate('/devenir-premium')}\r\n+            className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-semibold px-4 py-2 rounded\"\r\n+          >\r\n+            Devenir Premium\r\n+          </button>\r\n+        </div>\r\n+      );\r\n+    }\r\n+\r\n+    switch (type) {\r\n+      case 'citation':\r\n+        return <blockquote className=\"mt-3 italic text-gray-700\">💬 \"{description}\"</blockquote>;\r\n+      case 'video':\r\n+        if (lienFichier && (lienFichier.includes('youtube.com') || lienFichier.includes('youtu.be'))) {\r\n+          const youtubeId = lienFichier.split('v=')[1]?.split('&')[0] || lienFichier.split('/').pop();\r\n+          return (\r\n+            <div className=\"mt-3 aspect-w-16 aspect-h-9 rounded overflow-hidden shadow\">\r\n+              <iframe\r\n+                className=\"w-full h-full\"\r\n+                src={`https://www.youtube.com/embed/${youtubeId}`}\r\n+                allowFullScreen\r\n+                title={f.nom}\r\n+              />\r\n+            </div>\r\n+          );\r\n+        }\r\n+        return <a href={lienFichier} className=\"text-indigo-600 hover:underline mt-2 block\">▶️ Voir la vidéo</a>;\r\n+      case 'podcast':\r\n+        return (\r\n+          <div className=\"mt-3\">\r\n+            <audio controls className=\"w-full rounded-md shadow-sm\">\r\n+              <source src={lienFichier} type=\"audio/mpeg\" />\r\n+            </audio>\r\n+            <a href={lienFichier} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline mt-1 block\">\r\n+              🎧 Écouter le podcast\r\n+            </a>\r\n+          </div>\r\n+        );\r\n+      default:\r\n+        return (\r\n+          <div className=\"mt-2 text-gray-800\">\r\n+            <p>{description}</p>\r\n+            {lienFichier && (\r\n+              <a href={lienFichier} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline mt-1 inline-block\">\r\n+                📄 Consulter\r\n+              </a>\r\n+            )}\r\n+          </div>\r\n+        );\r\n+    }\r\n+  };\r\n+\r\n+  const cardVariants = {\r\n+    hidden: { opacity: 0, y: 20 },\r\n+    visible: { opacity: 1, y: 0 },\r\n+    hover: { scale: 1.05, boxShadow: \"0 8px 20px rgba(99, 102, 241, 0.3)\" }\r\n+  };\r\n+\r\n+  const emojiByCategory = {\r\n+    all: '📚',\r\n+    citation: '💬',\r\n+    video: '🎥',\r\n+    podcast: '🎧',\r\n+    article: '📝',\r\n+    livre: '📖',\r\n+    autres: '🔖',\r\n+  };\r\n+\r\n+  return (\r\n+    <Layout>\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n+        <motion.h1\r\n+          className=\"text-3xl font-bold mb-8 text-gray-900 text-center select-none\"\r\n+          initial={{ opacity: 0, y: -10 }}\r\n+          animate={{ opacity: 1, y: 0 }}\r\n+          transition={{ duration: 0.8, ease: 'easeOut' }}\r\n+        >\r\n+          📚 Bibliothèque de Ressources\r\n+        </motion.h1>\r\n+\r\n+        <div className=\"flex flex-wrap gap-3 justify-center mb-8\">\r\n+          {categoriesOrder.map(({ key, title }) => (\r\n+            <motion.button\r\n+              key={key}\r\n+              onClick={() => setSelectedCategory(key)}\r\n+              className={`px-5 py-2 rounded-full font-medium transition-colors duration-300\r\n+                ${selectedCategory === key ? 'bg-indigo-600 text-white shadow-lg' : 'bg-gray-100 text-gray-700 hover:bg-indigo-100 hover:text-indigo-700'}`}\r\n+              whileHover={{ scale: 1.1 }}\r\n+              whileTap={{ scale: 0.95 }}\r\n+              aria-pressed={selectedCategory === key}\r\n+            >\r\n+              {emojiByCategory[key.toLowerCase()] || '📁'} {title}\r\n+            </motion.button>\r\n+          ))}\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"bg-red-100 border border-red-400 text-red-700 p-4 rounded mb-6\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {loading ? (\r\n+          <p className=\"text-center text-gray-600\">Chargement...</p>\r\n+        ) : (\r\n+          <>\r\n+            {gratuits.length > 0 && (\r\n+              <section className=\"mb-10\">\r\n+                <h2 className=\"text-2xl font-semibold mb-6 border-b border-gray-300 pb-2 flex items-center gap-2 select-none\">\r\n+                  ✨ Ressources Gratuites\r\n+                </h2>\r\n+                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+                  {gratuits.map(f => (\r\n+                    <motion.div\r\n+                      key={f.id}\r\n+                      className=\"bg-white rounded-lg shadow p-5 border border-gray-200 cursor-pointer\"\r\n+                      variants={cardVariants}\r\n+                      initial=\"hidden\"\r\n+                      animate=\"visible\"\r\n+                      whileHover=\"hover\"\r\n+                      transition={{ duration: 0.3 }}\r\n+                    >\r\n+                      <div className=\"flex justify-between items-center mb-3\">\r\n+                        <h3 className=\"font-semibold text-lg\">{f.nom}</h3>\r\n+                      </div>\r\n+                      {renderResourceContent(f)}\r\n+                    </motion.div>\r\n+                  ))}\r\n+                </div>\r\n+              </section>\r\n+            )}\r\n+\r\n+            {premiums.length > 0 && (\r\n+              <section>\r\n+                <h2 className=\"text-2xl font-semibold mb-6 border-b border-yellow-400 pb-2 text-yellow-700 flex items-center gap-2 select-none\">\r\n+                  ⭐ Ressources Premium\r\n+                </h2>\r\n+                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+                  {premiums.map(f => (\r\n+                    <motion.div\r\n+                      key={f.id}\r\n+                      className=\"bg-yellow-50 rounded-lg shadow border border-yellow-300 p-5 cursor-pointer\"\r\n+                      variants={cardVariants}\r\n+                      initial=\"hidden\"\r\n+                      animate=\"visible\"\r\n+                      whileHover=\"hover\"\r\n+                      transition={{ duration: 0.3 }}\r\n+                    >\r\n+                      <div className=\"flex justify-between items-center mb-3\">\r\n+                        <h3 className=\"font-semibold text-lg\">{f.nom}</h3>\r\n+                        <span className=\"inline-block bg-yellow-400 text-yellow-900 text-xs font-semibold px-3 py-1 rounded-full select-none\">\r\n+                          🔒 Premium\r\n+                        </span>\r\n+                      </div>\r\n+                      {renderResourceContent(f)}\r\n+                    </motion.div>\r\n+                  ))}\r\n+                </div>\r\n+              </section>\r\n+            )}\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+    </Layout>\r\n+  );\r\n+};\r\n+\r\n+export default Ressources;\r\n"
                },
                {
                    "date": 1750862887816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       setIsUserPremium(false);\r\n \r\n       const timer = setTimeout(() => {\r\n         navigate('/connexion');\r\n-      }, 1000);\r\n+      }, 000);\r\n \r\n       return () => clearTimeout(timer);\r\n     }\r\n \r\n"
                },
                {
                    "date": 1750862978977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n       setIsUserPremium(false);\r\n \r\n       const timer = setTimeout(() => {\r\n         navigate('/connexion');\r\n-      }, 1000);\r\n+      }, 3000);\r\n \r\n       return () => clearTimeout(timer);\r\n     }\r\n \r\n"
                }
            ],
            "date": 1750861795831,
            "name": "Commit-0",
            "content": ""
        }
    ]
}