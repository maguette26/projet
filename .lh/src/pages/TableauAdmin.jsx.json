{
    "sourceFile": "src/pages/TableauAdmin.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1750387157871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1750387157871,
            "name": "Commit-0",
            "content": "// src/pages/TableauAdmin.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Tes composants importés\r\nimport GestionUtilisateurs from '../components/admin/GestionUtilisateurs';\r\nimport GestionProfessionnels from '../components/admin/GestionProfessionnels';\r\nimport ModerationDiscussions from '../components/admin/ModerationDiscussions';\r\nimport AdminFonctionnalites from '../components/admin/AdminFonctionnalites';\r\n\r\n// Import des icônes Lucide React pour emojis\r\nimport { Smile, Settings, Users, UserCheck, MessageSquare } from 'lucide-react';\r\n\r\nconst menuItems = [\r\n  {\r\n    key: 'tableauDeBord',\r\n    label: 'Tableau de bord',\r\n    icon: <Smile className=\"w-5 h-5 mr-3\" />,\r\n  },\r\n  {\r\n    key: 'fonctionnalites',\r\n    label: 'Gestion Fonctionnalités',\r\n    icon: <Settings className=\"w-5 h-5 mr-3\" />,\r\n  },\r\n  {\r\n    key: 'utilisateurs',\r\n    label: 'Gestion Utilisateurs',\r\n    icon: <Users className=\"w-5 h-5 mr-3\" />,\r\n  },\r\n  {\r\n    key: 'professionnels',\r\n    label: 'Gestion Professionnels',\r\n    icon: <UserCheck className=\"w-5 h-5 mr-3\" />,\r\n  },\r\n  {\r\n    key: 'messages',\r\n    label: 'Gestion Messages',\r\n    icon: <MessageSquare className=\"w-5 h-5 mr-3\" />,\r\n  },\r\n];\r\n\r\nconst TableauAdmin = () => {\r\n  const [activeSection, setActiveSection] = useState('tableauDeBord');\r\n  const [adminName, setAdminName] = useState('');\r\n  const [currentAdminEmail, setCurrentAdminEmail] = useState('');\r\n  const [currentAdminRole, setCurrentAdminRole] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const currentUserJSON = localStorage.getItem('currentUser');\r\n    if (currentUserJSON) {\r\n      try {\r\n        const currentUser = JSON.parse(currentUserJSON);\r\n        const prenom = currentUser.prenom || '';\r\n        const nom = currentUser.nom || '';\r\n        const email = currentUser.email || '';\r\n        const role = currentUser.role || '';\r\n\r\n        const fullName = (prenom + ' ' + nom).trim();\r\n        setAdminName(fullName || 'Admin');\r\n        setCurrentAdminEmail(email);\r\n        setCurrentAdminRole(role);\r\n      } catch (error) {\r\n        console.error('Erreur parsing currentUser depuis localStorage:', error);\r\n        setAdminName('Admin');\r\n      }\r\n    } else {\r\n      setAdminName('Admin');\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('role');\r\n    localStorage.removeItem('currentUser');\r\n    navigate('/connexion');\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeSection) {\r\n      case 'tableauDeBord':\r\n        return (\r\n          <div className=\"p-6 bg-gray-100 rounded-lg max-w-5xl mx-auto space-y-6\">\r\n            {/* Carte de bienvenue */}\r\n            <div className=\"bg-white p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n              <Smile className=\"w-10 h-10 text-yellow-400\" />\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-800\">\r\n                  Bonjour, <span className=\"text-indigo-700\">{adminName}</span>\r\n                </h2>\r\n                <p className=\"text-gray-600\">Ravi de vous revoir sur votre espace d'administration.</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Carte d'identité de l'admin */}\r\n            {currentAdminEmail && currentAdminRole && (\r\n              <div className=\"bg-white p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n                <UserCheck className=\"w-8 h-8 text-indigo-600\" />\r\n                <div>\r\n                  <p className=\"text-gray-700\">\r\n                    <span className=\"font-semibold\">Email :</span> {currentAdminEmail}\r\n                  </p>\r\n                  <p className=\"text-gray-700\">\r\n                    <span className=\"font-semibold\">Rôle :</span>{' '}\r\n                    <span className=\"text-indigo-700 font-semibold\">{currentAdminRole}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Introduction */}\r\n            <div className=\"bg-white p-6 rounded-2xl shadow-md\">\r\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Présentation</h3>\r\n              <div className=\"text-gray-700 leading-relaxed text-base\">\r\n                <p>\r\n                  Bienvenue sur votre tableau de bord <strong>PsyConnect</strong>. Vous avez accès à l'ensemble des outils nécessaires\r\n                  pour assurer la gestion efficace de la plateforme.\r\n                </p>\r\n\r\n                <p>Vous pouvez :</p>\r\n\r\n                <ul className=\"list-disc ml-6 mt-2 text-gray-700\">\r\n                  <li>Gérer les utilisateurs standards</li>\r\n                  <li>Gérer les professionnels de santé mentale</li>\r\n                  <li>Modérer les discussions</li>\r\n                  <li>Configurer les fonctionnalités disponibles</li>\r\n                </ul>\r\n\r\n                <p>Utilisez le menu latéral pour naviguer entre les sections.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'fonctionnalites':\r\n        return (\r\n          <section className=\"bg-white shadow-lg rounded-lg p-6 max-w-5xl mx-auto\">\r\n            <AdminFonctionnalites />\r\n          </section>\r\n        );\r\n      case 'utilisateurs':\r\n        return (\r\n          <section className=\"bg-white shadow-lg rounded-lg p-6 max-w-5xl mx-auto\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-6 border-b border-gray-200 pb-3\">\r\n              Gestion des Utilisateurs Standards\r\n            </h2>\r\n            <GestionUtilisateurs />\r\n          </section>\r\n        );\r\n      case 'professionnels':\r\n        return (\r\n          <section className=\"bg-white shadow-lg rounded-lg p-6 max-w-5xl mx-auto\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-6 border-b border-gray-200 pb-3\">\r\n              Gestion des Professionnels de Santé Mentale\r\n            </h2>\r\n            <GestionProfessionnels />\r\n          </section>\r\n        );\r\n      case 'messages':\r\n        return (\r\n          <section className=\"p-6 bg-white rounded-lg shadow max-w-5xl mx-auto\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">Modération des Discussions</h2>\r\n            <ModerationDiscussions />\r\n          </section>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"p-6 text-center text-gray-600\">\r\n            Sélectionnez une option dans le menu latéral.\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar / Navbar */}\r\n      <aside className=\"w-64 bg-blue-800 text-white flex flex-col h-full shadow-lg\">\r\n        <div className=\"p-6 text-center text-2xl font-bold border-b border-blue-700\">\r\n          <span className=\"text-blue-200\">PsyConnect</span>\r\n          <span className=\"text-white\"> Admin</span>\r\n        </div>\r\n        <nav className=\"flex-grow mt-6\">\r\n          <ul>\r\n            {menuItems.map(({ key, label, icon }) => (\r\n              <li key={key} className=\"mb-2\">\r\n                <button\r\n                  onClick={() => setActiveSection(key)}\r\n                  className={`w-full text-left px-6 py-3 flex items-center transition-colors duration-200 ${\r\n                    activeSection === key ? 'bg-blue-600 text-white font-semibold' : 'hover:bg-blue-700'\r\n                  }`}\r\n                >\r\n                  {icon}\r\n                  {label}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n        <div className=\"p-4 border-t border-blue-700 mt-auto\">\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full bg-blue-700 hover:bg-blue-900 text-white py-2 rounded-md transition duration-200 flex items-center justify-center gap-2\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17 16l4-4m0 0l-4-4m4 4H7\" />\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7 8v8\" />\r\n            </svg>\r\n            Se Déconnecter\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Contenu principal */}\r\n      <main className=\"flex-1 overflow-x-hidden overflow-y-auto p-6\">{renderContent()}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableauAdmin;\r\n"
        }
    ]
}