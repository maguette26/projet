{
    "sourceFile": "src/pages/DevenirPremium.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1750973291902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750973325442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,194 +4,152 @@\n import api from '../services/api';\r\n import { useNavigate } from 'react-router-dom';\r\n \r\n const DevenirPremium = () => {\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null);\r\n-  const [success, setSuccess] = useState(false);\r\n-  const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n-  const navigate = useNavigate();\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n+    const [success, setSuccess] = useState(false);\r\n+    const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n+    const navigate = useNavigate();\r\n \r\n-  const plans = {\r\n-    monthly: {\r\n-      label: 'Mensuel',\r\n-      price: 3,\r\n-      duration: 'mois',\r\n-      description: 'Accès flexible, annulez à tout moment.',\r\n-    },\r\n-    quarterly: {\r\n-      label: 'Trimestriel',\r\n-      price: 10,\r\n-      duration: '3 mois',\r\n-      description: 'Économisez 15% par rapport au plan mensuel.',\r\n-    },\r\n-    annually: {\r\n-      label: 'Annuel',\r\n-      price: 30,\r\n-      duration: 'an',\r\n-      description: 'La meilleure offre : économisez 25% !',\r\n-    },\r\n-  };\r\n+    const plans = {\r\n+        monthly: { label: 'Mensuel', price: 3, duration: 'mois', description: 'Accès flexible, annulez à tout moment.' },\r\n+        quarterly: { label: 'Trimestriel', price: 10, duration: '3 mois', description: 'Économisez 15% par rapport au plan mensuel.' },\r\n+        annually: { label: 'Annuel', price: 30, duration: 'an', description: 'La meilleure offre : économisez 25% !' },\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    const loadPayPalScript = () => {\r\n-      const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n-      if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n-        setLoading(false);\r\n-        return;\r\n-      }\r\n+    useEffect(() => {\r\n+        const loadPayPalScript = () => {\r\n+            const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n+            if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n+                setLoading(false);\r\n+                return;\r\n+            }\r\n \r\n-      const script = document.createElement('script');\r\n-      script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=EUR`;\r\n-      script.async = true;\r\n-      script.onload = () => {\r\n-        setLoading(false);\r\n-        renderPayPalButton();\r\n-      };\r\n-      script.onerror = () => {\r\n-        setError(\"Impossible de charger le script PayPal.\");\r\n-        setLoading(false);\r\n-      };\r\n-      document.body.appendChild(script);\r\n-    };\r\n+            const script = document.createElement('script');\r\n+            script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=USD`;\r\n+            script.onload = () => {\r\n+                setLoading(false);\r\n+                renderPayPalButton();\r\n+            };\r\n+            script.onerror = () => {\r\n+                setError(\"Impossible de charger le script PayPal.\");\r\n+                setLoading(false);\r\n+            };\r\n+            document.body.appendChild(script);\r\n+        };\r\n \r\n-    loadPayPalScript();\r\n+        loadPayPalScript();\r\n \r\n-    return () => {\r\n-      const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n-      if (script) document.body.removeChild(script);\r\n-    };\r\n-  }, []);\r\n+        return () => {\r\n+            const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n+            if (script) {\r\n+                document.body.removeChild(script);\r\n+            }\r\n+        };\r\n+    }, []);\r\n \r\n-  useEffect(() => {\r\n-    const container = document.getElementById('paypal-button-container');\r\n-    if (container) {\r\n-      container.innerHTML = '';\r\n-    }\r\n-    if (!loading && window.paypal) {\r\n-      renderPayPalButton();\r\n-    }\r\n-  }, [selectedPlan, loading]);\r\n-\r\n-  const renderPayPalButton = () => {\r\n-    if (!window.paypal) return;\r\n-    window.paypal.Buttons({\r\n-      style: {\r\n-        layout: 'vertical',\r\n-        color: 'blue',\r\n-        shape: 'pill',\r\n-        label: 'pay',\r\n-      },\r\n-      createOrder: async () => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n-          const orderData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n-          return orderData.id;\r\n-        } catch (err) {\r\n-          setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n-          return Promise.reject(err);\r\n+    useEffect(() => {\r\n+        const container = document.getElementById('paypal-button-container');\r\n+        if (container) {\r\n+            container.innerHTML = '';\r\n         }\r\n-      },\r\n-      onApprove: async (data) => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n-          const captureData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n+        if (!loading && window.paypal) {\r\n+            renderPayPalButton();\r\n+        }\r\n+    }, [selectedPlan, loading]);\r\n \r\n-          if (captureData.status === 'COMPLETED') {\r\n-            setSuccess(true);\r\n-            localStorage.setItem('role', 'PREMIUM');\r\n-            setTimeout(() => navigate('/tableauUtilisateur'), 3000);\r\n-          } else {\r\n-            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n-          }\r\n-        } catch {\r\n-          setError(\"Erreur lors de la validation du paiement.\");\r\n+    const renderPayPalButton = () => {\r\n+        if (window.paypal) {\r\n+            window.paypal.Buttons({\r\n+                createOrder: async () => {\r\n+                    setError(null);\r\n+                    try {\r\n+                        const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n+                        const orderData = JSON.parse(response.data);\r\n+                        return orderData.id;\r\n+                    } catch (err) {\r\n+                        setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n+                        return Promise.reject(err);\r\n+                    }\r\n+                },\r\n+                onApprove: async (data) => {\r\n+                    setError(null);\r\n+                    try {\r\n+                        const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n+                        const captureData = JSON.parse(response.data);\r\n+\r\n+                        if (captureData.status === 'COMPLETED') {\r\n+                            setSuccess(true);\r\n+                            localStorage.setItem('role', 'PREMIUM');\r\n+                            setTimeout(() => {\r\n+                                navigate('/tableauUtilisateur');\r\n+                            }, 3000);\r\n+                        } else {\r\n+                            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n+                        }\r\n+                    } catch (err) {\r\n+                        setError(\"Erreur lors de la validation du paiement.\");\r\n+                    }\r\n+                },\r\n+                onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n+                onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n+            }).render('#paypal-button-container');\r\n         }\r\n-      },\r\n-      onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n-      onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n-    }).render('#paypal-button-container');\r\n-  };\r\n+    };\r\n \r\n-  const currentPlan = plans[selectedPlan];\r\n+    const currentPlan = plans[selectedPlan];\r\n \r\n-  return (\r\n-    <Layout>\r\n-      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gradient-to-tr from-indigo-50 via-white to-indigo-50 px-4 py-12\">\r\n-        <div className=\"max-w-xl w-full bg-white rounded-xl shadow-xl p-8 md:p-12 border border-indigo-200\">\r\n-          <h1 className=\"text-3xl font-extrabold text-indigo-800 mb-4 text-center\">Devenez Membre Premium !</h1>\r\n-          <p className=\"text-center text-gray-700 mb-8 leading-relaxed\">\r\n-            Débloquez un accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et plus encore.\r\n-          </p>\r\n+    return (\r\n+        <Layout>\r\n+            <div className=\"py-4 px-3 max-w-4xl mx-auto text-center min-h-screen flex flex-col justify-center\">\r\n+                <h1 className=\"text-2xl font-bold text-indigo-800 mb-2\">Devenez Membre Premium !</h1>\r\n+                <p className=\"text-sm text-gray-700 mb-4\">\r\n+                    Débloquez l'accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et plus.\r\n+                </p>\r\n \r\n-          {/* Choix des plans */}\r\n-          <div className=\"flex justify-center space-x-3 mb-8 flex-wrap\">\r\n-            {Object.keys(plans).map((planKey) => (\r\n-              <button\r\n-                key={planKey}\r\n-                onClick={() => setSelectedPlan(planKey)}\r\n-                className={`px-5 py-2 rounded-full font-semibold transition-transform duration-300 focus:outline-none ${\r\n-                  selectedPlan === planKey\r\n-                    ? 'bg-indigo-700 text-white shadow-lg scale-105'\r\n-                    : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\r\n-                }`}\r\n-              >\r\n-                {plans[planKey].label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n+                <div className=\"bg-white p-4 rounded-lg shadow border border-indigo-200 flex flex-col items-center\">\r\n+                    <h2 className=\"text-xl font-semibold text-indigo-700 mb-4\">Choisissez votre plan d'abonnement</h2>\r\n+                    \r\n+                    <div className=\"flex justify-center space-x-2 mb-6\">\r\n+                        {Object.keys(plans).map((planKey) => (\r\n+                            <button\r\n+                                key={planKey}\r\n+                                onClick={() => setSelectedPlan(planKey)}\r\n+                                className={`px-3 py-1 rounded-full text-sm font-semibold transition duration-300 ${\r\n+                                    selectedPlan === planKey\r\n+                                        ? 'bg-indigo-600 text-white shadow transform scale-105'\r\n+                                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n+                                }`}\r\n+                            >\r\n+                                {plans[planKey].label}\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n \r\n-          {/* Détails du plan sélectionné */}\r\n-          <div className=\"text-center mb-8\">\r\n-            <p className=\"text-5xl font-extrabold text-indigo-900 mb-2\">\r\n-              {currentPlan.price.toFixed(2)} € <span className=\"text-lg text-gray-500 font-normal\">/ {currentPlan.duration}</span>\r\n-            </p>\r\n-            <p className=\"text-sm text-gray-600 max-w-md mx-auto\">{currentPlan.description}</p>\r\n-          </div>\r\n+                    <div className=\"mb-6\">\r\n+                        <p className=\"text-4xl font-extrabold text-gray-900 mb-1\">\r\n+                            {currentPlan.price.toFixed(2)} € <span className=\"text-base text-gray-500\">/ {currentPlan.duration}</span>\r\n+                        </p>\r\n+                        <p className=\"text-xs text-gray-600 max-w-xs mx-auto\">{currentPlan.description}</p>\r\n+                    </div>\r\n \r\n-          {/* Affichage du paiement */}\r\n-          <div className=\"flex flex-col items-center\">\r\n-            {loading ? (\r\n-              <div className=\"flex items-center space-x-2 text-indigo-600 font-semibold text-sm animate-pulse\">\r\n-                <svg\r\n-                  className=\"w-5 h-5 text-indigo-500 animate-spin\"\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"none\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <circle\r\n-                    className=\"opacity-25\"\r\n-                    cx=\"12\"\r\n-                    cy=\"12\"\r\n-                    r=\"10\"\r\n-                    stroke=\"currentColor\"\r\n-                    strokeWidth=\"4\"\r\n-                  ></circle>\r\n-                  <path\r\n-                    className=\"opacity-75\"\r\n-                    fill=\"currentColor\"\r\n-                    d=\"M4 12a8 8 0 018-8v8H4z\"\r\n-                  ></path>\r\n-                </svg>\r\n-                Chargement du bouton de paiement...\r\n-              </div>\r\n-            ) : error ? (\r\n-              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded mb-4 max-w-md text-center\">\r\n-                {error}\r\n-              </div>\r\n-            ) : success ? (\r\n-              <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded mb-4 max-w-md text-center font-semibold\">\r\n-                Paiement réussi ! Vous êtes maintenant membre Premium. Redirection en cours...\r\n-              </div>\r\n-            ) : (\r\n-              <div id=\"paypal-button-container\" className=\"w-full max-w-xs\" />\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </Layout>\r\n-  );\r\n+                    {loading ? (\r\n+                        <div className=\"text-indigo-600 font-semibold text-sm\">Chargement du bouton de paiement...</div>\r\n+                    ) : error ? (\r\n+                        <div className=\"bg-red-100 border border-red-400 text-red-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n+                            {error}\r\n+                        </div>\r\n+                    ) : success ? (\r\n+                        <div className=\"bg-green-100 border border-green-400 text-green-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n+                            Paiement réussi ! Vous êtes maintenant membre Premium. Redirection...\r\n+                        </div>\r\n+                    ) : (\r\n+                        <div id=\"paypal-button-container\" className=\"w-full max-w-xs mx-auto\" />\r\n+                    )}\r\n+                </div>\r\n+            </div>\r\n+        </Layout>\r\n+    );\r\n };\r\n \r\n-export default DevenirPremium;\r\n+export default DevenirPremium;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1750973351625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,155 +1,1 @@\n-// src/pages/DevenirPremium.jsx\r\n-import React, { useEffect, useState } from 'react';\r\n-import Layout from '../components/commun/Layout';\r\n-import api from '../services/api';\r\n-import { useNavigate } from 'react-router-dom';\r\n-\r\n-const DevenirPremium = () => {\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [error, setError] = useState(null);\r\n-    const [success, setSuccess] = useState(false);\r\n-    const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n-    const navigate = useNavigate();\r\n-\r\n-    const plans = {\r\n-        monthly: { label: 'Mensuel', price: 3, duration: 'mois', description: 'Accès flexible, annulez à tout moment.' },\r\n-        quarterly: { label: 'Trimestriel', price: 10, duration: '3 mois', description: 'Économisez 15% par rapport au plan mensuel.' },\r\n-        annually: { label: 'Annuel', price: 30, duration: 'an', description: 'La meilleure offre : économisez 25% !' },\r\n-    };\r\n-\r\n-    useEffect(() => {\r\n-        const loadPayPalScript = () => {\r\n-            const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n-            if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n-                setLoading(false);\r\n-                return;\r\n-            }\r\n-\r\n-            const script = document.createElement('script');\r\n-            script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=USD`;\r\n-            script.onload = () => {\r\n-                setLoading(false);\r\n-                renderPayPalButton();\r\n-            };\r\n-            script.onerror = () => {\r\n-                setError(\"Impossible de charger le script PayPal.\");\r\n-                setLoading(false);\r\n-            };\r\n-            document.body.appendChild(script);\r\n-        };\r\n-\r\n-        loadPayPalScript();\r\n-\r\n-        return () => {\r\n-            const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n-            if (script) {\r\n-                document.body.removeChild(script);\r\n-            }\r\n-        };\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const container = document.getElementById('paypal-button-container');\r\n-        if (container) {\r\n-            container.innerHTML = '';\r\n-        }\r\n-        if (!loading && window.paypal) {\r\n-            renderPayPalButton();\r\n-        }\r\n-    }, [selectedPlan, loading]);\r\n-\r\n-    const renderPayPalButton = () => {\r\n-        if (window.paypal) {\r\n-            window.paypal.Buttons({\r\n-                createOrder: async () => {\r\n-                    setError(null);\r\n-                    try {\r\n-                        const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n-                        const orderData = JSON.parse(response.data);\r\n-                        return orderData.id;\r\n-                    } catch (err) {\r\n-                        setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n-                        return Promise.reject(err);\r\n-                    }\r\n-                },\r\n-                onApprove: async (data) => {\r\n-                    setError(null);\r\n-                    try {\r\n-                        const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n-                        const captureData = JSON.parse(response.data);\r\n-\r\n-                        if (captureData.status === 'COMPLETED') {\r\n-                            setSuccess(true);\r\n-                            localStorage.setItem('role', 'PREMIUM');\r\n-                            setTimeout(() => {\r\n-                                navigate('/tableauUtilisateur');\r\n-                            }, 3000);\r\n-                        } else {\r\n-                            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n-                        }\r\n-                    } catch (err) {\r\n-                        setError(\"Erreur lors de la validation du paiement.\");\r\n-                    }\r\n-                },\r\n-                onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n-                onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n-            }).render('#paypal-button-container');\r\n-        }\r\n-    };\r\n-\r\n-    const currentPlan = plans[selectedPlan];\r\n-\r\n-    return (\r\n-        <Layout>\r\n-            <div className=\"py-4 px-3 max-w-4xl mx-auto text-center min-h-screen flex flex-col justify-center\">\r\n-                <h1 className=\"text-2xl font-bold text-indigo-800 mb-2\">Devenez Membre Premium !</h1>\r\n-                <p className=\"text-sm text-gray-700 mb-4\">\r\n-                    Débloquez l'accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et plus.\r\n-                </p>\r\n-\r\n-                <div className=\"bg-white p-4 rounded-lg shadow border border-indigo-200 flex flex-col items-center\">\r\n-                    <h2 className=\"text-xl font-semibold text-indigo-700 mb-4\">Choisissez votre plan d'abonnement</h2>\r\n-                    \r\n-                    <div className=\"flex justify-center space-x-2 mb-6\">\r\n-                        {Object.keys(plans).map((planKey) => (\r\n-                            <button\r\n-                                key={planKey}\r\n-                                onClick={() => setSelectedPlan(planKey)}\r\n-                                className={`px-3 py-1 rounded-full text-sm font-semibold transition duration-300 ${\r\n-                                    selectedPlan === planKey\r\n-                                        ? 'bg-indigo-600 text-white shadow transform scale-105'\r\n-                                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n-                                }`}\r\n-                            >\r\n-                                {plans[planKey].label}\r\n-                            </button>\r\n-                        ))}\r\n-                    </div>\r\n-\r\n-                    <div className=\"mb-6\">\r\n-                        <p className=\"text-4xl font-extrabold text-gray-900 mb-1\">\r\n-                            {currentPlan.price.toFixed(2)} € <span className=\"text-base text-gray-500\">/ {currentPlan.duration}</span>\r\n-                        </p>\r\n-                        <p className=\"text-xs text-gray-600 max-w-xs mx-auto\">{currentPlan.description}</p>\r\n-                    </div>\r\n-\r\n-                    {loading ? (\r\n-                        <div className=\"text-indigo-600 font-semibold text-sm\">Chargement du bouton de paiement...</div>\r\n-                    ) : error ? (\r\n-                        <div className=\"bg-red-100 border border-red-400 text-red-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n-                            {error}\r\n-                        </div>\r\n-                    ) : success ? (\r\n-                        <div className=\"bg-green-100 border border-green-400 text-green-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n-                            Paiement réussi ! Vous êtes maintenant membre Premium. Redirection...\r\n-                        </div>\r\n-                    ) : (\r\n-                        <div id=\"paypal-button-container\" className=\"w-full max-w-xs mx-auto\" />\r\n-                    )}\r\n-                </div>\r\n-            </div>\r\n-        </Layout>\r\n-    );\r\n-};\r\n-\r\n-export default DevenirPremium;\n\\ No newline at end of file\n+v\n\\ No newline at end of file\n"
                },
                {
                    "date": 1750973368019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,169 +4,152 @@\n import api from '../services/api';\r\n import { useNavigate } from 'react-router-dom';\r\n \r\n const DevenirPremium = () => {\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null);\r\n-  const [success, setSuccess] = useState(false);\r\n-  const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n-  const navigate = useNavigate();\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n+    const [success, setSuccess] = useState(false);\r\n+    const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n+    const navigate = useNavigate();\r\n \r\n-  const plans = {\r\n-    monthly: {\r\n-      label: 'Mensuel',\r\n-      price: 3,\r\n-      duration: 'mois',\r\n-      description: 'Accès flexible, annulez à tout moment.',\r\n-    },\r\n-    quarterly: {\r\n-      label: 'Trimestriel',\r\n-      price: 10,\r\n-      duration: '3 mois',\r\n-      description: 'Économisez 15% par rapport au plan mensuel.',\r\n-    },\r\n-    annually: {\r\n-      label: 'Annuel',\r\n-      price: 30,\r\n-      duration: 'an',\r\n-      description: 'La meilleure offre : économisez 25% !',\r\n-    },\r\n-  };\r\n+    const plans = {\r\n+        monthly: { label: 'Mensuel', price: 3, duration: 'mois', description: 'Accès flexible, annulez à tout moment.' },\r\n+        quarterly: { label: 'Trimestriel', price: 10, duration: '3 mois', description: 'Économisez 15% par rapport au plan mensuel.' },\r\n+        annually: { label: 'Annuel', price: 30, duration: 'an', description: 'La meilleure offre : économisez 25% !' },\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    const loadPayPalScript = () => {\r\n-      const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n-      if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n-        setLoading(false);\r\n-        return;\r\n-      }\r\n+    useEffect(() => {\r\n+        const loadPayPalScript = () => {\r\n+            const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n+            if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n+                setLoading(false);\r\n+                return;\r\n+            }\r\n \r\n-      const script = document.createElement('script');\r\n-      script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=EUR`;\r\n-      script.async = true;\r\n-      script.onload = () => {\r\n-        setLoading(false);\r\n-        renderPayPalButton();\r\n-      };\r\n-      script.onerror = () => {\r\n-        setError(\"Impossible de charger le script PayPal.\");\r\n-        setLoading(false);\r\n-      };\r\n-      document.body.appendChild(script);\r\n-    };\r\n+            const script = document.createElement('script');\r\n+            script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=USD`;\r\n+            script.onload = () => {\r\n+                setLoading(false);\r\n+                renderPayPalButton();\r\n+            };\r\n+            script.onerror = () => {\r\n+                setError(\"Impossible de charger le script PayPal.\");\r\n+                setLoading(false);\r\n+            };\r\n+            document.body.appendChild(script);\r\n+        };\r\n \r\n-    loadPayPalScript();\r\n+        loadPayPalScript();\r\n \r\n-    return () => {\r\n-      const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n-      if (script) document.body.removeChild(script);\r\n-    };\r\n-  }, []);\r\n+        return () => {\r\n+            const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n+            if (script) {\r\n+                document.body.removeChild(script);\r\n+            }\r\n+        };\r\n+    }, []);\r\n \r\n-  useEffect(() => {\r\n-    const container = document.getElementById('paypal-button-container');\r\n-    if (container) {\r\n-      container.innerHTML = '';\r\n-    }\r\n-    if (!loading && window.paypal) {\r\n-      renderPayPalButton();\r\n-    }\r\n-  }, [selectedPlan, loading]);\r\n-\r\n-  const renderPayPalButton = () => {\r\n-    if (!window.paypal) return;\r\n-    window.paypal.Buttons({\r\n-      style: {\r\n-        layout: 'horizontal',\r\n-        color: 'gold',\r\n-        shape: 'rect',\r\n-        label: 'paypal',\r\n-        tagline: false,\r\n-      },\r\n-      createOrder: async () => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n-          const orderData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n-          return orderData.id;\r\n-        } catch (err) {\r\n-          setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n-          return Promise.reject(err);\r\n+    useEffect(() => {\r\n+        const container = document.getElementById('paypal-button-container');\r\n+        if (container) {\r\n+            container.innerHTML = '';\r\n         }\r\n-      },\r\n-      onApprove: async (data) => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n-          const captureData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n+        if (!loading && window.paypal) {\r\n+            renderPayPalButton();\r\n+        }\r\n+    }, [selectedPlan, loading]);\r\n \r\n-          if (captureData.status === 'COMPLETED') {\r\n-            setSuccess(true);\r\n-            localStorage.setItem('role', 'PREMIUM');\r\n-            setTimeout(() => navigate('/tableauUtilisateur'), 3000);\r\n-          } else {\r\n-            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n-          }\r\n-        } catch {\r\n-          setError(\"Erreur lors de la validation du paiement.\");\r\n+    const renderPayPalButton = () => {\r\n+        if (window.paypal) {\r\n+            window.paypal.Buttons({\r\n+                createOrder: async () => {\r\n+                    setError(null);\r\n+                    try {\r\n+                        const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n+                        const orderData = JSON.parse(response.data);\r\n+                        return orderData.id;\r\n+                    } catch (err) {\r\n+                        setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n+                        return Promise.reject(err);\r\n+                    }\r\n+                },\r\n+                onApprove: async (data) => {\r\n+                    setError(null);\r\n+                    try {\r\n+                        const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n+                        const captureData = JSON.parse(response.data);\r\n+\r\n+                        if (captureData.status === 'COMPLETED') {\r\n+                            setSuccess(true);\r\n+                            localStorage.setItem('role', 'PREMIUM');\r\n+                            setTimeout(() => {\r\n+                                navigate('/tableauUtilisateur');\r\n+                            }, 3000);\r\n+                        } else {\r\n+                            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n+                        }\r\n+                    } catch (err) {\r\n+                        setError(\"Erreur lors de la validation du paiement.\");\r\n+                    }\r\n+                },\r\n+                onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n+                onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n+            }).render('#paypal-button-container');\r\n         }\r\n-      },\r\n-      onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n-      onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n-    }).render('#paypal-button-container');\r\n-  };\r\n+    };\r\n \r\n-  const currentPlan = plans[selectedPlan];\r\n+    const currentPlan = plans[selectedPlan];\r\n \r\n-  return (\r\n-    <Layout>\r\n-      <main className=\"flex flex-col items-center justify-center min-h-screen p-6 bg-white\">\r\n-        <div className=\"w-full max-w-md border border-gray-300 rounded-lg p-8 shadow-sm\">\r\n-          <h1 className=\"text-3xl font-bold text-center mb-6 text-gray-900\">Devenez Membre Premium</h1>\r\n-          <p className=\"text-center text-gray-700 mb-8\">\r\n-            Accédez à toutes les ressources exclusives : exercices avancés, vidéos guidées, podcasts experts et plus encore.\r\n-          </p>\r\n+    return (\r\n+        <Layout>\r\n+            <div className=\"py-4 px-3 max-w-4xl mx-auto text-center min-h-screen flex flex-col justify-center\">\r\n+                <h1 className=\"text-2xl font-bold text-indigo-800 mb-2\">Devenez Membre Premium !</h1>\r\n+                <p className=\"text-sm text-gray-700 mb-4\">\r\n+                    Débloquez l'accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et plus.\r\n+                </p>\r\n \r\n-          <div className=\"flex justify-between mb-6 space-x-3\">\r\n-            {Object.keys(plans).map((planKey) => (\r\n-              <button\r\n-                key={planKey}\r\n-                onClick={() => setSelectedPlan(planKey)}\r\n-                className={`flex-1 py-3 rounded-md font-semibold transition-colors duration-200 focus:outline-none ${\r\n-                  selectedPlan === planKey\r\n-                    ? 'bg-blue-600 text-white shadow-md'\r\n-                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n-                }`}\r\n-              >\r\n-                {plans[planKey].label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n+                <div className=\"bg-white p-4 rounded-lg shadow border border-indigo-200 flex flex-col items-center\">\r\n+                    <h2 className=\"text-xl font-semibold text-indigo-700 mb-4\">Choisissez votre plan d'abonnement</h2>\r\n+                    \r\n+                    <div className=\"flex justify-center space-x-2 mb-6\">\r\n+                        {Object.keys(plans).map((planKey) => (\r\n+                            <button\r\n+                                key={planKey}\r\n+                                onClick={() => setSelectedPlan(planKey)}\r\n+                                className={`px-3 py-1 rounded-full text-sm font-semibold transition duration-300 ${\r\n+                                    selectedPlan === planKey\r\n+                                        ? 'bg-indigo-600 text-white shadow transform scale-105'\r\n+                                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n+                                }`}\r\n+                            >\r\n+                                {plans[planKey].label}\r\n+                            </button>\r\n+                        ))}\r\n+                    </div>\r\n \r\n-          <div className=\"text-center mb-8\">\r\n-            <p className=\"text-4xl font-extrabold text-gray-900 mb-1\">\r\n-              {currentPlan.price.toFixed(2)} €\r\n-              <span className=\"text-base font-normal text-gray-600\"> / {currentPlan.duration}</span>\r\n-            </p>\r\n-            <p className=\"text-sm text-gray-500\">{currentPlan.description}</p>\r\n-          </div>\r\n+                    <div className=\"mb-6\">\r\n+                        <p className=\"text-4xl font-extrabold text-gray-900 mb-1\">\r\n+                            {currentPlan.price.toFixed(2)} € <span className=\"text-base text-gray-500\">/ {currentPlan.duration}</span>\r\n+                        </p>\r\n+                        <p className=\"text-xs text-gray-600 max-w-xs mx-auto\">{currentPlan.description}</p>\r\n+                    </div>\r\n \r\n-          {loading ? (\r\n-            <div className=\"text-center text-blue-600 font-medium animate-pulse\">\r\n-              Chargement du bouton PayPal...\r\n+                    {loading ? (\r\n+                        <div className=\"text-indigo-600 font-semibold text-sm\">Chargement du bouton de paiement...</div>\r\n+                    ) : error ? (\r\n+                        <div className=\"bg-red-100 border border-red-400 text-red-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n+                            {error}\r\n+                        </div>\r\n+                    ) : success ? (\r\n+                        <div className=\"bg-green-100 border border-green-400 text-green-700 px-3 py-2 rounded mb-4 text-xs max-w-xs mx-auto\">\r\n+                            Paiement réussi ! Vous êtes maintenant membre Premium. Redirection...\r\n+                        </div>\r\n+                    ) : (\r\n+                        <div id=\"paypal-button-container\" className=\"w-full max-w-xs mx-auto\" />\r\n+                    )}\r\n+                </div>\r\n             </div>\r\n-          ) : error ? (\r\n-            <div className=\"mb-4 text-center text-red-600 font-medium\">{error}</div>\r\n-          ) : success ? (\r\n-            <div className=\"mb-4 text-center text-green-600 font-semibold\">\r\n-              Paiement réussi ! Vous êtes maintenant membre Premium. Redirection en cours...\r\n-            </div>\r\n-          ) : (\r\n-            <div id=\"paypal-button-container\" className=\"w-full\" />\r\n-          )}\r\n-        </div>\r\n-      </main>\r\n-    </Layout>\r\n-  );\r\n+        </Layout>\r\n+    );\r\n };\r\n \r\n-export default DevenirPremium;\r\n+export default DevenirPremium;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1750973655708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n import React, { useEffect, useState } from 'react';\r\n import Layout from '../components/commun/Layout';\r\n import api from '../services/api';\r\n import { useNavigate } from 'react-router-dom';\r\n-import { Coffee, Calendar, Gift, Star, CheckCircle, AlertTriangle } from 'lucide-react';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n+import { Smile, CreditCard } from 'lucide-react';\r\n+import { motion } from 'framer-motion';\r\n \r\n const DevenirPremium = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n@@ -18,23 +18,20 @@\n       label: 'Mensuel',\r\n       price: 3,\r\n       duration: 'mois',\r\n       description: 'Accès flexible, annulez à tout moment.',\r\n-      icon: <Coffee className=\"w-6 h-6 inline-block mr-2 text-yellow-500\" />,\r\n     },\r\n     quarterly: {\r\n       label: 'Trimestriel',\r\n       price: 10,\r\n       duration: '3 mois',\r\n       description: 'Économisez 15% par rapport au plan mensuel.',\r\n-      icon: <Calendar className=\"w-6 h-6 inline-block mr-2 text-blue-500\" />,\r\n     },\r\n     annually: {\r\n       label: 'Annuel',\r\n       price: 30,\r\n       duration: 'an',\r\n       description: 'La meilleure offre : économisez 25% !',\r\n-      icon: <Gift className=\"w-6 h-6 inline-block mr-2 text-pink-500\" />,\r\n     },\r\n   };\r\n \r\n   useEffect(() => {\r\n@@ -45,10 +42,9 @@\n         return;\r\n       }\r\n \r\n       const script = document.createElement('script');\r\n-      script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=EUR`;\r\n-      script.async = true;\r\n+      script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=USD`;\r\n       script.onload = () => {\r\n         setLoading(false);\r\n         renderPayPalButton();\r\n       };\r\n@@ -62,9 +58,11 @@\n     loadPayPalScript();\r\n \r\n     return () => {\r\n       const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n-      if (script) document.body.removeChild(script);\r\n+      if (script) {\r\n+        document.body.removeChild(script);\r\n+      }\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -77,145 +75,123 @@\n     }\r\n   }, [selectedPlan, loading]);\r\n \r\n   const renderPayPalButton = () => {\r\n-    if (!window.paypal) return;\r\n-    window.paypal.Buttons({\r\n-      style: {\r\n-        layout: 'horizontal',\r\n-        color: 'gold',\r\n-        shape: 'rect',\r\n-        label: 'paypal',\r\n-        tagline: false,\r\n-      },\r\n-      createOrder: async () => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n-          const orderData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n-          return orderData.id;\r\n-        } catch (err) {\r\n-          setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n-          return Promise.reject(err);\r\n-        }\r\n-      },\r\n-      onApprove: async (data) => {\r\n-        setError(null);\r\n-        try {\r\n-          const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n-          const captureData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n+    if (window.paypal) {\r\n+      window.paypal.Buttons({\r\n+        createOrder: async () => {\r\n+          setError(null);\r\n+          try {\r\n+            const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n+            const orderData = JSON.parse(response.data);\r\n+            return orderData.id;\r\n+          } catch (err) {\r\n+            setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n+            return Promise.reject(err);\r\n+          }\r\n+        },\r\n+        onApprove: async (data) => {\r\n+          setError(null);\r\n+          try {\r\n+            const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n+            const captureData = JSON.parse(response.data);\r\n \r\n-          if (captureData.status === 'COMPLETED') {\r\n-            setSuccess(true);\r\n-            localStorage.setItem('role', 'PREMIUM');\r\n-            setTimeout(() => navigate('/tableauUtilisateur'), 3000);\r\n-          } else {\r\n-            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n+            if (captureData.status === 'COMPLETED') {\r\n+              setSuccess(true);\r\n+              localStorage.setItem('role', 'PREMIUM');\r\n+              setTimeout(() => {\r\n+                navigate('/tableauUtilisateur');\r\n+              }, 3000);\r\n+            } else {\r\n+              setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n+            }\r\n+          } catch (err) {\r\n+            setError(\"Erreur lors de la validation du paiement.\");\r\n           }\r\n-        } catch {\r\n-          setError(\"Erreur lors de la validation du paiement.\");\r\n-        }\r\n-      },\r\n-      onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n-      onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n-    }).render('#paypal-button-container');\r\n+        },\r\n+        onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n+        onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n+      }).render('#paypal-button-container');\r\n+    }\r\n   };\r\n \r\n   const currentPlan = plans[selectedPlan];\r\n \r\n   return (\r\n     <Layout>\r\n-      <main className=\"flex flex-col items-center justify-center min-h-screen p-6 bg-gradient-to-tr from-indigo-50 via-white to-indigo-50\">\r\n-        <motion.div \r\n-          className=\"w-full max-w-md bg-white rounded-xl shadow-xl p-8\"\r\n-          initial={{ opacity: 0, y: 30 }}\r\n+      <main className=\"flex flex-col items-center justify-center min-h-[150vh] min-w-full p-8 bg-gradient-to-tr from-indigo-50 via-white to-indigo-50\">\r\n+        <motion.div\r\n+          initial={{ opacity: 0, y: -20 }}\r\n           animate={{ opacity: 1, y: 0 }}\r\n-          transition={{ duration: 0.5 }}\r\n-          layout\r\n+          transition={{ duration: 0.6 }}\r\n+          className=\"mb-8 flex items-center gap-3\"\r\n         >\r\n-          <h1 className=\"text-3xl font-extrabold text-indigo-800 mb-4 flex items-center justify-center gap-2\">\r\n-            <Star className=\"w-8 h-8 text-yellow-400 animate-pulse\" />\r\n-            Devenez Membre Premium\r\n-            <Star className=\"w-8 h-8 text-yellow-400 animate-pulse\" />\r\n+          <Smile className=\"w-10 h-10 text-indigo-600\" />\r\n+          <h1 className=\"text-3xl font-extrabold text-indigo-900\">\r\n+            Devenez Membre <span className=\"text-indigo-700\">Premium</span> !\r\n           </h1>\r\n-          <p className=\"text-center text-gray-600 mb-8 px-4\">\r\n-            Accédez à toutes les ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et bien plus.\r\n-          </p>\r\n+        </motion.div>\r\n \r\n-          <div className=\"flex justify-center gap-4 mb-8\">\r\n-            {Object.entries(plans).map(([planKey, plan]) => (\r\n-              <motion.button\r\n+        <motion.p\r\n+          initial={{ opacity: 0 }}\r\n+          animate={{ opacity: 1 }}\r\n+          transition={{ delay: 0.4, duration: 0.6 }}\r\n+          className=\"text-center text-gray-700 max-w-xl mb-8 px-4\"\r\n+        >\r\n+          Débloquez l'accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées,\r\n+          podcasts experts, et plus.\r\n+        </motion.p>\r\n+\r\n+        <motion.section\r\n+          initial={{ scale: 0.9, opacity: 0 }}\r\n+          animate={{ scale: 1, opacity: 1 }}\r\n+          transition={{ delay: 0.6, duration: 0.6 }}\r\n+          className=\"bg-white rounded-xl shadow-lg border border-indigo-200 p-8 max-w-lg w-full flex flex-col items-center\"\r\n+        >\r\n+          <h2 className=\"text-xl font-semibold text-indigo-700 mb-6 flex items-center gap-2\">\r\n+            <CreditCard className=\"w-6 h-6\" /> Choisissez votre plan d'abonnement\r\n+          </h2>\r\n+\r\n+          <div className=\"flex justify-center space-x-3 mb-8\">\r\n+            {Object.keys(plans).map((planKey) => (\r\n+              <button\r\n                 key={planKey}\r\n                 onClick={() => setSelectedPlan(planKey)}\r\n-                className={`flex items-center px-4 py-2 rounded-full font-semibold transition-all duration-300\r\n-                  ${selectedPlan === planKey ? 'bg-indigo-700 text-white shadow-lg scale-105' : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'}\r\n-                `}\r\n-                whileHover={{ scale: 1.1 }}\r\n-                layout\r\n+                className={`px-4 py-2 rounded-full text-sm font-semibold transition duration-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 ${\r\n+                  selectedPlan === planKey\r\n+                    ? 'bg-indigo-600 text-white shadow-lg transform scale-110'\r\n+                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n+                }`}\r\n               >\r\n-                {plan.icon}\r\n-                {plan.label}\r\n-              </motion.button>\r\n+                {plans[planKey].label}\r\n+              </button>\r\n             ))}\r\n           </div>\r\n \r\n-          <motion.div\r\n-            className=\"text-center mb-8\"\r\n-            key={selectedPlan}\r\n-            initial={{ opacity: 0, y: 20 }}\r\n-            animate={{ opacity: 1, y: 0 }}\r\n-            transition={{ duration: 0.4 }}\r\n-            layout\r\n-          >\r\n-            <p className=\"text-5xl font-extrabold text-indigo-900 mb-1\">\r\n-              {currentPlan.price.toFixed(2)} €\r\n-              <span className=\"text-base font-normal text-indigo-600\"> / {currentPlan.duration}</span>\r\n+          <div className=\"mb-8 text-center\">\r\n+            <p className=\"text-5xl font-extrabold text-gray-900 mb-2\">\r\n+              {currentPlan.price.toFixed(2)} € <span className=\"text-lg text-gray-500\">/ {currentPlan.duration}</span>\r\n             </p>\r\n-            <p className=\"text-sm text-indigo-600 max-w-xs mx-auto\">{currentPlan.description}</p>\r\n-          </motion.div>\r\n+            <p className=\"text-sm text-gray-600 max-w-xs mx-auto\">{currentPlan.description}</p>\r\n+          </div>\r\n \r\n-          <AnimatePresence>\r\n-            {loading && (\r\n-              <motion.div\r\n-                key=\"loading\"\r\n-                className=\"text-center text-indigo-600 font-semibold animate-pulse mb-4\"\r\n-                initial={{ opacity: 0 }}\r\n-                animate={{ opacity: 1 }}\r\n-                exit={{ opacity: 0 }}\r\n-              >\r\n-                Chargement du bouton PayPal...\r\n-              </motion.div>\r\n-            )}\r\n-\r\n-            {error && (\r\n-              <motion.div\r\n-                key=\"error\"\r\n-                className=\"flex items-center justify-center gap-2 mb-4 text-red-600 font-semibold bg-red-100 p-3 rounded\"\r\n-                initial={{ opacity: 0, scale: 0.8 }}\r\n-                animate={{ opacity: 1, scale: 1 }}\r\n-                exit={{ opacity: 0, scale: 0.8 }}\r\n-              >\r\n-                <AlertTriangle className=\"w-5 h-5\" />\r\n-                {error}\r\n-              </motion.div>\r\n-            )}\r\n-\r\n-            {success && (\r\n-              <motion.div\r\n-                key=\"success\"\r\n-                className=\"flex items-center justify-center gap-2 mb-4 text-green-700 font-semibold bg-green-100 p-3 rounded\"\r\n-                initial={{ opacity: 0, scale: 0.8 }}\r\n-                animate={{ opacity: 1, scale: 1 }}\r\n-                exit={{ opacity: 0, scale: 0.8 }}\r\n-              >\r\n-                <CheckCircle className=\"w-5 h-5\" />\r\n-                Paiement réussi ! Vous êtes maintenant membre Premium. Redirection en cours...\r\n-              </motion.div>\r\n-            )}\r\n-          </AnimatePresence>\r\n-\r\n-          <div id=\"paypal-button-container\" className=\"w-full max-w-xs mx-auto\" />\r\n-        </motion.div>\r\n+          {loading ? (\r\n+            <p className=\"text-indigo-600 font-semibold text-sm animate-pulse\">Chargement du bouton de paiement...</p>\r\n+          ) : error ? (\r\n+            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6 text-sm max-w-xs mx-auto\">\r\n+              {error}\r\n+            </div>\r\n+          ) : success ? (\r\n+            <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6 text-sm max-w-xs mx-auto\">\r\n+              Paiement réussi ! Vous êtes maintenant membre Premium. Redirection...\r\n+            </div>\r\n+          ) : (\r\n+            <div\r\n+              id=\"paypal-button-container\"\r\n+              className=\"w-full max-w-xs mx-auto\"\r\n+            />\r\n+          )}\r\n+        </motion.section>\r\n       </main>\r\n     </Layout>\r\n   );\r\n };\r\n"
                }
            ],
            "date": 1750973291902,
            "name": "Commit-0",
            "content": "// src/pages/DevenirPremium.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Layout from '../components/commun/Layout';\r\nimport api from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DevenirPremium = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState('monthly');\r\n  const navigate = useNavigate();\r\n\r\n  const plans = {\r\n    monthly: {\r\n      label: 'Mensuel',\r\n      price: 3,\r\n      duration: 'mois',\r\n      description: 'Accès flexible, annulez à tout moment.',\r\n    },\r\n    quarterly: {\r\n      label: 'Trimestriel',\r\n      price: 10,\r\n      duration: '3 mois',\r\n      description: 'Économisez 15% par rapport au plan mensuel.',\r\n    },\r\n    annually: {\r\n      label: 'Annuel',\r\n      price: 30,\r\n      duration: 'an',\r\n      description: 'La meilleure offre : économisez 25% !',\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadPayPalScript = () => {\r\n      const paypalClientId = \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\";\r\n      if (!paypalClientId || paypalClientId === \"YOUR_PAYPAL_CLIENT_ID_GOES_HERE\") {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${paypalClientId}&currency=EUR`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setLoading(false);\r\n        renderPayPalButton();\r\n      };\r\n      script.onerror = () => {\r\n        setError(\"Impossible de charger le script PayPal.\");\r\n        setLoading(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    loadPayPalScript();\r\n\r\n    return () => {\r\n      const script = document.querySelector(`script[src^=\"https://www.paypal.com/sdk/js\"]`);\r\n      if (script) document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('paypal-button-container');\r\n    if (container) {\r\n      container.innerHTML = '';\r\n    }\r\n    if (!loading && window.paypal) {\r\n      renderPayPalButton();\r\n    }\r\n  }, [selectedPlan, loading]);\r\n\r\n  const renderPayPalButton = () => {\r\n    if (!window.paypal) return;\r\n    window.paypal.Buttons({\r\n      style: {\r\n        layout: 'vertical',\r\n        color: 'blue',\r\n        shape: 'pill',\r\n        label: 'pay',\r\n      },\r\n      createOrder: async () => {\r\n        setError(null);\r\n        try {\r\n          const response = await api.post('/paypal/create-order', { plan: selectedPlan });\r\n          const orderData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n          return orderData.id;\r\n        } catch (err) {\r\n          setError(`Erreur lors de l'initialisation du paiement pour le plan ${plans[selectedPlan].label}.`);\r\n          return Promise.reject(err);\r\n        }\r\n      },\r\n      onApprove: async (data) => {\r\n        setError(null);\r\n        try {\r\n          const response = await api.post(`/paypal/capture-order/${data.orderID}`);\r\n          const captureData = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\r\n\r\n          if (captureData.status === 'COMPLETED') {\r\n            setSuccess(true);\r\n            localStorage.setItem('role', 'PREMIUM');\r\n            setTimeout(() => navigate('/tableauUtilisateur'), 3000);\r\n          } else {\r\n            setError(`Paiement non complété. Statut: ${captureData.status}`);\r\n          }\r\n        } catch {\r\n          setError(\"Erreur lors de la validation du paiement.\");\r\n        }\r\n      },\r\n      onCancel: () => setError(\"Le paiement a été annulé.\"),\r\n      onError: () => setError(\"Une erreur est survenue avec PayPal.\"),\r\n    }).render('#paypal-button-container');\r\n  };\r\n\r\n  const currentPlan = plans[selectedPlan];\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gradient-to-tr from-indigo-50 via-white to-indigo-50 px-4 py-12\">\r\n        <div className=\"max-w-xl w-full bg-white rounded-xl shadow-xl p-8 md:p-12 border border-indigo-200\">\r\n          <h1 className=\"text-3xl font-extrabold text-indigo-800 mb-4 text-center\">Devenez Membre Premium !</h1>\r\n          <p className=\"text-center text-gray-700 mb-8 leading-relaxed\">\r\n            Débloquez un accès illimité à toutes nos ressources exclusives : exercices avancés, vidéos guidées, podcasts experts, et plus encore.\r\n          </p>\r\n\r\n          {/* Choix des plans */}\r\n          <div className=\"flex justify-center space-x-3 mb-8 flex-wrap\">\r\n            {Object.keys(plans).map((planKey) => (\r\n              <button\r\n                key={planKey}\r\n                onClick={() => setSelectedPlan(planKey)}\r\n                className={`px-5 py-2 rounded-full font-semibold transition-transform duration-300 focus:outline-none ${\r\n                  selectedPlan === planKey\r\n                    ? 'bg-indigo-700 text-white shadow-lg scale-105'\r\n                    : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\r\n                }`}\r\n              >\r\n                {plans[planKey].label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Détails du plan sélectionné */}\r\n          <div className=\"text-center mb-8\">\r\n            <p className=\"text-5xl font-extrabold text-indigo-900 mb-2\">\r\n              {currentPlan.price.toFixed(2)} € <span className=\"text-lg text-gray-500 font-normal\">/ {currentPlan.duration}</span>\r\n            </p>\r\n            <p className=\"text-sm text-gray-600 max-w-md mx-auto\">{currentPlan.description}</p>\r\n          </div>\r\n\r\n          {/* Affichage du paiement */}\r\n          <div className=\"flex flex-col items-center\">\r\n            {loading ? (\r\n              <div className=\"flex items-center space-x-2 text-indigo-600 font-semibold text-sm animate-pulse\">\r\n                <svg\r\n                  className=\"w-5 h-5 text-indigo-500 animate-spin\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <circle\r\n                    className=\"opacity-25\"\r\n                    cx=\"12\"\r\n                    cy=\"12\"\r\n                    r=\"10\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"4\"\r\n                  ></circle>\r\n                  <path\r\n                    className=\"opacity-75\"\r\n                    fill=\"currentColor\"\r\n                    d=\"M4 12a8 8 0 018-8v8H4z\"\r\n                  ></path>\r\n                </svg>\r\n                Chargement du bouton de paiement...\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded mb-4 max-w-md text-center\">\r\n                {error}\r\n              </div>\r\n            ) : success ? (\r\n              <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded mb-4 max-w-md text-center font-semibold\">\r\n                Paiement réussi ! Vous êtes maintenant membre Premium. Redirection en cours...\r\n              </div>\r\n            ) : (\r\n              <div id=\"paypal-button-container\" className=\"w-full max-w-xs\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DevenirPremium;\r\n"
        }
    ]
}