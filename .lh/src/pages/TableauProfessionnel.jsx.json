{
    "sourceFile": "src/pages/TableauProfessionnel.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1750969155792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750971538473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n   if (loading)\r\n     return (\r\n       <Layout>\r\n         <div className=\"text-center p-8 text-blue-600 dark:text-blue-400\">\r\n-          Chargement...\r\n+         \r\n         </div>\r\n       </Layout>\r\n     );\r\n \r\n"
                },
                {
                    "date": 1750971574560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,17 +84,9 @@\n \r\n             {/* Carte d'identité */}\r\n             <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n               <UserCheck className=\"w-8 h-8 text-indigo-600\" />\r\n-              <div>\r\n-                <p className=\"text-gray-700 dark:text-gray-200\">\r\n-                  <span className=\"font-semibold\">Email :</span> {currentUser?.email}\r\n-                </p>\r\n-                <p className=\"text-gray-700 dark:text-gray-200\">\r\n-                  <span className=\"font-semibold\">Rôle :</span>{' '}\r\n-                  <span className=\"text-indigo-700 font-semibold\">{currentUser?.role}</span>\r\n-                </p>\r\n-              </div>\r\n+             \r\n             </div>\r\n \r\n             {/* Présentation */}\r\n             <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md\">\r\n"
                },
                {
                    "date": 1750971581864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,17 @@\n \r\n             {/* Carte d'identité */}\r\n             <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n               <UserCheck className=\"w-8 h-8 text-indigo-600\" />\r\n-             \r\n+              <div>\r\n+                <p className=\"text-gray-700 dark:text-gray-200\">\r\n+                  <span className=\"font-semibold\">Email :</span> {currentUser?.email}\r\n+                </p>\r\n+                <p className=\"text-gray-700 dark:text-gray-200\">\r\n+                  <span className=\"font-semibold\">Rôle :</span>{' '}\r\n+                  <span className=\"text-indigo-700 font-semibold\">{currentUser?.role}</span>\r\n+                </p>\r\n+              </div>\r\n             </div>\r\n \r\n             {/* Présentation */}\r\n             <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md\">\r\n"
                },
                {
                    "date": 1750971733114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,277 +1,230 @@\n-import React, { useState, useEffect } from 'react';\r\n-import { useNavigate } from 'react-router-dom'; // Import de useNavigate pour la redirection\r\n-import Layout from '../components/commun/Layout';\r\n-import Reservations from '../components/professionel/Reservations';\r\n-import Consultations from '../components/professionel/Consultations';\r\n-import Disponibilite from '../components/professionel/Disponibilite';\r\n+import React, { useEffect, useState } from 'react';\r\n+import { getReservations, updateReservationStatus } from '../../services/servicePsy';\r\n+import { CheckCircle, XCircle } from 'lucide-react';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n \r\n-import {\r\n-  CalendarDays,\r\n-  UserCheck,\r\n-  Info,\r\n-  ChevronsLeft,\r\n-  ChevronsRight,\r\n-  Moon,\r\n-  Sun,\r\n-  XCircle,\r\n-  Smile\r\n-} from 'lucide-react';\r\n+const Reservations = ({ proId }) => {\r\n+  const [reservations, setReservations] = useState([]);\r\n+  const [filtre, setFiltre] = useState('TOUTES');\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+  const [updatingId, setUpdatingId] = useState(null);\r\n \r\n-// IMPORT DE LA FONCTION POUR LIRE L'UTILISATEUR DANS LOCALSTORAGE\r\n-import { getCurrentUserInfo } from '../services/serviceAuth';\r\n-\r\n-const TableauProfessionnel = () => {\r\n-  const navigate = useNavigate();\r\n-\r\n-  const [currentUser, setCurrentUser] = useState(null);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [globalError, setGlobalError] = useState(null);\r\n-  const [activeTab, setActiveTab] = useState('informations');\r\n-  const [sidebarReduced, setSidebarReduced] = useState(false);\r\n-  const [darkMode, setDarkMode] = useState(() => {\r\n-    if (typeof window !== 'undefined') {\r\n-      return localStorage.getItem('darkMode') === 'true';\r\n+  const fetchReservations = async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const data = await getReservations(proId);\r\n+      setReservations(data);\r\n+      setError(null);\r\n+    } catch (err) {\r\n+      setError(\"Erreur lors du chargement des réservations.\");\r\n+      setReservations([]);\r\n+    } finally {\r\n+      setLoading(false);\r\n     }\r\n-    return false;\r\n-  });\r\n+  };\r\n \r\n   useEffect(() => {\r\n-    if (darkMode) {\r\n-      document.documentElement.classList.add('dark');\r\n-      localStorage.setItem('darkMode', 'true');\r\n+    if (proId) {\r\n+      fetchReservations();\r\n     } else {\r\n-      document.documentElement.classList.remove('dark');\r\n-      localStorage.setItem('darkMode', 'false');\r\n+      setLoading(false);\r\n+      setError(\"ID professionnel manquant.\");\r\n     }\r\n-  }, [darkMode]);\r\n+  }, [proId]);\r\n \r\n-  useEffect(() => {\r\n-    const fetchUserData = () => {\r\n-      try {\r\n-        const user = getCurrentUserInfo();\r\n-        if (!user || !(user.role === 'PSYCHOLOGUE' || user.role === 'PSYCHIATRE')) {\r\n-          setGlobalError(\"Accès refusé : Vous n'êtes pas un professionnel de santé mentale ou non connecté.\");\r\n-          navigate('/connexion'); // redirection vers page de connexion\r\n-        } else {\r\n-          setCurrentUser(user);\r\n-          setGlobalError(null);\r\n-        }\r\n-      } catch (error) {\r\n-        setCurrentUser(null);\r\n-        setGlobalError(\"Erreur lors du chargement de l'utilisateur.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n+  const handleUpdateStatus = async (id, status) => {\r\n+    setUpdatingId(id);\r\n+    try {\r\n+      await updateReservationStatus(id, status);\r\n+      await fetchReservations();\r\n+      if (status === 'VALIDE') {\r\n+        toast.success(\"La réservation a été validée.\");\r\n+      } else if (status === 'REFUSE') {\r\n+        toast.error(\"La réservation a été refusée.\");\r\n       }\r\n-    };\r\n-    fetchUserData();\r\n-  }, [navigate]);\r\n+    } catch (err) {\r\n+      setError(\"Erreur lors de la mise à jour du statut.\");\r\n+      toast.error(\"Erreur lors de la mise à jour.\");\r\n+    } finally {\r\n+      setUpdatingId(null);\r\n+    }\r\n+  };\r\n \r\n-  const renderSection = () => {\r\n-    switch (activeTab) {\r\n-      case 'informations':\r\n-        return (\r\n-          <div className=\"space-y-6\">\r\n-            {/* Carte de bienvenue */}\r\n-            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n-              <Smile className=\"w-10 h-10 text-green-500\" />\r\n-              <div>\r\n-                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">\r\n-                  Bonjour, <span className=\"text-indigo-700\">{currentUser?.prenom} {currentUser?.nom}</span>\r\n-                </h2>\r\n-                <p className=\"text-gray-600 dark:text-gray-300\">Bienvenue dans votre espace professionnel PsyConnect.</p>\r\n-              </div>\r\n-            </div>\r\n+  const mapStatutValidation = (reservation) => {\r\n+    if (reservation.statut === 'PAYEE' || reservation.statut === 'EN_ATTENTE_PAIEMENT') {\r\n+      return 'VALIDE';\r\n+    }\r\n+    if (reservation.statut === 'REFUSE' || reservation.statut === 'ANNULEE') {\r\n+      return 'REFUSE';\r\n+    }\r\n+    return 'EN_ATTENTE';\r\n+  };\r\n \r\n-            {/* Carte d'identité */}\r\n-            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n-              <UserCheck className=\"w-8 h-8 text-indigo-600\" />\r\n-              <div>\r\n-                <p className=\"text-gray-700 dark:text-gray-200\">\r\n-                  <span className=\"font-semibold\">Email :</span> {currentUser?.email}\r\n-                </p>\r\n-                <p className=\"text-gray-700 dark:text-gray-200\">\r\n-                  <span className=\"font-semibold\">Rôle :</span>{' '}\r\n-                  <span className=\"text-indigo-700 font-semibold\">{currentUser?.role}</span>\r\n-                </p>\r\n-              </div>\r\n-            </div>\r\n+  const formatHeure = (heure) => {\r\n+    if (!heure) return '';\r\n+    const [h, m] = heure.split(':');\r\n+    return `${h}h${m}`;\r\n+  };\r\n \r\n-            {/* Présentation */}\r\n-            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md\">\r\n-              <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">Présentation</h3>\r\n-              <ul className=\"list-disc ml-6 space-y-2 text-gray-700 dark:text-gray-300\">\r\n-                <li className=\"flex items-center gap-2\">\r\n-                  <CalendarDays className=\"w-5 h-5 text-teal-500\" />\r\n-                  Gérer vos disponibilités\r\n-                </li>\r\n-                <li className=\"flex items-center gap-2\">\r\n-                  <UserCheck className=\"w-5 h-5 text-pink-500\" />\r\n-                  Valider ou refuser les réservations de consultations\r\n-                </li>\r\n-                <li className=\"flex items-center gap-2\">\r\n-                  <Info className=\"w-5 h-5 text-blue-500\" />\r\n-                  Accéder à vos consultations et profils patients\r\n-                </li>\r\n-              </ul>\r\n-              <p className=\"mt-4 text-gray-700 dark:text-gray-300\">\r\n-                Utilisez le menu pour naviguer entre les sections.\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n-        );\r\n-      case 'disponibilites':\r\n-        return <Disponibilite proId={currentUser?.id} />;\r\n-      case 'reservations':\r\n-        return <Reservations proId={currentUser?.id} />;\r\n-      case 'consultations':\r\n-        return <Consultations />;\r\n+  const getStatutMessage = (statut) => {\r\n+    switch (statut) {\r\n+      case 'VALIDE':\r\n+        return <span className=\"text-green-600 font-semibold\">Validée</span>;\r\n+      case 'REFUSE':\r\n+        return <span className=\"text-red-600 font-semibold\">Refusée</span>;\r\n       default:\r\n-        return <p>Onglet non reconnu</p>;\r\n+        return <span className=\"text-gray-600 font-semibold\">En attente</span>;\r\n     }\r\n   };\r\n \r\n-  if (loading)\r\n-    return (\r\n-      <Layout>\r\n-        <div className=\"text-center p-8 text-blue-600 dark:text-blue-400\">\r\n-         \r\n-        </div>\r\n-      </Layout>\r\n-    );\r\n+  const reservationsFiltrees = reservations.filter((r) =>\r\n+    filtre === 'TOUTES' ? true : mapStatutValidation(r) === filtre\r\n+  );\r\n \r\n-  if (globalError && !currentUser)\r\n-    return (\r\n-      <Layout>\r\n-        <div className=\"p-6 text-red-600 dark:text-red-400\">{globalError}</div>\r\n-      </Layout>\r\n-    );\r\n+  const renderActions = (id, statut) => {\r\n+    const btnStyle = \"p-0 m-0 bg-transparent border-none focus:outline-none hover:scale-110 transition-transform\";\r\n \r\n+    switch (statut) {\r\n+      case 'EN_ATTENTE':\r\n+        return (\r\n+          <>\r\n+            <button\r\n+              onClick={() => handleUpdateStatus(id, 'VALIDE')}\r\n+              className={`${btnStyle} text-green-600`}\r\n+              title=\"Valider\"\r\n+              disabled={updatingId === id}\r\n+            >\r\n+              <CheckCircle size={20} />\r\n+            </button>\r\n+            <button\r\n+              onClick={() => handleUpdateStatus(id, 'REFUSE')}\r\n+              className={`${btnStyle} text-red-600`}\r\n+              title=\"Refuser\"\r\n+              disabled={updatingId === id}\r\n+            >\r\n+              <XCircle size={20} />\r\n+            </button>\r\n+          </>\r\n+        );\r\n+      case 'VALIDE':\r\n+        return (\r\n+          <button\r\n+            onClick={() => handleUpdateStatus(id, 'REFUSE')}\r\n+            className={`${btnStyle} text-red-600`}\r\n+            title=\"Refuser\"\r\n+            disabled={updatingId === id}\r\n+          >\r\n+            <XCircle size={20} />\r\n+          </button>\r\n+        );\r\n+      case 'REFUSE':\r\n+        return (\r\n+          <button\r\n+            onClick={() => handleUpdateStatus(id, 'VALIDE')}\r\n+            className={`${btnStyle} text-green-600`}\r\n+            title=\"Valider\"\r\n+            disabled={updatingId === id}\r\n+          >\r\n+            <CheckCircle size={20} />\r\n+          </button>\r\n+        );\r\n+      default:\r\n+        return null;\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <Layout>\r\n-      <div className=\"flex min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\r\n-        {/* Sidebar */}\r\n-        <nav\r\n-          className={`flex flex-col justify-between bg-gradient-to-b from-blue-800 to-blue-600 text-white shadow-lg\r\n-            transition-width duration-300 ease-in-out\r\n-            ${sidebarReduced ? 'w-20' : 'w-64'}\r\n-          `}\r\n-        >\r\n\\ No newline at end of file\n-          {/* User info */}\r\n-          <div className=\"flex flex-col items-center p-3 border-b border-blue-500 space-y-1\">\r\n-            {currentUser?.photoUrl ? (\r\n-              <img\r\n-                src={currentUser.photoUrl}\r\n-                alt=\"pro\"\r\n-                className=\"w-14 h-14 rounded-full\"\r\n-              />\r\n-            ) : (\r\n-              <div className=\"w-14 h-14 bg-blue-500 rounded-full flex items-center justify-center text-white text-lg font-semibold\">\r\n-                {currentUser?.prenom?.[0] || 'P'}\r\n-              </div>\r\n-            )}\r\n+    <div className=\"max-w-5xl mx-auto p-4\">\r\n+      <h2 className=\"text-2xl font-semibold text-blue-700 mb-6 flex items-center gap-2\">\r\n+        <CheckCircle size={24} /> Mes réservations\r\n+      </h2>\r\n \r\n-            {!sidebarReduced && (\r\n-              <>\r\n-                <div className=\"flex gap-1 font-semibold text-base leading-tight justify-center\">\r\n-                  <span>{currentUser?.prenom}</span>\r\n-                  <span>{currentUser?.nom}</span>\r\n-                </div>\r\n-                <span className=\"text-blue-300 text-xs\">Professionnel</span>\r\n-              </>\r\n-            )}\r\n-          </div>\r\n+      {error && <div className=\"text-red-500 mb-4\">{error}</div>}\r\n \r\n-          {/* Nav items */}\r\n-          <div className=\"flex-grow mt-1 space-y-1 px-2\">\r\n-            <NavItem\r\n-              icon={<Info size={20} />}\r\n-              label=\"Informations\"\r\n-              active={activeTab === 'informations'}\r\n-              onClick={() => setActiveTab('informations')}\r\n-              reduced={sidebarReduced}\r\n-            />\r\n-            <NavItem\r\n-              icon={<CalendarDays size={20} />}\r\n-              label=\"Disponibilités\"\r\n-              active={activeTab === 'disponibilites'}\r\n-              onClick={() => setActiveTab('disponibilites')}\r\n-              reduced={sidebarReduced}\r\n-            />\r\n-            <NavItem\r\n-              icon={<UserCheck size={20} />}\r\n-              label=\"Réservations\"\r\n-              active={activeTab === 'reservations'}\r\n-              onClick={() => setActiveTab('reservations')}\r\n-              reduced={sidebarReduced}\r\n-            />\r\n-            <NavItem\r\n-              icon={<CalendarDays size={20} />}\r\n-              label=\"Consultations\"\r\n-              active={activeTab === 'consultations'}\r\n-              onClick={() => setActiveTab('consultations')}\r\n-              reduced={sidebarReduced}\r\n-            />\r\n-          </div>\r\n+      <div className=\"mb-4 flex gap-2 flex-wrap\">\r\n+        {['TOUTES', 'EN_ATTENTE', 'VALIDE', 'REFUSE'].map((f) => (\r\n+          <button\r\n+            key={f}\r\n+            onClick={() => setFiltre(f)}\r\n+            className={`px-3 py-1 rounded-full text-sm font-medium transition-all duration-150 ${\r\n+              filtre === f\r\n+                ? 'bg-blue-600 text-white shadow-md'\r\n+                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n+            }`}\r\n+          >\r\n+            {f === 'TOUTES'\r\n+              ? 'Toutes'\r\n+              : f === 'EN_ATTENTE'\r\n+              ? 'En attente'\r\n+              : f === 'VALIDE'\r\n+              ? 'Validées'\r\n+              : 'Refusées'}\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n \r\n-          {/* Dark mode toggle */}\r\n-          <div className=\"flex flex-col items-center gap-1 px-2 mt-2\">\r\n-            {!sidebarReduced ? (\r\n-              <button\r\n-                onClick={() => setDarkMode(!darkMode)}\r\n-                className=\"flex items-center gap-2 text-blue-200 hover:text-white transition px-4 py-2 rounded w-full justify-center bg-blue-700 dark:bg-blue-900\"\r\n-                aria-label=\"Toggle mode sombre\"\r\n-              >\r\n-                {darkMode ? <Sun size={18} /> : <Moon size={18} />}\r\n-                <span>{darkMode ? 'Clair' : 'Sombre'}</span>\r\n-              </button>\r\n-            ) : (\r\n-              <button\r\n-                onClick={() => setDarkMode(!darkMode)}\r\n-                className=\"text-blue-200 hover:text-white transition p-2 rounded\"\r\n-                aria-label=\"Toggle mode sombre\"\r\n-              >\r\n-                {darkMode ? <Sun size={20} /> : <Moon size={20} />}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n+      {loading ? (\r\n+        <p className=\"text-blue-600\">Chargement...</p>\r\n+      ) : reservationsFiltrees.length === 0 ? (\r\n+        <p className=\"text-gray-500\">Aucune réservation</p>\r\n+      ) : (\r\n+        <div className=\"overflow-x-auto rounded-lg shadow\">\r\n+          <table className=\"w-full border-collapse\">\r\n+            <thead className=\"bg-blue-50\">\r\n+              <tr>\r\n+                <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-600\">Date</th>\r\n+                <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-600\">Heure</th>\r\n+                <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-600\">Utilisateur</th>\r\n+                <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-600\">Statut</th>\r\n+                <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-600\">Actions</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody className=\"bg-white text-sm\">\r\n+              {reservationsFiltrees.map((reservation, index) => {\r\n+                const statutMapped = mapStatutValidation(reservation);\r\n+                const utilisateurNomPrenom = reservation.utilisateur\r\n+                  ? `${reservation.utilisateur.prenom || ''} ${reservation.utilisateur.nom || ''}`.trim()\r\n+                  : 'Utilisateur inconnu';\r\n \r\n-          {/* Sidebar toggle */}\r\n-          <div className=\"p-1 border-t border-blue-500 flex justify-center mt-2 mb-4\">\r\n-            <button\r\n-              onClick={() => setSidebarReduced(!sidebarReduced)}\r\n-              className=\"text-blue-200 hover:text-white transition-transform duration-200 ease-in-out\"\r\n-              aria-label={sidebarReduced ? 'Ouvrir sidebar' : 'Réduire sidebar'}\r\n-              style={{ transformOrigin: 'center' }}\r\n-            >\r\n-              {sidebarReduced ? <ChevronsRight size={24} /> : <ChevronsLeft size={24} />}\r\n-            </button>\r\n-          </div>\r\n-        </nav>\r\n+                return (\r\n+                  <tr\r\n+                    key={reservation.id}\r\n+                    className={`border-t transition-all duration-150 ${\r\n+                      index % 2 === 0 ? 'bg-blue-50/20' : 'bg-white'\r\n+                    } hover:bg-blue-50`}\r\n+                  >\r\n+                    <td className=\"px-4 py-3 font-medium text-blue-700\">\r\n+                      {new Date(reservation.dateReservation).toLocaleDateString('fr-FR')}\r\n+                    </td>\r\n+                    <td className=\"px-4 py-3 font-medium text-blue-700\">\r\n+                      {formatHeure(reservation.heureConsultation)}\r\n+                    </td>\r\n+                    <td className=\"px-4 py-3 font-medium text-blue-700\">{utilisateurNomPrenom}</td>\r\n+                    <td className=\"px-4 py-3\">{getStatutMessage(statutMapped)}</td>\r\n+                    <td className=\"px-4 py-3 flex gap-2 items-center\">{renderActions(reservation.id, statutMapped)}</td>\r\n+                  </tr>\r\n+                );\r\n+              })}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+      )}\r\n \r\n-        {/* Contenu principal */}\r\n-        <main className=\"flex-grow p-6 text-gray-900 dark:text-gray-100 transition-colors duration-300\">\r\n-          {globalError && (\r\n-            <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-400 px-4 py-2 rounded flex items-center gap-2 mb-4\">\r\n-              <XCircle size={20} />\r\n-              <span>{globalError}</span>\r\n-            </div>\r\n-          )}\r\n-          {renderSection()}\r\n-        </main>\r\n-      </div>\r\n-    </Layout>\r\n+      <ToastContainer\r\n+        position=\"top-right\"\r\n+        autoClose={2000}\r\n+        hideProgressBar={false}\r\n+        newestOnTop\r\n+        closeOnClick\r\n+        pauseOnFocusLoss\r\n+        draggable\r\n+        pauseOnHover\r\n+        theme=\"colored\"\r\n+      />\r\n+    </div>\r\n   );\r\n };\r\n \r\n-const NavItem = ({ icon, label, active, onClick, reduced }) => (\r\n-  <button\r\n-    onClick={onClick}\r\n-    className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-200 \r\n-      ${active ? 'bg-blue-900 dark:bg-blue-700' : 'hover:bg-blue-700 dark:hover:bg-blue-800'} ${reduced ? 'justify-center' : ''}`}\r\n-  >\r\n-    {icon}\r\n-    {!reduced && <span>{label}</span>}\r\n-  </button>\r\n-);\r\n-\r\n-export default TableauProfessionnel;\n+export default Reservations;\r\n"
                }
            ],
            "date": 1750969155792,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import de useNavigate pour la redirection\r\nimport Layout from '../components/commun/Layout';\r\nimport Reservations from '../components/professionel/Reservations';\r\nimport Consultations from '../components/professionel/Consultations';\r\nimport Disponibilite from '../components/professionel/Disponibilite';\r\n\r\nimport {\r\n  CalendarDays,\r\n  UserCheck,\r\n  Info,\r\n  ChevronsLeft,\r\n  ChevronsRight,\r\n  Moon,\r\n  Sun,\r\n  XCircle,\r\n  Smile\r\n} from 'lucide-react';\r\n\r\n// IMPORT DE LA FONCTION POUR LIRE L'UTILISATEUR DANS LOCALSTORAGE\r\nimport { getCurrentUserInfo } from '../services/serviceAuth';\r\n\r\nconst TableauProfessionnel = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [globalError, setGlobalError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('informations');\r\n  const [sidebarReduced, setSidebarReduced] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('darkMode') === 'true';\r\n    }\r\n    return false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('darkMode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('darkMode', 'false');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = () => {\r\n      try {\r\n        const user = getCurrentUserInfo();\r\n        if (!user || !(user.role === 'PSYCHOLOGUE' || user.role === 'PSYCHIATRE')) {\r\n          setGlobalError(\"Accès refusé : Vous n'êtes pas un professionnel de santé mentale ou non connecté.\");\r\n          navigate('/connexion'); // redirection vers page de connexion\r\n        } else {\r\n          setCurrentUser(user);\r\n          setGlobalError(null);\r\n        }\r\n      } catch (error) {\r\n        setCurrentUser(null);\r\n        setGlobalError(\"Erreur lors du chargement de l'utilisateur.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  const renderSection = () => {\r\n    switch (activeTab) {\r\n      case 'informations':\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            {/* Carte de bienvenue */}\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n              <Smile className=\"w-10 h-10 text-green-500\" />\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">\r\n                  Bonjour, <span className=\"text-indigo-700\">{currentUser?.prenom} {currentUser?.nom}</span>\r\n                </h2>\r\n                <p className=\"text-gray-600 dark:text-gray-300\">Bienvenue dans votre espace professionnel PsyConnect.</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Carte d'identité */}\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md flex items-center gap-4\">\r\n              <UserCheck className=\"w-8 h-8 text-indigo-600\" />\r\n              <div>\r\n                <p className=\"text-gray-700 dark:text-gray-200\">\r\n                  <span className=\"font-semibold\">Email :</span> {currentUser?.email}\r\n                </p>\r\n                <p className=\"text-gray-700 dark:text-gray-200\">\r\n                  <span className=\"font-semibold\">Rôle :</span>{' '}\r\n                  <span className=\"text-indigo-700 font-semibold\">{currentUser?.role}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Présentation */}\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-md\">\r\n              <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">Présentation</h3>\r\n              <ul className=\"list-disc ml-6 space-y-2 text-gray-700 dark:text-gray-300\">\r\n                <li className=\"flex items-center gap-2\">\r\n                  <CalendarDays className=\"w-5 h-5 text-teal-500\" />\r\n                  Gérer vos disponibilités\r\n                </li>\r\n                <li className=\"flex items-center gap-2\">\r\n                  <UserCheck className=\"w-5 h-5 text-pink-500\" />\r\n                  Valider ou refuser les réservations de consultations\r\n                </li>\r\n                <li className=\"flex items-center gap-2\">\r\n                  <Info className=\"w-5 h-5 text-blue-500\" />\r\n                  Accéder à vos consultations et profils patients\r\n                </li>\r\n              </ul>\r\n              <p className=\"mt-4 text-gray-700 dark:text-gray-300\">\r\n                Utilisez le menu pour naviguer entre les sections.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'disponibilites':\r\n        return <Disponibilite proId={currentUser?.id} />;\r\n      case 'reservations':\r\n        return <Reservations proId={currentUser?.id} />;\r\n      case 'consultations':\r\n        return <Consultations />;\r\n      default:\r\n        return <p>Onglet non reconnu</p>;\r\n    }\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <Layout>\r\n        <div className=\"text-center p-8 text-blue-600 dark:text-blue-400\">\r\n          Chargement...\r\n        </div>\r\n      </Layout>\r\n    );\r\n\r\n  if (globalError && !currentUser)\r\n    return (\r\n      <Layout>\r\n        <div className=\"p-6 text-red-600 dark:text-red-400\">{globalError}</div>\r\n      </Layout>\r\n    );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"flex min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\r\n        {/* Sidebar */}\r\n        <nav\r\n          className={`flex flex-col justify-between bg-gradient-to-b from-blue-800 to-blue-600 text-white shadow-lg\r\n            transition-width duration-300 ease-in-out\r\n            ${sidebarReduced ? 'w-20' : 'w-64'}\r\n          `}\r\n        >\r\n          {/* User info */}\r\n          <div className=\"flex flex-col items-center p-3 border-b border-blue-500 space-y-1\">\r\n            {currentUser?.photoUrl ? (\r\n              <img\r\n                src={currentUser.photoUrl}\r\n                alt=\"pro\"\r\n                className=\"w-14 h-14 rounded-full\"\r\n              />\r\n            ) : (\r\n              <div className=\"w-14 h-14 bg-blue-500 rounded-full flex items-center justify-center text-white text-lg font-semibold\">\r\n                {currentUser?.prenom?.[0] || 'P'}\r\n              </div>\r\n            )}\r\n\r\n            {!sidebarReduced && (\r\n              <>\r\n                <div className=\"flex gap-1 font-semibold text-base leading-tight justify-center\">\r\n                  <span>{currentUser?.prenom}</span>\r\n                  <span>{currentUser?.nom}</span>\r\n                </div>\r\n                <span className=\"text-blue-300 text-xs\">Professionnel</span>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Nav items */}\r\n          <div className=\"flex-grow mt-1 space-y-1 px-2\">\r\n            <NavItem\r\n              icon={<Info size={20} />}\r\n              label=\"Informations\"\r\n              active={activeTab === 'informations'}\r\n              onClick={() => setActiveTab('informations')}\r\n              reduced={sidebarReduced}\r\n            />\r\n            <NavItem\r\n              icon={<CalendarDays size={20} />}\r\n              label=\"Disponibilités\"\r\n              active={activeTab === 'disponibilites'}\r\n              onClick={() => setActiveTab('disponibilites')}\r\n              reduced={sidebarReduced}\r\n            />\r\n            <NavItem\r\n              icon={<UserCheck size={20} />}\r\n              label=\"Réservations\"\r\n              active={activeTab === 'reservations'}\r\n              onClick={() => setActiveTab('reservations')}\r\n              reduced={sidebarReduced}\r\n            />\r\n            <NavItem\r\n              icon={<CalendarDays size={20} />}\r\n              label=\"Consultations\"\r\n              active={activeTab === 'consultations'}\r\n              onClick={() => setActiveTab('consultations')}\r\n              reduced={sidebarReduced}\r\n            />\r\n          </div>\r\n\r\n          {/* Dark mode toggle */}\r\n          <div className=\"flex flex-col items-center gap-1 px-2 mt-2\">\r\n            {!sidebarReduced ? (\r\n              <button\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                className=\"flex items-center gap-2 text-blue-200 hover:text-white transition px-4 py-2 rounded w-full justify-center bg-blue-700 dark:bg-blue-900\"\r\n                aria-label=\"Toggle mode sombre\"\r\n              >\r\n                {darkMode ? <Sun size={18} /> : <Moon size={18} />}\r\n                <span>{darkMode ? 'Clair' : 'Sombre'}</span>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                className=\"text-blue-200 hover:text-white transition p-2 rounded\"\r\n                aria-label=\"Toggle mode sombre\"\r\n              >\r\n                {darkMode ? <Sun size={20} /> : <Moon size={20} />}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Sidebar toggle */}\r\n          <div className=\"p-1 border-t border-blue-500 flex justify-center mt-2 mb-4\">\r\n            <button\r\n              onClick={() => setSidebarReduced(!sidebarReduced)}\r\n              className=\"text-blue-200 hover:text-white transition-transform duration-200 ease-in-out\"\r\n              aria-label={sidebarReduced ? 'Ouvrir sidebar' : 'Réduire sidebar'}\r\n              style={{ transformOrigin: 'center' }}\r\n            >\r\n              {sidebarReduced ? <ChevronsRight size={24} /> : <ChevronsLeft size={24} />}\r\n            </button>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Contenu principal */}\r\n        <main className=\"flex-grow p-6 text-gray-900 dark:text-gray-100 transition-colors duration-300\">\r\n          {globalError && (\r\n            <div className=\"bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-400 px-4 py-2 rounded flex items-center gap-2 mb-4\">\r\n              <XCircle size={20} />\r\n              <span>{globalError}</span>\r\n            </div>\r\n          )}\r\n          {renderSection()}\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst NavItem = ({ icon, label, active, onClick, reduced }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={`w-full flex items-center gap-3 px-4 py-2 rounded-lg transition-all duration-200 \r\n      ${active ? 'bg-blue-900 dark:bg-blue-700' : 'hover:bg-blue-700 dark:hover:bg-blue-800'} ${reduced ? 'justify-center' : ''}`}\r\n  >\r\n    {icon}\r\n    {!reduced && <span>{label}</span>}\r\n  </button>\r\n);\r\n\r\nexport default TableauProfessionnel;"
        }
    ]
}