{
    "sourceFile": "src/components/admin/ModerationDiscussions.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 46,
            "patches": [
                {
                    "date": 1749906549850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749906741258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,24 @@\n import React, { useEffect, useState } from 'react';\r\n-import { getDiscussions, supprimerDiscussion, getMessagesPrives, supprimerMessagePrive } from '../../services/serviceAdmin';\r\n+import {\r\n+  getDiscussions,\r\n+  supprimerDiscussion,\r\n+  getMessagesPrives,\r\n+  supprimerMessagePrive,\r\n+} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n-const motsInterdits = [\"suicide\", \"haine\", \"violence\", \"insulte\"];\r\n-\r\n-const contientMotInterdit = (texte) => {\r\n+// Exemple simple de fonction pour détecter un mot interdit dans un texte\r\n+const motsInterdits = ['motinapproprie1', 'motinapproprie2', 'autremot']; // Remplace par ta liste\r\n+function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n-  const txt = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => txt.includes(mot));\r\n-};\r\n+  const texteMinuscule = texte.toLowerCase();\r\n+  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n+}\r\n \r\n const ModerationDiscussions = () => {\r\n   const [forumMessages, setForumMessages] = useState([]);\r\n   const [messagesPrives, setMessagesPrives] = useState([]);\r\n-  const [activeTab, setActiveTab] = useState('forum');\r\n+  const [activeTab, setActiveTab] = useState('forum'); // 'forum' ou 'prive'\r\n \r\n   useEffect(() => {\r\n     fetchForumMessages();\r\n     fetchMessagesPrives();\r\n@@ -21,45 +26,41 @@\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n       const data = await getDiscussions();\r\n-      // filtrer les messages contenant mots interdits\r\n-      const filtres = data.filter(msg => !contientMotInterdit(msg.contenu));\r\n-      setForumMessages(filtres);\r\n+      setForumMessages(data);\r\n     } catch (error) {\r\n-      console.error(\"Erreur lors de la récupération des messages du forum:\", error);\r\n+      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n     }\r\n   };\r\n \r\n   const fetchMessagesPrives = async () => {\r\n     try {\r\n       const data = await getMessagesPrives();\r\n-      // idem filtrage ici\r\n-      const filtres = data.filter(msg => !contientMotInterdit(msg.contenu));\r\n-      setMessagesPrives(filtres);\r\n+      setMessagesPrives(data);\r\n     } catch (error) {\r\n-      console.error(\"Erreur lors de la récupération des messages privés:\", error);\r\n+      console.error('Erreur lors de la récupération des messages privés:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerForum = async (id) => {\r\n-    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce message du forum ?\")) {\r\n+  const handleSupprimerForum = async id => {\r\n+    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce message du forum ?')) {\r\n       try {\r\n         await supprimerDiscussion(id);\r\n         fetchForumMessages();\r\n       } catch (error) {\r\n-        console.error(\"Erreur lors de la suppression du message du forum:\", error);\r\n+        console.error('Erreur lors de la suppression du message du forum:', error);\r\n       }\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerPrive = async (id) => {\r\n-    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce message privé ?\")) {\r\n+  const handleSupprimerPrive = async id => {\r\n+    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce message privé ?')) {\r\n       try {\r\n         await supprimerMessagePrive(id);\r\n         fetchMessagesPrives();\r\n       } catch (error) {\r\n-        console.error(\"Erreur lors de la suppression du message privé:\", error);\r\n+        console.error('Erreur lors de la suppression du message privé:', error);\r\n       }\r\n     }\r\n   };\r\n \r\n@@ -68,43 +69,64 @@\n       {/* Onglets */}\r\n       <div className=\"flex border-b border-gray-200\">\r\n         <button\r\n           onClick={() => setActiveTab('forum')}\r\n-          className={`px-4 py-2 text-sm font-medium ${activeTab === 'forum' ? 'border-b-2 border-blue-500 text-blue-600' : 'text-gray-600 hover:text-gray-800'}`}\r\n+          className={`px-4 py-2 text-sm font-medium ${\r\n+            activeTab === 'forum'\r\n+              ? 'border-b-2 border-blue-500 text-blue-600'\r\n+              : 'text-gray-600 hover:text-gray-800'\r\n+          }`}\r\n         >\r\n           Modération Forum\r\n         </button>\r\n         <button\r\n           onClick={() => setActiveTab('prive')}\r\n-          className={`px-4 py-2 text-sm font-medium ${activeTab === 'prive' ? 'border-b-2 border-blue-500 text-blue-600' : 'text-gray-600 hover:text-gray-800'}`}\r\n+          className={`px-4 py-2 text-sm font-medium ${\r\n+            activeTab === 'prive'\r\n+              ? 'border-b-2 border-blue-500 text-blue-600'\r\n+              : 'text-gray-600 hover:text-gray-800'\r\n+          }`}\r\n         >\r\n           Modération Messagerie Privée\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Contenu onglet */}\r\n+      {/* Contenu onglet actif */}\r\n       <div className=\"mt-4\">\r\n         {activeTab === 'forum' && (\r\n           <div className=\"space-y-3\">\r\n             <h3 className=\"text-lg font-medium text-gray-700\">Messages du Forum</h3>\r\n             <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n               {forumMessages.length === 0 ? (\r\n                 <li className=\"p-4 text-center text-gray-500\">Aucun message de forum à modérer.</li>\r\n               ) : (\r\n-                forumMessages.map(msg => (\r\n-                  <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n-                    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                      <strong className=\"text-gray-800\">{msg.auteur}</strong>: <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                      <span className=\"block text-xs text-gray-500 mt-1\">({new Date(msg.date).toLocaleDateString()} à {msg.heure})</span>\r\n-                    </div>\r\n-                    <button\r\n-                      onClick={() => handleSupprimerForum(msg.id)}\r\n-                      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                forumMessages.map(msg => {\r\n+                  const inapproprie = contientMotInterdit(msg.contenu);\r\n+                  return (\r\n+                    <li\r\n+                      key={msg.id}\r\n+                      className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n                     >\r\n-                      Supprimer\r\n-                    </button>\r\n-                  </li>\r\n-                ))\r\n+                      <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                        <strong className=\"text-gray-800\">{msg.auteur}</strong>:{' '}\r\n+                        {inapproprie ? (\r\n+                          <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                        ) : (\r\n+                          <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                        )}\r\n+                        <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                          ({new Date(msg.date).toLocaleDateString()} à {msg.heure})\r\n+                        </span>\r\n+                      </div>\r\n+                      <button\r\n+                        onClick={() => handleSupprimerForum(msg.id)}\r\n+                        className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                      >\r\n+                        Supprimer\r\n+                      </button>\r\n+                    </li>\r\n+                  );\r\n+                })\r\n               )}\r\n             </ul>\r\n           </div>\r\n         )}\r\n@@ -115,22 +137,36 @@\n             <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n               {messagesPrives.length === 0 ? (\r\n                 <li className=\"p-4 text-center text-gray-500\">Aucun message privé à modérer.</li>\r\n               ) : (\r\n-                messagesPrives.map(msg => (\r\n-                  <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n-                    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                      <strong className=\"text-gray-800\">{msg.expéditeur}</strong> à <strong className=\"text-gray-800\">{msg.destinataire}</strong>: <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                      <span className=\"block text-xs text-gray-500 mt-1\">({new Date(msg.date).toLocaleDateString()} à {msg.heure})</span>\r\n-                    </div>\r\n-                    <button\r\n-                      onClick={() => handleSupprimerPrive(msg.id)}\r\n-                      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                messagesPrives.map(msg => {\r\n+                  const inapproprie = contientMotInterdit(msg.contenu);\r\n+                  return (\r\n+                    <li\r\n+                      key={msg.id}\r\n+                      className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n                     >\r\n-                      Supprimer\r\n-                    </button>\r\n-                  </li>\r\n-                ))\r\n+                      <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                        <strong className=\"text-gray-800\">{msg.expéditeur}</strong> à{' '}\r\n+                        <strong className=\"text-gray-800\">{msg.destinataire}</strong>:{' '}\r\n+                        {inapproprie ? (\r\n+                          <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                        ) : (\r\n+                          <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                        )}\r\n+                        <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                          ({new Date(msg.date).toLocaleDateString()} à {msg.heure})\r\n+                        </span>\r\n+                      </div>\r\n+                      <button\r\n+                        onClick={() => handleSupprimerPrive(msg.id)}\r\n+                        className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                      >\r\n+                        Supprimer\r\n+                      </button>\r\n+                    </li>\r\n+                  );\r\n+                })\r\n               )}\r\n             </ul>\r\n           </div>\r\n         )}\r\n"
                },
                {
                    "date": 1749906768699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   supprimerMessagePrive,\r\n } from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n // Exemple simple de fonction pour détecter un mot interdit dans un texte\r\n-const motsInterdits = ['motinapproprie1', 'motinapproprie2', 'autremot']; // Remplace par ta liste\r\n+const motsInterdits = ['haine', 'motinapproprie2', 'autremot']; // Remplace par ta liste\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n"
                },
                {
                    "date": 1749906775033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   supprimerMessagePrive,\r\n } from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n // Exemple simple de fonction pour détecter un mot interdit dans un texte\r\n-const motsInterdits = ['haine', 'motinapproprie2', 'autremot']; // Remplace par ta liste\r\n+const motsInterdits = ['haine', 'suicide', 'autremot']; // Remplace par ta liste\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n"
                },
                {
                    "date": 1749906781783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   supprimerMessagePrive,\r\n } from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n // Exemple simple de fonction pour détecter un mot interdit dans un texte\r\n-const motsInterdits = ['haine', 'suicide', 'autremot']; // Remplace par ta liste\r\n+const motsInterdits = ['haine', 'suicide', 'viol']; // Remplace par ta liste\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n"
                },
                {
                    "date": 1749906945460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n   getMessagesPrives,\r\n   supprimerMessagePrive,\r\n } from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n-// Exemple simple de fonction pour détecter un mot interdit dans un texte\r\n-const motsInterdits = ['haine', 'suicide', 'viol']; // Remplace par ta liste\r\n+// Liste des mots interdits (à adapter si besoin)\r\n+const motsInterdits = ['haine', 'suicide', 'viol'];\r\n+\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n"
                },
                {
                    "date": 1749907538259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,179 +1,42 @@\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  getDiscussions,\r\n-  supprimerDiscussion,\r\n-  getMessagesPrives,\r\n-  supprimerMessagePrive,\r\n-} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n+// services/serviceAdmin.js\r\n+const API_BASE_URL = 'http://localhost:8080/api'; // adapte selon ton backend\r\n \r\n-// Liste des mots interdits (à adapter si besoin)\r\n-const motsInterdits = ['haine', 'suicide', 'viol'];\r\n+export async function getDiscussions() {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+    credentials: 'include', // si tu utilises cookies pour l'auth\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error('Erreur lors de la récupération des discussions');\r\n+  }\r\n+  return await response.json();\r\n+}\r\n \r\n-function contientMotInterdit(texte) {\r\n-  if (!texte) return false;\r\n-  const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n+export async function getMessagesPrives() {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/tous`, { // adapte si ta route privée est différente\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error('Erreur lors de la récupération des messages privés');\r\n+  }\r\n+  return await response.json();\r\n }\r\n \r\n-const ModerationDiscussions = () => {\r\n-  const [forumMessages, setForumMessages] = useState([]);\r\n-  const [messagesPrives, setMessagesPrives] = useState([]);\r\n-  const [activeTab, setActiveTab] = useState('forum'); // 'forum' ou 'prive'\r\n+export async function supprimerDiscussion(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/sujets/${id}`, {\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error('Erreur lors de la suppression de la discussion');\r\n+  }\r\n+}\r\n \r\n-  useEffect(() => {\r\n-    fetchForumMessages();\r\n-    fetchMessagesPrives();\r\n-  }, []);\r\n-\r\n-  const fetchForumMessages = async () => {\r\n-    try {\r\n-      const data = await getDiscussions();\r\n-      setForumMessages(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const fetchMessagesPrives = async () => {\r\n-    try {\r\n-      const data = await getMessagesPrives();\r\n-      setMessagesPrives(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages privés:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerForum = async id => {\r\n-    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce message du forum ?')) {\r\n-      try {\r\n-        await supprimerDiscussion(id);\r\n-        fetchForumMessages();\r\n-      } catch (error) {\r\n-        console.error('Erreur lors de la suppression du message du forum:', error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerPrive = async id => {\r\n-    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce message privé ?')) {\r\n-      try {\r\n-        await supprimerMessagePrive(id);\r\n-        fetchMessagesPrives();\r\n-      } catch (error) {\r\n-        console.error('Erreur lors de la suppression du message privé:', error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"space-y-4\">\r\n-      {/* Onglets */}\r\n-      <div className=\"flex border-b border-gray-200\">\r\n-        <button\r\n-          onClick={() => setActiveTab('forum')}\r\n-          className={`px-4 py-2 text-sm font-medium ${\r\n-            activeTab === 'forum'\r\n-              ? 'border-b-2 border-blue-500 text-blue-600'\r\n-              : 'text-gray-600 hover:text-gray-800'\r\n-          }`}\r\n-        >\r\n-          Modération Forum\r\n-        </button>\r\n-        <button\r\n-          onClick={() => setActiveTab('prive')}\r\n-          className={`px-4 py-2 text-sm font-medium ${\r\n-            activeTab === 'prive'\r\n-              ? 'border-b-2 border-blue-500 text-blue-600'\r\n-              : 'text-gray-600 hover:text-gray-800'\r\n-          }`}\r\n-        >\r\n-          Modération Messagerie Privée\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Contenu onglet actif */}\r\n-      <div className=\"mt-4\">\r\n-        {activeTab === 'forum' && (\r\n-          <div className=\"space-y-3\">\r\n-            <h3 className=\"text-lg font-medium text-gray-700\">Messages du Forum</h3>\r\n-            <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-              {forumMessages.length === 0 ? (\r\n-                <li className=\"p-4 text-center text-gray-500\">Aucun message de forum à modérer.</li>\r\n-              ) : (\r\n-                forumMessages.map(msg => {\r\n-                  const inapproprie = contientMotInterdit(msg.contenu);\r\n-                  return (\r\n-                    <li\r\n-                      key={msg.id}\r\n-                      className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-                    >\r\n-                      <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                        <strong className=\"text-gray-800\">{msg.auteur}</strong>:{' '}\r\n-                        {inapproprie ? (\r\n-                          <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                        ) : (\r\n-                          <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                        )}\r\n-                        <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                          ({new Date(msg.date).toLocaleDateString()} à {msg.heure})\r\n-                        </span>\r\n-                      </div>\r\n-                      <button\r\n-                        onClick={() => handleSupprimerForum(msg.id)}\r\n-                        className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                      >\r\n-                        Supprimer\r\n-                      </button>\r\n-                    </li>\r\n-                  );\r\n-                })\r\n-              )}\r\n-            </ul>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {activeTab === 'prive' && (\r\n-          <div className=\"space-y-3\">\r\n-            <h3 className=\"text-lg font-medium text-gray-700\">Messages Privés</h3>\r\n-            <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-              {messagesPrives.length === 0 ? (\r\n-                <li className=\"p-4 text-center text-gray-500\">Aucun message privé à modérer.</li>\r\n-              ) : (\r\n-                messagesPrives.map(msg => {\r\n-                  const inapproprie = contientMotInterdit(msg.contenu);\r\n-                  return (\r\n-                    <li\r\n-                      key={msg.id}\r\n-                      className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-                    >\r\n-                      <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                        <strong className=\"text-gray-800\">{msg.expéditeur}</strong> à{' '}\r\n-                        <strong className=\"text-gray-800\">{msg.destinataire}</strong>:{' '}\r\n-                        {inapproprie ? (\r\n-                          <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                        ) : (\r\n-                          <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                        )}\r\n-                        <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                          ({new Date(msg.date).toLocaleDateString()} à {msg.heure})\r\n-                        </span>\r\n-                      </div>\r\n-                      <button\r\n-                        onClick={() => handleSupprimerPrive(msg.id)}\r\n-                        className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                      >\r\n-                        Supprimer\r\n-                      </button>\r\n-                    </li>\r\n-                  );\r\n-                })\r\n-              )}\r\n-            </ul>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ModerationDiscussions;\r\n+export async function supprimerMessagePrive(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/message/${id}`, { // adapte si nécessaire\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error('Erreur lors de la suppression du message privé');\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1749907550069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,17 +10,9 @@\n   }\r\n   return await response.json();\r\n }\r\n \r\n-export async function getMessagesPrives() {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/tous`, { // adapte si ta route privée est différente\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) {\r\n-    throw new Error('Erreur lors de la récupération des messages privés');\r\n-  }\r\n-  return await response.json();\r\n-}\r\n+ \r\n \r\n export async function supprimerDiscussion(id) {\r\n   const response = await fetch(`${API_BASE_URL}/forum/sujets/${id}`, {\r\n     method: 'DELETE',\r\n"
                },
                {
                    "date": 1749907560620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // services/serviceAdmin.js\r\n-const API_BASE_URL = 'http://localhost:8080/api'; // adapte selon ton backend\r\n+const API_BASE_URL = 'http://localhost:/api'; // adapte selon ton backend\r\n \r\n export async function getDiscussions() {\r\n   const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n     credentials: 'include', // si tu utilises cookies pour l'auth\r\n"
                },
                {
                    "date": 1749907591869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // services/serviceAdmin.js\r\n-const API_BASE_URL = 'http://localhost:/api'; // adapte selon ton backend\r\n+const API_BASE_URL = 'http://localhost:8080/api'; // adapte selon ton backend\r\n \r\n export async function getDiscussions() {\r\n   const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n     credentials: 'include', // si tu utilises cookies pour l'auth\r\n@@ -10,9 +10,17 @@\n   }\r\n   return await response.json();\r\n }\r\n \r\n- \r\n+export async function getMessagesPrives() {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/tous`, { // adapte si ta route privée est différente\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error('Erreur lors de la récupération des messages privés');\r\n+  }\r\n+  return await response.json();\r\n+}\r\n \r\n export async function supprimerDiscussion(id) {\r\n   const response = await fetch(`${API_BASE_URL}/forum/sujets/${id}`, {\r\n     method: 'DELETE',\r\n"
                },
                {
                    "date": 1749907665771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,82 @@\n-// services/serviceAdmin.js\r\n-const API_BASE_URL = 'http://localhost:8080/api'; // adapte selon ton backend\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  getDiscussions,\r\n+  supprimerDiscussion\r\n+} from '../../services/serviceAdmin'; // Chemin à adapter\r\n \r\n-export async function getDiscussions() {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n-    credentials: 'include', // si tu utilises cookies pour l'auth\r\n-  });\r\n-  if (!response.ok) {\r\n-    throw new Error('Erreur lors de la récupération des discussions');\r\n-  }\r\n-  return await response.json();\r\n-}\r\n+const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-export async function getMessagesPrives() {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/tous`, { // adapte si ta route privée est différente\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) {\r\n-    throw new Error('Erreur lors de la récupération des messages privés');\r\n-  }\r\n-  return await response.json();\r\n+function contientMotInterdit(texte) {\r\n+  if (!texte) return false;\r\n+  const texteMinuscule = texte.toLowerCase();\r\n+  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n-export async function supprimerDiscussion(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/sujets/${id}`, {\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) {\r\n-    throw new Error('Erreur lors de la suppression de la discussion');\r\n-  }\r\n-}\r\n+const ModerationDiscussions = () => {\r\n+  const [forumMessages, setForumMessages] = useState([]);\r\n \r\n-export async function supprimerMessagePrive(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/message/${id}`, { // adapte si nécessaire\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) {\r\n-    throw new Error('Erreur lors de la suppression du message privé');\r\n-  }\r\n-}\r\n+  useEffect(() => {\r\n+    fetchForumMessages();\r\n+  }, []);\r\n+\r\n+  const fetchForumMessages = async () => {\r\n+    try {\r\n+      const data = await getDiscussions();\r\n+      setForumMessages(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSupprimerForum = async id => {\r\n+    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?')) {\r\n+      try {\r\n+        await supprimerDiscussion(id);\r\n+        fetchForumMessages();\r\n+      } catch (error) {\r\n+        console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"space-y-4\">\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+        {forumMessages.length === 0 ? (\r\n+          <li className=\"p-4 text-center text-gray-500\">Aucun message de forum à modérer.</li>\r\n+        ) : (\r\n+          forumMessages.map(msg => {\r\n+            const inapproprie = contientMotInterdit(msg.contenu);\r\n+            return (\r\n+              <li\r\n+                key={msg.id}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+              >\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{msg.auteur.nom}</strong> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({new Date(msg.dateCreation).toLocaleString()})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n+          })\r\n+        )}\r\n+      </ul>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749907940562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n import {\r\n   getDiscussions,\r\n-  supprimerDiscussion\r\n-} from '../../services/serviceAdmin'; // Chemin à adapter\r\n+  getReponsesSujet,\r\n+  supprimerDiscussion,\r\n+  supprimerReponse\r\n+} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n@@ -13,69 +15,126 @@\n }\r\n \r\n const ModerationDiscussions = () => {\r\n   const [forumMessages, setForumMessages] = useState([]);\r\n+  const [reponses, setReponses] = useState({}); // { sujetId: [reponse1, reponse2] }\r\n \r\n   useEffect(() => {\r\n     fetchForumMessages();\r\n   }, []);\r\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n-      const data = await getDiscussions();\r\n-      setForumMessages(data);\r\n+      const sujets = await getDiscussions();\r\n+      setForumMessages(sujets);\r\n+\r\n+      // Charger toutes les réponses pour chaque sujet\r\n+      const allReponses = {};\r\n+      for (const sujet of sujets) {\r\n+        try {\r\n+          const rep = await getReponsesSujet(sujet.id);\r\n+          allReponses[sujet.id] = rep;\r\n+        } catch (err) {\r\n+          console.error(`Erreur de chargement des réponses pour le sujet ${sujet.id}`, err);\r\n+        }\r\n+      }\r\n+      setReponses(allReponses);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n+      console.error('Erreur lors de la récupération des sujets du forum:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerForum = async id => {\r\n-    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?')) {\r\n+  const handleSupprimerSujet = async (id) => {\r\n+    if (window.confirm(\"Confirmer la suppression de ce sujet ?\")) {\r\n       try {\r\n         await supprimerDiscussion(id);\r\n         fetchForumMessages();\r\n       } catch (error) {\r\n-        console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+        console.error(\"Erreur suppression sujet :\", error);\r\n       }\r\n     }\r\n   };\r\n \r\n+  const handleSupprimerReponse = async (id) => {\r\n+    if (window.confirm(\"Confirmer la suppression de cette réponse ?\")) {\r\n+      try {\r\n+        await supprimerReponse(id);\r\n+        fetchForumMessages();\r\n+      } catch (error) {\r\n+        console.error(\"Erreur suppression réponse :\", error);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"space-y-4\">\r\n+    <div className=\"space-y-6\">\r\n       <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {forumMessages.length === 0 ? (\r\n-          <li className=\"p-4 text-center text-gray-500\">Aucun message de forum à modérer.</li>\r\n-        ) : (\r\n-          forumMessages.map(msg => {\r\n-            const inapproprie = contientMotInterdit(msg.contenu);\r\n-            return (\r\n-              <li\r\n-                key={msg.id}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-              >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{msg.auteur.nom}</strong> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({new Date(msg.dateCreation).toLocaleString()})\r\n+      {forumMessages.length === 0 ? (\r\n+        <p className=\"text-center text-gray-500\">Aucun sujet disponible.</p>\r\n+      ) : (\r\n+        forumMessages.map(sujet => {\r\n+          const sujetInapproprie = contientMotInterdit(sujet.contenu);\r\n+          return (\r\n+            <div key={sujet.id} className=\"border border-gray-200 rounded-md p-4 space-y-2\">\r\n+              <div className=\"flex justify-between items-start\">\r\n+                <div>\r\n+                  <h4 className=\"text-lg font-semibold text-gray-800\">{sujet.titre}</h4>\r\n+                  <p className=\"text-gray-700\">\r\n+                    <strong>{sujet.auteur?.nom}</strong> :{' '}\r\n+                    {sujetInapproprie ? (\r\n+                      <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n+                    ) : (\r\n+                      sujet.contenu\r\n+                    )}\r\n+                  </p>\r\n+                  <span className=\"text-sm text-gray-500\">\r\n+                    {new Date(sujet.dateCreation).toLocaleString()}\r\n                   </span>\r\n                 </div>\r\n                 <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                  onClick={() => handleSupprimerSujet(sujet.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n                 >\r\n-                  Supprimer\r\n+                  Supprimer Sujet\r\n                 </button>\r\n-              </li>\r\n-            );\r\n-          })\r\n-        )}\r\n-      </ul>\r\n+              </div>\r\n+\r\n+              {/* Réponses */}\r\n+              {reponses[sujet.id] && reponses[sujet.id].length > 0 && (\r\n+                <div className=\"pl-4 border-l-2 border-gray-300 space-y-2 mt-2\">\r\n+                  <h5 className=\"text-sm font-medium text-gray-600\">Réponses :</h5>\r\n+                  {reponses[sujet.id].map(rep => {\r\n+                    const repInapproprie = contientMotInterdit(rep.message);\r\n+                    return (\r\n+                      <div key={rep.id} className=\"flex justify-between items-start\">\r\n+                        <div>\r\n+                          <p className=\"text-gray-700\">\r\n+                            <strong>{rep.auteur?.nom}</strong> :{' '}\r\n+                            {repInapproprie ? (\r\n+                              <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n+                            ) : (\r\n+                              rep.message\r\n+                            )}\r\n+                          </p>\r\n+                          <span className=\"text-xs text-gray-500\">\r\n+                            {new Date(rep.dateReponse).toLocaleString()}\r\n+                          </span>\r\n+                        </div>\r\n+                        <button\r\n+                          onClick={() => handleSupprimerReponse(rep.id)}\r\n+                          className=\"bg-red-400 text-white px-2 py-1 rounded-md text-xs hover:bg-red-500\"\r\n+                        >\r\n+                          Supprimer\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          );\r\n+        })\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1749908123683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,139 +2,194 @@\n import {\r\n   getDiscussions,\r\n   getReponsesSujet,\r\n   supprimerDiscussion,\r\n-  supprimerReponse\r\n-} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n+  getTousMessages,\r\n+  supprimerMessagePrive,\r\n+} from '../../services/serviceAdmin';\r\n \r\n+// Mots interdits\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n+  return motsInterdits.some((mot) => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n const ModerationDiscussions = () => {\r\n-  const [forumMessages, setForumMessages] = useState([]);\r\n-  const [reponses, setReponses] = useState({}); // { sujetId: [reponse1, reponse2] }\r\n+  const [sujets, setSujets] = useState([]);\r\n+  const [reponses, setReponses] = useState({});\r\n+  const [messages, setMessages] = useState([]);\r\n+  const [activeTab, setActiveTab] = useState('forum');\r\n \r\n   useEffect(() => {\r\n     fetchForumMessages();\r\n+    fetchMessagesPrives();\r\n   }, []);\r\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n       const sujets = await getDiscussions();\r\n-      setForumMessages(sujets);\r\n+      setSujets(sujets);\r\n \r\n-      // Charger toutes les réponses pour chaque sujet\r\n       const allReponses = {};\r\n       for (const sujet of sujets) {\r\n+        const sujetId = sujet.id || (sujet.sujet && sujet.sujet.id);\r\n+        if (!sujetId) continue;\r\n         try {\r\n-          const rep = await getReponsesSujet(sujet.id);\r\n-          allReponses[sujet.id] = rep;\r\n+          const rep = await getReponsesSujet(sujetId);\r\n+          allReponses[sujetId] = rep;\r\n         } catch (err) {\r\n-          console.error(`Erreur de chargement des réponses pour le sujet ${sujet.id}`, err);\r\n+          console.error(`Erreur de chargement des réponses pour le sujet ${sujetId}`, err);\r\n         }\r\n       }\r\n       setReponses(allReponses);\r\n     } catch (error) {\r\n       console.error('Erreur lors de la récupération des sujets du forum:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerSujet = async (id) => {\r\n-    if (window.confirm(\"Confirmer la suppression de ce sujet ?\")) {\r\n+  const fetchMessagesPrives = async () => {\r\n+    try {\r\n+      const data = await getTousMessages();\r\n+      setMessages(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la récupération des messages privés:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSupprimerForum = async (id) => {\r\n+    if (window.confirm('Supprimer ce sujet ?')) {\r\n       try {\r\n         await supprimerDiscussion(id);\r\n         fetchForumMessages();\r\n       } catch (error) {\r\n-        console.error(\"Erreur suppression sujet :\", error);\r\n+        console.error('Erreur suppression sujet:', error);\r\n       }\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerReponse = async (id) => {\r\n-    if (window.confirm(\"Confirmer la suppression de cette réponse ?\")) {\r\n+  const handleSupprimerPrive = async (id) => {\r\n+    if (window.confirm('Supprimer ce message ?')) {\r\n       try {\r\n-        await supprimerReponse(id);\r\n-        fetchForumMessages();\r\n+        await supprimerMessagePrive(id);\r\n+        fetchMessagesPrives();\r\n       } catch (error) {\r\n-        console.error(\"Erreur suppression réponse :\", error);\r\n+        console.error('Erreur suppression message:', error);\r\n       }\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"space-y-6\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-      {forumMessages.length === 0 ? (\r\n-        <p className=\"text-center text-gray-500\">Aucun sujet disponible.</p>\r\n-      ) : (\r\n-        forumMessages.map(sujet => {\r\n-          const sujetInapproprie = contientMotInterdit(sujet.contenu);\r\n-          return (\r\n-            <div key={sujet.id} className=\"border border-gray-200 rounded-md p-4 space-y-2\">\r\n-              <div className=\"flex justify-between items-start\">\r\n-                <div>\r\n-                  <h4 className=\"text-lg font-semibold text-gray-800\">{sujet.titre}</h4>\r\n-                  <p className=\"text-gray-700\">\r\n-                    <strong>{sujet.auteur?.nom}</strong> :{' '}\r\n-                    {sujetInapproprie ? (\r\n-                      <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n-                    ) : (\r\n-                      sujet.contenu\r\n+    <div className=\"space-y-4 p-4\">\r\n+      <div className=\"flex border-b border-gray-200\">\r\n+        <button\r\n+          onClick={() => setActiveTab('forum')}\r\n+          className={`px-4 py-2 text-sm font-medium ${\r\n+            activeTab === 'forum'\r\n+              ? 'border-b-2 border-blue-500 text-blue-600'\r\n+              : 'text-gray-600 hover:text-gray-800'\r\n+          }`}\r\n+        >\r\n+          Modération Forum\r\n+        </button>\r\n+        <button\r\n+          onClick={() => setActiveTab('prive')}\r\n+          className={`px-4 py-2 text-sm font-medium ${\r\n+            activeTab === 'prive'\r\n+              ? 'border-b-2 border-blue-500 text-blue-600'\r\n+              : 'text-gray-600 hover:text-gray-800'\r\n+          }`}\r\n+        >\r\n+          Modération Messagerie Privée\r\n+        </button>\r\n+      </div>\r\n+\r\n+      <div className=\"mt-4\">\r\n+        {activeTab === 'forum' && (\r\n+          <div className=\"space-y-4\">\r\n+            <h3 className=\"text-lg font-semibold text-gray-700\">Sujets du Forum</h3>\r\n+            {sujets.length === 0 ? (\r\n+              <p className=\"text-gray-500\">Aucun sujet à modérer.</p>\r\n+            ) : (\r\n+              sujets.map((sujet) => {\r\n+                const sujetId = sujet.id || (sujet.sujet && sujet.sujet.id);\r\n+                const contenu = sujet.contenu || (sujet.sujet && sujet.sujet.contenu);\r\n+                const auteur = sujet.auteur || (sujet.sujet && sujet.sujet.auteur);\r\n+                const inapproprie = contientMotInterdit(contenu);\r\n+                return (\r\n+                  <div key={sujetId} className=\"border p-3 rounded-md space-y-2 bg-white shadow\">\r\n+                    <div>\r\n+                      <strong className=\"text-gray-800\">{auteur}</strong> :{' '}\r\n+                      {inapproprie ? (\r\n+                        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                      ) : (\r\n+                        <span className=\"text-gray-700\">{contenu}</span>\r\n+                      )}\r\n+                    </div>\r\n+                    <div className=\"text-sm text-gray-500\">\r\n+                      {new Date(sujet.date).toLocaleDateString()} à {sujet.heure}\r\n+                    </div>\r\n+                    <button\r\n+                      onClick={() => handleSupprimerForum(sujetId)}\r\n+                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-sm\"\r\n+                    >\r\n+                      Supprimer\r\n+                    </button>\r\n+                    {/* Réponses si disponibles */}\r\n+                    {reponses[sujetId] && (\r\n+                      <div className=\"mt-2 ml-4 text-sm\">\r\n+                        <strong className=\"text-gray-600\">Réponses :</strong>\r\n+                        {reponses[sujetId].map((rep, index) => (\r\n+                          <div key={rep.id || index} className=\"mt-1 ml-2\">\r\n+                            - <span className=\"text-gray-700\">{rep.contenu}</span>\r\n+                          </div>\r\n+                        ))}\r\n+                      </div>\r\n                     )}\r\n-                  </p>\r\n-                  <span className=\"text-sm text-gray-500\">\r\n-                    {new Date(sujet.dateCreation).toLocaleString()}\r\n-                  </span>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimerSujet(sujet.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n-                >\r\n-                  Supprimer Sujet\r\n-                </button>\r\n-              </div>\r\n+                  </div>\r\n+                );\r\n+              })\r\n+            )}\r\n+          </div>\r\n+        )}\r\n \r\n-              {/* Réponses */}\r\n-              {reponses[sujet.id] && reponses[sujet.id].length > 0 && (\r\n-                <div className=\"pl-4 border-l-2 border-gray-300 space-y-2 mt-2\">\r\n-                  <h5 className=\"text-sm font-medium text-gray-600\">Réponses :</h5>\r\n-                  {reponses[sujet.id].map(rep => {\r\n-                    const repInapproprie = contientMotInterdit(rep.message);\r\n-                    return (\r\n-                      <div key={rep.id} className=\"flex justify-between items-start\">\r\n-                        <div>\r\n-                          <p className=\"text-gray-700\">\r\n-                            <strong>{rep.auteur?.nom}</strong> :{' '}\r\n-                            {repInapproprie ? (\r\n-                              <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n-                            ) : (\r\n-                              rep.message\r\n-                            )}\r\n-                          </p>\r\n-                          <span className=\"text-xs text-gray-500\">\r\n-                            {new Date(rep.dateReponse).toLocaleString()}\r\n-                          </span>\r\n-                        </div>\r\n-                        <button\r\n-                          onClick={() => handleSupprimerReponse(rep.id)}\r\n-                          className=\"bg-red-400 text-white px-2 py-1 rounded-md text-xs hover:bg-red-500\"\r\n-                        >\r\n-                          Supprimer\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          );\r\n-        })\r\n-      )}\r\n+        {activeTab === 'prive' && (\r\n+          <div className=\"space-y-4\">\r\n+            <h3 className=\"text-lg font-semibold text-gray-700\">Messages Privés</h3>\r\n+            {messages.length === 0 ? (\r\n+              <p className=\"text-gray-500\">Aucun message privé à modérer.</p>\r\n+            ) : (\r\n+              messages.map((msg) => {\r\n+                const inapproprie = contientMotInterdit(msg.contenu);\r\n+                return (\r\n+                  <div key={msg.id} className=\"border p-3 rounded-md bg-white shadow\">\r\n+                    <div className=\"mb-1\">\r\n+                      <strong className=\"text-gray-800\">{msg.expediteur}</strong> à{' '}\r\n+                      <strong className=\"text-gray-800\">{msg.destinataire}</strong> :{' '}\r\n+                      {inapproprie ? (\r\n+                        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                      ) : (\r\n+                        <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                      )}\r\n+                    </div>\r\n+                    <div className=\"text-sm text-gray-500\">\r\n+                      {new Date(msg.date).toLocaleDateString()} à {msg.heure}\r\n+                    </div>\r\n+                    <button\r\n+                      onClick={() => handleSupprimerPrive(msg.id)}\r\n+                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-sm mt-2\"\r\n+                    >\r\n+                      Supprimer\r\n+                    </button>\r\n+                  </div>\r\n+                );\r\n+              })\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1749908247326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,194 +2,139 @@\n import {\r\n   getDiscussions,\r\n   getReponsesSujet,\r\n   supprimerDiscussion,\r\n-  getTousMessages,\r\n-  supprimerMessagePrive,\r\n-} from '../../services/serviceAdmin';\r\n+  supprimerReponse\r\n+} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n \r\n-// Mots interdits\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some((mot) => texteMinuscule.includes(mot.toLowerCase()));\r\n+  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n const ModerationDiscussions = () => {\r\n-  const [sujets, setSujets] = useState([]);\r\n-  const [reponses, setReponses] = useState({});\r\n-  const [messages, setMessages] = useState([]);\r\n-  const [activeTab, setActiveTab] = useState('forum');\r\n+  const [forumMessages, setForumMessages] = useState([]);\r\n+  const [reponses, setReponses] = useState({}); // { sujetId: [reponse1, reponse2] }\r\n \r\n   useEffect(() => {\r\n     fetchForumMessages();\r\n-    fetchMessagesPrives();\r\n   }, []);\r\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n       const sujets = await getDiscussions();\r\n-      setSujets(sujets);\r\n+      setForumMessages(sujets);\r\n \r\n+      // Charger toutes les réponses pour chaque sujet\r\n       const allReponses = {};\r\n       for (const sujet of sujets) {\r\n-        const sujetId = sujet.id || (sujet.sujet && sujet.sujet.id);\r\n-        if (!sujetId) continue;\r\n         try {\r\n-          const rep = await getReponsesSujet(sujetId);\r\n-          allReponses[sujetId] = rep;\r\n+          const rep = await getReponsesSujet(sujet.id);\r\n+          allReponses[sujet.id] = rep;\r\n         } catch (err) {\r\n-          console.error(`Erreur de chargement des réponses pour le sujet ${sujetId}`, err);\r\n+          console.error(`Erreur de chargement des réponses pour le sujet ${sujet.id}`, err);\r\n         }\r\n       }\r\n       setReponses(allReponses);\r\n     } catch (error) {\r\n       console.error('Erreur lors de la récupération des sujets du forum:', error);\r\n     }\r\n   };\r\n \r\n-  const fetchMessagesPrives = async () => {\r\n-    try {\r\n-      const data = await getTousMessages();\r\n-      setMessages(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages privés:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerForum = async (id) => {\r\n-    if (window.confirm('Supprimer ce sujet ?')) {\r\n+  const handleSupprimerSujet = async (id) => {\r\n+    if (window.confirm(\"Confirmer la suppression de ce sujet ?\")) {\r\n       try {\r\n         await supprimerDiscussion(id);\r\n         fetchForumMessages();\r\n       } catch (error) {\r\n-        console.error('Erreur suppression sujet:', error);\r\n+        console.error(\"Erreur suppression sujet :\", error);\r\n       }\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerPrive = async (id) => {\r\n-    if (window.confirm('Supprimer ce message ?')) {\r\n+  const handleSupprimerReponse = async (id) => {\r\n+    if (window.confirm(\"Confirmer la suppression de cette réponse ?\")) {\r\n       try {\r\n-        await supprimerMessagePrive(id);\r\n-        fetchMessagesPrives();\r\n+        await supprimerReponse(id);\r\n+        fetchForumMessages();\r\n       } catch (error) {\r\n-        console.error('Erreur suppression message:', error);\r\n+        console.error(\"Erreur suppression réponse :\", error);\r\n       }\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"space-y-4 p-4\">\r\n-      <div className=\"flex border-b border-gray-200\">\r\n-        <button\r\n-          onClick={() => setActiveTab('forum')}\r\n-          className={`px-4 py-2 text-sm font-medium ${\r\n-            activeTab === 'forum'\r\n-              ? 'border-b-2 border-blue-500 text-blue-600'\r\n-              : 'text-gray-600 hover:text-gray-800'\r\n-          }`}\r\n-        >\r\n-          Modération Forum\r\n-        </button>\r\n-        <button\r\n-          onClick={() => setActiveTab('prive')}\r\n-          className={`px-4 py-2 text-sm font-medium ${\r\n-            activeTab === 'prive'\r\n-              ? 'border-b-2 border-blue-500 text-blue-600'\r\n-              : 'text-gray-600 hover:text-gray-800'\r\n-          }`}\r\n-        >\r\n-          Modération Messagerie Privée\r\n-        </button>\r\n-      </div>\r\n+    <div className=\"space-y-6\">\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      {forumMessages.length === 0 ? (\r\n+        <p className=\"text-center text-gray-500\">Aucun sujet disponible.</p>\r\n+      ) : (\r\n+        forumMessages.map(sujet => {\r\n+          const sujetInapproprie = contientMotInterdit(sujet.contenu);\r\n+          return (\r\n+            <div key={sujet.id} className=\"border border-gray-200 rounded-md p-4 space-y-2\">\r\n+              <div className=\"flex justify-between items-start\">\r\n+                <div>\r\n+                  <h4 className=\"text-lg font-semibold text-gray-800\">{sujet.titre}</h4>\r\n+                  <p className=\"text-gray-700\">\r\n+                    <strong>{sujet.auteur?.nom}</strong> :{' '}\r\n+                    {sujetInapproprie ? (\r\n+                      <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n+                    ) : (\r\n+                      sujet.contenu\r\n+                    )}\r\n+                  </p>\r\n+                  <span className=\"text-sm text-gray-500\">\r\n+                    {new Date(sujet.dateCreation).toLocaleString()}\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerSujet(sujet.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n+                >\r\n+                  Supprimer Sujet\r\n+                </button>\r\n+              </div>\r\n \r\n-      <div className=\"mt-4\">\r\n-        {activeTab === 'forum' && (\r\n-          <div className=\"space-y-4\">\r\n-            <h3 className=\"text-lg font-semibold text-gray-700\">Sujets du Forum</h3>\r\n-            {sujets.length === 0 ? (\r\n-              <p className=\"text-gray-500\">Aucun sujet à modérer.</p>\r\n-            ) : (\r\n-              sujets.map((sujet) => {\r\n-                const sujetId = sujet.id || (sujet.sujet && sujet.sujet.id);\r\n-                const contenu = sujet.contenu || (sujet.sujet && sujet.sujet.contenu);\r\n-                const auteur = sujet.auteur || (sujet.sujet && sujet.sujet.auteur);\r\n-                const inapproprie = contientMotInterdit(contenu);\r\n-                return (\r\n-                  <div key={sujetId} className=\"border p-3 rounded-md space-y-2 bg-white shadow\">\r\n-                    <div>\r\n-                      <strong className=\"text-gray-800\">{auteur}</strong> :{' '}\r\n-                      {inapproprie ? (\r\n-                        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                      ) : (\r\n-                        <span className=\"text-gray-700\">{contenu}</span>\r\n-                      )}\r\n-                    </div>\r\n-                    <div className=\"text-sm text-gray-500\">\r\n-                      {new Date(sujet.date).toLocaleDateString()} à {sujet.heure}\r\n-                    </div>\r\n-                    <button\r\n-                      onClick={() => handleSupprimerForum(sujetId)}\r\n-                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-sm\"\r\n-                    >\r\n-                      Supprimer\r\n-                    </button>\r\n-                    {/* Réponses si disponibles */}\r\n-                    {reponses[sujetId] && (\r\n-                      <div className=\"mt-2 ml-4 text-sm\">\r\n-                        <strong className=\"text-gray-600\">Réponses :</strong>\r\n-                        {reponses[sujetId].map((rep, index) => (\r\n-                          <div key={rep.id || index} className=\"mt-1 ml-2\">\r\n-                            - <span className=\"text-gray-700\">{rep.contenu}</span>\r\n-                          </div>\r\n-                        ))}\r\n+              {/* Réponses */}\r\n+              {reponses[sujet.id] && reponses[sujet.id].length > 0 && (\r\n+                <div className=\"pl-4 border-l-2 border-gray-300 space-y-2 mt-2\">\r\n+                  <h5 className=\"text-sm font-medium text-gray-600\">Réponses :</h5>\r\n+                  {reponses[sujet.id].map(rep => {\r\n+                    const repInapproprie = contientMotInterdit(rep.message);\r\n+                    return (\r\n+                      <div key={rep.id} className=\"flex justify-between items-start\">\r\n+                        <div>\r\n+                          <p className=\"text-gray-700\">\r\n+                            <strong>{rep.auteur?.nom}</strong> :{' '}\r\n+                            {repInapproprie ? (\r\n+                              <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n+                            ) : (\r\n+                              rep.message\r\n+                            )}\r\n+                          </p>\r\n+                          <span className=\"text-xs text-gray-500\">\r\n+                            {new Date(rep.dateReponse).toLocaleString()}\r\n+                          </span>\r\n+                        </div>\r\n+                        <button\r\n+                          onClick={() => handleSupprimerReponse(rep.id)}\r\n+                          className=\"bg-red-400 text-white px-2 py-1 rounded-md text-xs hover:bg-red-500\"\r\n+                        >\r\n+                          Supprimer\r\n+                        </button>\r\n                       </div>\r\n-                    )}\r\n-                  </div>\r\n-                );\r\n-              })\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {activeTab === 'prive' && (\r\n-          <div className=\"space-y-4\">\r\n-            <h3 className=\"text-lg font-semibold text-gray-700\">Messages Privés</h3>\r\n-            {messages.length === 0 ? (\r\n-              <p className=\"text-gray-500\">Aucun message privé à modérer.</p>\r\n-            ) : (\r\n-              messages.map((msg) => {\r\n-                const inapproprie = contientMotInterdit(msg.contenu);\r\n-                return (\r\n-                  <div key={msg.id} className=\"border p-3 rounded-md bg-white shadow\">\r\n-                    <div className=\"mb-1\">\r\n-                      <strong className=\"text-gray-800\">{msg.expediteur}</strong> à{' '}\r\n-                      <strong className=\"text-gray-800\">{msg.destinataire}</strong> :{' '}\r\n-                      {inapproprie ? (\r\n-                        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                      ) : (\r\n-                        <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                      )}\r\n-                    </div>\r\n-                    <div className=\"text-sm text-gray-500\">\r\n-                      {new Date(msg.date).toLocaleDateString()} à {msg.heure}\r\n-                    </div>\r\n-                    <button\r\n-                      onClick={() => handleSupprimerPrive(msg.id)}\r\n-                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-sm mt-2\"\r\n-                    >\r\n-                      Supprimer\r\n-                    </button>\r\n-                  </div>\r\n-                );\r\n-              })\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          );\r\n+        })\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1749908363608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  getDiscussions,\r\n+  supprimerDiscussion\r\n+} from '../../services/serviceAdmin';\r\n+\r\n+const motsInterdits = ['haine', 'suicide', 'viol'];\r\n+\r\n+function contientMotInterdit(texte) {\r\n+  if (!texte) return false;\r\n+  const texteMinuscule = texte.toLowerCase();\r\n+  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n+}\r\n+\r\n+const ModerationDiscussions = () => {\r\n+  const [forumMessages, setForumMessages] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    fetchForumMessages();\r\n+  }, []);\r\n+\r\n+  const fetchForumMessages = async () => {\r\n+    try {\r\n+      const data = await getDiscussions();\r\n+      setForumMessages(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSupprimerForum = async (id) => {\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+    if (!confirmation) return;\r\n+\r\n+    try {\r\n+      await supprimerDiscussion(id);\r\n+      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"space-y-4\">\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+        {forumMessages.length === 0 ? (\r\n+          <li className=\"p-4 text-center text-gray-500\">\r\n+            Aucun message de forum à modérer.\r\n+          </li>\r\n+        ) : (\r\n+          forumMessages.map((msg) => {\r\n+            const inapproprie = contientMotInterdit(msg.contenu);\r\n+            const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n+            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+\r\n+            return (\r\n+              <li\r\n+                key={msg.id}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+              >\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({dateFormatee})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n+          })\r\n+        )}\r\n+      </ul>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749908926407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,18 +28,22 @@\n     }\r\n   };\r\n \r\n   const handleSupprimerForum = async (id) => {\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n-    if (!confirmation) return;\r\n+  if (!id) {\r\n+    console.error('handleSupprimerForum: id est undefined');\r\n+    return;\r\n+  }\r\n+  const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+  if (!confirmation) return;\r\n \r\n-    try {\r\n-      await supprimerDiscussion(id);\r\n-      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n-    }\r\n-  };\r\n+  try {\r\n+    await supprimerDiscussion(id);\r\n+    setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+  } catch (error) {\r\n+    console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+  }\r\n+};\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n       <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n@@ -85,145 +89,4 @@\n   );\r\n };\r\n \r\n export default ModerationDiscussions;\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  getDiscussions,\r\n-  getReponsesSujet,\r\n-  supprimerDiscussion,\r\n-  supprimerReponse\r\n-} from '../../services/serviceAdmin'; // Assure-toi que ce chemin est correct\r\n-\r\n-const motsInterdits = ['haine', 'suicide', 'viol'];\r\n-\r\n-function contientMotInterdit(texte) {\r\n-  if (!texte) return false;\r\n-  const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n-}\r\n-\r\n-const ModerationDiscussions = () => {\r\n-  const [forumMessages, setForumMessages] = useState([]);\r\n-  const [reponses, setReponses] = useState({}); // { sujetId: [reponse1, reponse2] }\r\n-\r\n-  useEffect(() => {\r\n-    fetchForumMessages();\r\n-  }, []);\r\n-\r\n-  const fetchForumMessages = async () => {\r\n-    try {\r\n-      const sujets = await getDiscussions();\r\n-      setForumMessages(sujets);\r\n-\r\n-      // Charger toutes les réponses pour chaque sujet\r\n-      const allReponses = {};\r\n-      for (const sujet of sujets) {\r\n-        try {\r\n-          const rep = await getReponsesSujet(sujet.id);\r\n-          allReponses[sujet.id] = rep;\r\n-        } catch (err) {\r\n-          console.error(`Erreur de chargement des réponses pour le sujet ${sujet.id}`, err);\r\n-        }\r\n-      }\r\n-      setReponses(allReponses);\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la récupération des sujets du forum:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerSujet = async (id) => {\r\n-    if (window.confirm(\"Confirmer la suppression de ce sujet ?\")) {\r\n-      try {\r\n-        await supprimerDiscussion(id);\r\n-        fetchForumMessages();\r\n-      } catch (error) {\r\n-        console.error(\"Erreur suppression sujet :\", error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerReponse = async (id) => {\r\n-    if (window.confirm(\"Confirmer la suppression de cette réponse ?\")) {\r\n-      try {\r\n-        await supprimerReponse(id);\r\n-        fetchForumMessages();\r\n-      } catch (error) {\r\n-        console.error(\"Erreur suppression réponse :\", error);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"space-y-6\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-      {forumMessages.length === 0 ? (\r\n-        <p className=\"text-center text-gray-500\">Aucun sujet disponible.</p>\r\n-      ) : (\r\n-        forumMessages.map(sujet => {\r\n-          const sujetInapproprie = contientMotInterdit(sujet.contenu);\r\n-          return (\r\n-            <div key={sujet.id} className=\"border border-gray-200 rounded-md p-4 space-y-2\">\r\n-              <div className=\"flex justify-between items-start\">\r\n-                <div>\r\n-                  <h4 className=\"text-lg font-semibold text-gray-800\">{sujet.titre}</h4>\r\n-                  <p className=\"text-gray-700\">\r\n-                    <strong>{sujet.auteur?.nom}</strong> :{' '}\r\n-                    {sujetInapproprie ? (\r\n-                      <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n-                    ) : (\r\n-                      sujet.contenu\r\n-                    )}\r\n-                  </p>\r\n-                  <span className=\"text-sm text-gray-500\">\r\n-                    {new Date(sujet.dateCreation).toLocaleString()}\r\n-                  </span>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimerSujet(sujet.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n-                >\r\n-                  Supprimer Sujet\r\n-                </button>\r\n-              </div>\r\n-\r\n-              {/* Réponses */}\r\n-              {reponses[sujet.id] && reponses[sujet.id].length > 0 && (\r\n-                <div className=\"pl-4 border-l-2 border-gray-300 space-y-2 mt-2\">\r\n-                  <h5 className=\"text-sm font-medium text-gray-600\">Réponses :</h5>\r\n-                  {reponses[sujet.id].map(rep => {\r\n-                    const repInapproprie = contientMotInterdit(rep.message);\r\n-                    return (\r\n-                      <div key={rep.id} className=\"flex justify-between items-start\">\r\n-                        <div>\r\n-                          <p className=\"text-gray-700\">\r\n-                            <strong>{rep.auteur?.nom}</strong> :{' '}\r\n-                            {repInapproprie ? (\r\n-                              <span className=\"text-red-600 font-semibold\">[Contenu inapproprié]</span>\r\n-                            ) : (\r\n-                              rep.message\r\n-                            )}\r\n-                          </p>\r\n-                          <span className=\"text-xs text-gray-500\">\r\n-                            {new Date(rep.dateReponse).toLocaleString()}\r\n-                          </span>\r\n-                        </div>\r\n-                        <button\r\n-                          onClick={() => handleSupprimerReponse(rep.id)}\r\n-                          className=\"bg-red-400 text-white px-2 py-1 rounded-md text-xs hover:bg-red-500\"\r\n-                        >\r\n-                          Supprimer\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          );\r\n-        })\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909036566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,14 +73,14 @@\n                   <span className=\"block text-xs text-gray-500 mt-1\">\r\n                     ({dateFormatee})\r\n                   </span>\r\n                 </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n+                {forumMessages.map((msg, index) => (\r\n+  <li key={msg.id ?? index} className=\"...\">\r\n+    {/* contenu */}\r\n+    {/* bouton suppression */}\r\n+  </li>\r\n+))}\r\n               </li>\r\n             );\r\n           })\r\n         )}\r\n"
                },
                {
                    "date": 1749909049332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,14 @@\n     {/* contenu */}\r\n     {/* bouton suppression */}\r\n   </li>\r\n ))}\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n               </li>\r\n             );\r\n           })\r\n         )}\r\n"
                },
                {
                    "date": 1749909064170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,15 +79,9 @@\n     {/* contenu */}\r\n     {/* bouton suppression */}\r\n   </li>\r\n ))}\r\n-                <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n-              </li>\r\n+             \r\n             );\r\n           })\r\n         )}\r\n       </ul>\r\n"
                },
                {
                    "date": 1749909075374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,14 +75,19 @@\n                   </span>\r\n                 </div>\r\n                 {forumMessages.map((msg, index) => (\r\n   <li key={msg.id ?? index} className=\"...\">\r\n-    {/* contenu */}\r\n-    {/* bouton suppression */}\r\n+       <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n   </li>\r\n ))}\r\n              \r\n-            );\r\n+           \r\n           })\r\n         )}\r\n       </ul>\r\n     </div>\r\n"
                },
                {
                    "date": 1749909119766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,42 +56,32 @@\n           forumMessages.map((msg) => {\r\n             const inapproprie = contientMotInterdit(msg.contenu);\r\n             const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n             const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n-\r\n-            return (\r\n-              <li\r\n-                key={msg.id}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-              >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateFormatee})\r\n-                  </span>\r\n-                </div>\r\n-                {forumMessages.map((msg, index) => (\r\n-  <li key={msg.id ?? index} className=\"...\">\r\n-       <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n-              </li>\r\n+return (\r\n+  <li\r\n+    key={msg.id ?? index} // Utilise id si défini sinon index (si tu as l'index en argument)\r\n+    className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+  >\r\n+    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+      <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+      {inapproprie ? (\r\n+        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+      ) : (\r\n+        <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+      )}\r\n+      <span className=\"block text-xs text-gray-500 mt-1\">\r\n+        ({dateFormatee})\r\n+      </span>\r\n+    </div>\r\n+    <button\r\n+      onClick={() => handleSupprimerForum(msg.id)}\r\n+      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+      disabled={!msg.id} // désactive si id absent\r\n+    >\r\n+      Supprimer\r\n+    </button>\r\n   </li>\r\n-))}\r\n-             \r\n-           \r\n-          })\r\n-        )}\r\n-      </ul>\r\n-    </div>\r\n-  );\r\n-};\r\n+);\r\n \r\n+\r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909126343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,7 +81,7 @@\n       Supprimer\r\n     </button>\r\n   </li>\r\n );\r\n+})\r\n \r\n-\r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909154209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,22 +28,22 @@\n     }\r\n   };\r\n \r\n   const handleSupprimerForum = async (id) => {\r\n-  if (!id) {\r\n-    console.error('handleSupprimerForum: id est undefined');\r\n-    return;\r\n-  }\r\n-  const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n-  if (!confirmation) return;\r\n+    if (!id) {\r\n+      console.error('handleSupprimerForum: id est undefined');\r\n+      return;\r\n+    }\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+    if (!confirmation) return;\r\n \r\n-  try {\r\n-    await supprimerDiscussion(id);\r\n-    setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n-  } catch (error) {\r\n-    console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n-  }\r\n-};\r\n+    try {\r\n+      await supprimerDiscussion(id);\r\n+      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+    }\r\n+  };\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n       <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n@@ -52,36 +52,42 @@\n           <li className=\"p-4 text-center text-gray-500\">\r\n             Aucun message de forum à modérer.\r\n           </li>\r\n         ) : (\r\n-          forumMessages.map((msg) => {\r\n+          forumMessages.map((msg, index) => {\r\n             const inapproprie = contientMotInterdit(msg.contenu);\r\n             const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n             const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n-return (\r\n-  <li\r\n-    key={msg.id ?? index} // Utilise id si défini sinon index (si tu as l'index en argument)\r\n-    className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-  >\r\n-    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-      <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-      {inapproprie ? (\r\n-        <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-      ) : (\r\n-        <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-      )}\r\n-      <span className=\"block text-xs text-gray-500 mt-1\">\r\n-        ({dateFormatee})\r\n-      </span>\r\n+\r\n+            return (\r\n+              <li\r\n+                key={msg.id ?? index}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+              >\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({dateFormatee})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                  disabled={!msg.id}\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n+          })\r\n+        )}\r\n+      </ul>\r\n     </div>\r\n-    <button\r\n-      onClick={() => handleSupprimerForum(msg.id)}\r\n-      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-      disabled={!msg.id} // désactive si id absent\r\n-    >\r\n-      Supprimer\r\n-    </button>\r\n-  </li>\r\n-);\r\n-})\r\n+  );\r\n+};\r\n \r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909281140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,46 +44,51 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {forumMessages.length === 0 ? (\r\n-          <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message de forum à modérer.\r\n-          </li>\r\n-        ) : (\r\n-          forumMessages.map((msg, index) => {\r\n-            const inapproprie = contientMotInterdit(msg.contenu);\r\n-            const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n-            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+  <div className=\"space-y-4\">\r\n+    <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+    <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+      {forumMessages.length === 0 ? (\r\n+        <li className=\"p-4 text-center text-gray-500\">\r\n+          Aucun message de forum à modérer.\r\n+        </li>\r\n+      ) : (\r\n+        forumMessages.map((msg) => {\r\n+          const inapproprie = contientMotInterdit(msg.contenu);\r\n+          const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n+          const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n-            return (\r\n-              <li\r\n-                key={msg.id ?? index}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+          return (\r\n+            <li\r\n+              key={msg.id}\r\n+              className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+            >\r\n+              <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                {inapproprie ? (\r\n+                  <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                ) : (\r\n+                  <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                )}\r\n+                <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                  ({dateFormatee})\r\n+                </span>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => handleSupprimerForum(msg.id)}\r\n+                className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n               >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateFormatee})\r\n-                  </span>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                  disabled={!msg.id}\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n-              </li>\r\n-            );\r\n+                Supprimer\r\n+              </button>\r\n+            </li>\r\n+          );\r\n+        })\r\n+      )}\r\n+    </ul>\r\n+  </div>\r\n+);\r\n+\r\n           })\r\n         )}\r\n       </ul>\r\n     </div>\r\n"
                },
                {
                    "date": 1749909290769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,51 +44,46 @@\n     }\r\n   };\r\n \r\n   return (\r\n-  <div className=\"space-y-4\">\r\n-    <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-    <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-      {forumMessages.length === 0 ? (\r\n-        <li className=\"p-4 text-center text-gray-500\">\r\n-          Aucun message de forum à modérer.\r\n-        </li>\r\n-      ) : (\r\n-        forumMessages.map((msg) => {\r\n-          const inapproprie = contientMotInterdit(msg.contenu);\r\n-          const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n-          const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+    <div className=\"space-y-4\">\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+        {forumMessages.length === 0 ? (\r\n+          <li className=\"p-4 text-center text-gray-500\">\r\n+            Aucun message de forum à modérer.\r\n+          </li>\r\n+        ) : (\r\n+          forumMessages.map((msg, index) => {\r\n+            const inapproprie = contientMotInterdit(msg.contenu);\r\n+            const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n+            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n-          return (\r\n-            <li\r\n-              key={msg.id}\r\n-              className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-            >\r\n-              <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-                {inapproprie ? (\r\n-                  <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                ) : (\r\n-                  <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                )}\r\n-                <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                  ({dateFormatee})\r\n-                </span>\r\n-              </div>\r\n-              <button\r\n-                onClick={() => handleSupprimerForum(msg.id)}\r\n-                className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+            return (\r\n+              <li\r\n+                key={msg.id ?? index}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n-                Supprimer\r\n-              </button>\r\n-            </li>\r\n-          );\r\n-        })\r\n-      )}\r\n-    </ul>\r\n-  </div>\r\n-);\r\n-\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({dateFormatee})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                  disabled={!msg.id}\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n           })\r\n         )}\r\n       </ul>\r\n     </div>\r\n"
                },
                {
                    "date": 1749909301620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,37 +57,51 @@\n             const inapproprie = contientMotInterdit(msg.contenu);\r\n             const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n             const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n-            return (\r\n-              <li\r\n-                key={msg.id ?? index}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+          return (\r\n+  <div className=\"space-y-4\">\r\n+    <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+    <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+      {forumMessages.length === 0 ? (\r\n+        <li className=\"p-4 text-center text-gray-500\">\r\n+          Aucun message de forum à modérer.\r\n+        </li>\r\n+      ) : (\r\n+        forumMessages.map((msg) => {\r\n+          const inapproprie = contientMotInterdit(msg.contenu);\r\n+          const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n+          const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+\r\n+          return (\r\n+            <li\r\n+              key={msg.id}\r\n+              className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+            >\r\n+              <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                {inapproprie ? (\r\n+                  <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                ) : (\r\n+                  <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                )}\r\n+                <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                  ({dateFormatee})\r\n+                </span>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => handleSupprimerForum(msg.id)}\r\n+                className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n               >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateFormatee})\r\n-                  </span>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                  disabled={!msg.id}\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n-              </li>\r\n-            );\r\n-          })\r\n-        )}\r\n-      </ul>\r\n-    </div>\r\n-  );\r\n+                Supprimer\r\n+              </button>\r\n+            </li>\r\n+          );\r\n+        })\r\n+      )}\r\n+    </ul>\r\n+  </div>\r\n+);\r\n+\r\n };\r\n \r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909312167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,8 +100,8 @@\n       )}\r\n     </ul>\r\n   </div>\r\n );\r\n-\r\n+=\r\n };\r\n \r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909321407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,8 +100,7 @@\n       )}\r\n     </ul>\r\n   </div>\r\n );\r\n-=\r\n-};\r\n+          )\r\n \r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909352568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,55 +52,41 @@\n           <li className=\"p-4 text-center text-gray-500\">\r\n             Aucun message de forum à modérer.\r\n           </li>\r\n         ) : (\r\n-          forumMessages.map((msg, index) => {\r\n+          forumMessages.map((msg) => {\r\n             const inapproprie = contientMotInterdit(msg.contenu);\r\n             const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n             const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n-          return (\r\n-  <div className=\"space-y-4\">\r\n-    <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n-    <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-      {forumMessages.length === 0 ? (\r\n-        <li className=\"p-4 text-center text-gray-500\">\r\n-          Aucun message de forum à modérer.\r\n-        </li>\r\n-      ) : (\r\n-        forumMessages.map((msg) => {\r\n-          const inapproprie = contientMotInterdit(msg.contenu);\r\n-          const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n-          const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n-\r\n-          return (\r\n-            <li\r\n-              key={msg.id}\r\n-              className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-            >\r\n-              <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n-                {inapproprie ? (\r\n-                  <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                ) : (\r\n-                  <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n-                )}\r\n-                <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                  ({dateFormatee})\r\n-                </span>\r\n-              </div>\r\n-              <button\r\n-                onClick={() => handleSupprimerForum(msg.id)}\r\n-                className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+            return (\r\n+              <li\r\n+                key={msg.id}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n-                Supprimer\r\n-              </button>\r\n-            </li>\r\n-          );\r\n-        })\r\n-      )}\r\n-    </ul>\r\n-  </div>\r\n-);\r\n-          )\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({dateFormatee})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n+          })\r\n+        )}\r\n+      </ul>\r\n+    </div>\r\n+  );\r\n+};\r\n \r\n export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749909605642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,22 +28,22 @@\n     }\r\n   };\r\n \r\n   const handleSupprimerForum = async (id) => {\r\n-    if (!id) {\r\n-      console.error('handleSupprimerForum: id est undefined');\r\n-      return;\r\n-    }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n-    if (!confirmation) return;\r\n+  if (!id) {\r\n+    console.error('handleSupprimerForum: id est undefined');\r\n+    return;\r\n+  }\r\n+  const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+  if (!confirmation) return;\r\n \r\n-    try {\r\n-      await supprimerDiscussion(id);\r\n-      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n-    }\r\n-  };\r\n+  try {\r\n+    await supprimerDiscussion(id);\r\n+    setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+  } catch (error) {\r\n+    console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+  }\r\n+};\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n       <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n"
                },
                {
                    "date": 1749910342827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,29 +21,30 @@\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n       const data = await getDiscussions();\r\n+      console.log('Messages reçus:', data); // debug pour vérifier structure\r\n       setForumMessages(data);\r\n     } catch (error) {\r\n       console.error('Erreur lors de la récupération des messages du forum:', error);\r\n     }\r\n   };\r\n \r\n   const handleSupprimerForum = async (id) => {\r\n-  if (!id) {\r\n-    console.error('handleSupprimerForum: id est undefined');\r\n-    return;\r\n-  }\r\n-  const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n-  if (!confirmation) return;\r\n+    if (!id) {\r\n+      console.error('handleSupprimerForum: id est undefined');\r\n+      return;\r\n+    }\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+    if (!confirmation) return;\r\n \r\n-  try {\r\n-    await supprimerDiscussion(id);\r\n-    setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n-  } catch (error) {\r\n-    console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n-  }\r\n-};\r\n+    try {\r\n+      await supprimerDiscussion(id);\r\n+      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+    }\r\n+  };\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n       <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n"
                },
                {
                    "date": 1749912184531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  getDiscussions,\r\n-  supprimerDiscussion\r\n-} from '../../services/serviceAdmin';\r\n+import axios from 'axios';\r\n \r\n+const API_BASE_URL = 'http://localhost:9191/api'; // ou '/api' selon ta config proxy\r\n+\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n@@ -20,10 +19,16 @@\n   }, []);\r\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n-      const data = await getDiscussions();\r\n-      console.log('Messages reçus:', data); // debug pour vérifier structure\r\n+      const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+        credentials: 'include',  // si besoin d'envoyer cookies/session\r\n+      });\r\n+      if (!response.ok) {\r\n+        throw new Error('Erreur lors de la récupération des sujets de forum');\r\n+      }\r\n+      const data = await response.json();\r\n+      console.log('Messages reçus:', data);\r\n       setForumMessages(data);\r\n     } catch (error) {\r\n       console.error('Erreur lors de la récupération des messages du forum:', error);\r\n     }\r\n@@ -37,10 +42,10 @@\n     const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n-      await supprimerDiscussion(id);\r\n-      setForumMessages((prev) => prev.filter(msg => msg.id !== id));\r\n+      await axios.delete(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`);\r\n+      setForumMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n       console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1749912190907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n \r\n-const API_BASE_URL = 'http://localhost:9191/api'; // ou '/api' selon ta config proxy\r\n+const API_BASE_URL = 'http://localhost:9191/api';  \r\n \r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n"
                },
                {
                    "date": 1749913373662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,41 @@\n import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n \r\n-const API_BASE_URL = 'http://localhost:9191/api';  \r\n+const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n+// Liste des mots interdits pour modération\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n+// Fonction pour détecter la présence d'un mot interdit dans un texte\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n+// Fonction pour récupérer tous les sujets du forum (sans service externe)\r\n+async function getDiscussions() {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error(\"Erreur lors de la récupération des sujets de forum\");\r\n+  }\r\n+  return await response.json();\r\n+}\r\n+\r\n+// Fonction pour supprimer un sujet par son idSujet\r\n+async function supprimerDiscussion(idSujet) {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${idSujet}`, {\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error(\"Erreur lors de la suppression du sujet du forum\");\r\n+  }\r\n+  return await response.text();\r\n+}\r\n+\r\n const ModerationDiscussions = () => {\r\n   const [forumMessages, setForumMessages] = useState([]);\r\n \r\n   useEffect(() => {\r\n@@ -19,33 +43,27 @@\n   }, []);\r\n \r\n   const fetchForumMessages = async () => {\r\n     try {\r\n-      const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n-        credentials: 'include',  // si besoin d'envoyer cookies/session\r\n-      });\r\n-      if (!response.ok) {\r\n-        throw new Error('Erreur lors de la récupération des sujets de forum');\r\n-      }\r\n-      const data = await response.json();\r\n+      const data = await getDiscussions();\r\n       console.log('Messages reçus:', data);\r\n       setForumMessages(data);\r\n     } catch (error) {\r\n       console.error('Erreur lors de la récupération des messages du forum:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerForum = async (id) => {\r\n-    if (!id) {\r\n-      console.error('handleSupprimerForum: id est undefined');\r\n+  const handleSupprimerForum = async (idSujet) => {\r\n+    if (!idSujet) {\r\n+      console.error('handleSupprimerForum: idSujet est undefined');\r\n       return;\r\n     }\r\n     const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n-      await axios.delete(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`);\r\n-      setForumMessages(prev => prev.filter(msg => msg.id !== id));\r\n+      await supprimerDiscussion(idSujet);\r\n+      setForumMessages(prev => prev.filter(msg => msg.idSujet !== idSujet));\r\n     } catch (error) {\r\n       console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n     }\r\n   };\r\n@@ -60,14 +78,14 @@\n           </li>\r\n         ) : (\r\n           forumMessages.map((msg) => {\r\n             const inapproprie = contientMotInterdit(msg.contenu);\r\n-            const auteurNom = msg?.auteur?.nom || \"Auteur inconnu\";\r\n+            const auteurNom = msg.auteur || \"Auteur inconnu\";\r\n             const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n             return (\r\n               <li\r\n-                key={msg.id}\r\n+                key={msg.idSujet}\r\n                 className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n                 <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n                   <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n@@ -80,9 +98,9 @@\n                     ({dateFormatee})\r\n                   </span>\r\n                 </div>\r\n                 <button\r\n-                  onClick={() => handleSupprimerForum(msg.id)}\r\n+                  onClick={() => handleSupprimerForum(msg.idSujet)}\r\n                   className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                 >\r\n                   Supprimer\r\n                 </button>\r\n"
                },
                {
                    "date": 1749913494344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,106 +1,106 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Liste des mots interdits pour modération\r\n+// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-// Fonction pour détecter la présence d'un mot interdit dans un texte\r\n+// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n-// Fonction pour récupérer tous les sujets du forum (sans service externe)\r\n-async function getDiscussions() {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+async function getMessages() {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la récupération des sujets de forum\");\r\n+    throw new Error(\"Erreur lors de la récupération des messages\");\r\n   }\r\n   return await response.json();\r\n }\r\n \r\n-// Fonction pour supprimer un sujet par son idSujet\r\n-async function supprimerDiscussion(idSujet) {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${idSujet}`, {\r\n+async function supprimerMessage(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la suppression du sujet du forum\");\r\n+    throw new Error(\"Erreur lors de la suppression du message\");\r\n   }\r\n   return await response.text();\r\n }\r\n \r\n-const ModerationDiscussions = () => {\r\n-  const [forumMessages, setForumMessages] = useState([]);\r\n+const ModerationMessages = () => {\r\n+  const [messages, setMessages] = useState([]);\r\n \r\n   useEffect(() => {\r\n-    fetchForumMessages();\r\n+    fetchMessages();\r\n   }, []);\r\n \r\n-  const fetchForumMessages = async () => {\r\n+  const fetchMessages = async () => {\r\n     try {\r\n-      const data = await getDiscussions();\r\n+      const data = await getMessages();\r\n       console.log('Messages reçus:', data);\r\n-      setForumMessages(data);\r\n+      setMessages(data);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n+      console.error('Erreur lors de la récupération des messages:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerForum = async (idSujet) => {\r\n-    if (!idSujet) {\r\n-      console.error('handleSupprimerForum: idSujet est undefined');\r\n+  const handleSupprimer = async (id) => {\r\n+    if (!id) {\r\n+      console.error('handleSupprimer: id est undefined');\r\n       return;\r\n     }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n-      await supprimerDiscussion(idSujet);\r\n-      setForumMessages(prev => prev.filter(msg => msg.idSujet !== idSujet));\r\n+      await supprimerMessage(id);\r\n+      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+      console.error('Erreur lors de la suppression du message:', error);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n       <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {forumMessages.length === 0 ? (\r\n+        {messages.length === 0 ? (\r\n           <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message de forum à modérer.\r\n+            Aucun message à modérer.\r\n           </li>\r\n         ) : (\r\n-          forumMessages.map((msg) => {\r\n-            const inapproprie = contientMotInterdit(msg.contenu);\r\n-            const auteurNom = msg.auteur || \"Auteur inconnu\";\r\n-            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+          messages.map(msg => {\r\n+            // On peut aussi se baser sur msg.inapproprie côté backend\r\n+            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n+            const expediteur = msg.expediteur || 'Inconnu';\r\n+            const destinataire = msg.destinataire || 'Public';\r\n+            const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n \r\n             return (\r\n               <li\r\n-                key={msg.idSujet}\r\n+                key={msg.id}\r\n                 className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n                 <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n                   {inapproprie ? (\r\n                     <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n                   ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n                   )}\r\n                   <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateFormatee})\r\n+                    ({dateHeure})\r\n                   </span>\r\n                 </div>\r\n                 <button\r\n-                  onClick={() => handleSupprimerForum(msg.idSujet)}\r\n+                  onClick={() => handleSupprimer(msg.id)}\r\n                   className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                 >\r\n                   Supprimer\r\n                 </button>\r\n@@ -112,5 +112,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default ModerationDiscussions;\r\n+export default ModerationMessages;\r\n"
                },
                {
                    "date": 1749913511182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,106 +1,106 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n+// Liste des mots interdits pour modération\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n+// Fonction pour détecter la présence d'un mot interdit dans un texte\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n-async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/tous`, {\r\n+// Fonction pour récupérer tous les sujets du forum (sans service externe)\r\n+async function getDiscussions() {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la récupération des messages\");\r\n+    throw new Error(\"Erreur lors de la récupération des sujets de forum\");\r\n   }\r\n   return await response.json();\r\n }\r\n \r\n-async function supprimerMessage(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/supprimer/${id}`, {\r\n+// Fonction pour supprimer un sujet par son idSujet\r\n+async function supprimerDiscussion(idSujet) {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${idSujet}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la suppression du message\");\r\n+    throw new Error(\"Erreur lors de la suppression du sujet du forum\");\r\n   }\r\n   return await response.text();\r\n }\r\n \r\n-const ModerationMessages = () => {\r\n-  const [messages, setMessages] = useState([]);\r\n+const ModerationDiscussions = () => {\r\n+  const [forumMessages, setForumMessages] = useState([]);\r\n \r\n   useEffect(() => {\r\n-    fetchMessages();\r\n+    fetchForumMessages();\r\n   }, []);\r\n \r\n-  const fetchMessages = async () => {\r\n+  const fetchForumMessages = async () => {\r\n     try {\r\n-      const data = await getMessages();\r\n+      const data = await getDiscussions();\r\n       console.log('Messages reçus:', data);\r\n-      setMessages(data);\r\n+      setForumMessages(data);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages:', error);\r\n+      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimer = async (id) => {\r\n-    if (!id) {\r\n-      console.error('handleSupprimer: id est undefined');\r\n+  const handleSupprimerForum = async (idSujet) => {\r\n+    if (!idSujet) {\r\n+      console.error('handleSupprimerForum: idSujet est undefined');\r\n       return;\r\n     }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n-      await supprimerMessage(id);\r\n-      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n+      await supprimerDiscussion(idSujet);\r\n+      setForumMessages(prev => prev.filter(msg => msg.idSujet !== idSujet));\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la suppression du message:', error);\r\n+      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n       <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {messages.length === 0 ? (\r\n+        {forumMessages.length === 0 ? (\r\n           <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message à modérer.\r\n+            Aucun message de forum à modérer.\r\n           </li>\r\n         ) : (\r\n-          messages.map(msg => {\r\n-            // On peut aussi se baser sur msg.inapproprie côté backend\r\n-            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-            const expediteur = msg.expediteur || 'Inconnu';\r\n-            const destinataire = msg.destinataire || 'Public';\r\n-            const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n+          forumMessages.map((msg) => {\r\n+            const inapproprie = contientMotInterdit(msg.contenu);\r\n+            const auteurNom = msg.auteur || \"Auteur inconnu\";\r\n+            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n \r\n             return (\r\n               <li\r\n-                key={msg.id}\r\n+                key={msg.idSujet}\r\n                 className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n                 <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n+                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n                   {inapproprie ? (\r\n                     <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n                   ) : (\r\n-                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n                   )}\r\n                   <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateHeure})\r\n+                    ({dateFormatee})\r\n                   </span>\r\n                 </div>\r\n                 <button\r\n-                  onClick={() => handleSupprimer(msg.id)}\r\n+                  onClick={() => handleSupprimerForum(msg.idSujet)}\r\n                   className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                 >\r\n                   Supprimer\r\n                 </button>\r\n@@ -112,5 +112,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default ModerationMessages;\r\n+export default ModerationDiscussions;\r\n"
                },
                {
                    "date": 1749914293632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,106 +1,106 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Liste des mots interdits pour modération\r\n+// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-// Fonction pour détecter la présence d'un mot interdit dans un texte\r\n+// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n-// Fonction pour récupérer tous les sujets du forum (sans service externe)\r\n-async function getDiscussions() {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+async function getMessages() {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la récupération des sujets de forum\");\r\n+    throw new Error(\"Erreur lors de la récupération des messages\");\r\n   }\r\n   return await response.json();\r\n }\r\n \r\n-// Fonction pour supprimer un sujet par son idSujet\r\n-async function supprimerDiscussion(idSujet) {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${idSujet}`, {\r\n+async function supprimerMessage(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la suppression du sujet du forum\");\r\n+    throw new Error(\"Erreur lors de la suppression du message\");\r\n   }\r\n   return await response.text();\r\n }\r\n \r\n-const ModerationDiscussions = () => {\r\n-  const [forumMessages, setForumMessages] = useState([]);\r\n+const ModerationMessages = () => {\r\n+  const [messages, setMessages] = useState([]);\r\n \r\n   useEffect(() => {\r\n-    fetchForumMessages();\r\n+    fetchMessages();\r\n   }, []);\r\n \r\n-  const fetchForumMessages = async () => {\r\n+  const fetchMessages = async () => {\r\n     try {\r\n-      const data = await getDiscussions();\r\n+      const data = await getMessages();\r\n       console.log('Messages reçus:', data);\r\n-      setForumMessages(data);\r\n+      setMessages(data);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages du forum:', error);\r\n+      console.error('Erreur lors de la récupération des messages:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimerForum = async (idSujet) => {\r\n-    if (!idSujet) {\r\n-      console.error('handleSupprimerForum: idSujet est undefined');\r\n+  const handleSupprimer = async (id) => {\r\n+    if (!id) {\r\n+      console.error('handleSupprimer: id est undefined');\r\n       return;\r\n     }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce sujet du forum ?');\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n-      await supprimerDiscussion(idSujet);\r\n-      setForumMessages(prev => prev.filter(msg => msg.idSujet !== idSujet));\r\n+      await supprimerMessage(id);\r\n+      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la suppression du sujet du forum:', error);\r\n+      console.error('Erreur lors de la suppression du message:', error);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération Forum</h2>\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n       <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {forumMessages.length === 0 ? (\r\n+        {messages.length === 0 ? (\r\n           <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message de forum à modérer.\r\n+            Aucun message à modérer.\r\n           </li>\r\n         ) : (\r\n-          forumMessages.map((msg) => {\r\n-            const inapproprie = contientMotInterdit(msg.contenu);\r\n-            const auteurNom = msg.auteur || \"Auteur inconnu\";\r\n-            const dateFormatee = new Date(msg.dateCreation).toLocaleString();\r\n+          messages.map(msg => {\r\n+            // On peut aussi se baser sur msg.inapproprie côté backend\r\n+            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n+            const expediteur = msg.expediteur || 'Inconnu';\r\n+            const destinataire = msg.destinataire || 'Public';\r\n+            const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n \r\n             return (\r\n               <li\r\n-                key={msg.idSujet}\r\n+                key={msg.id}\r\n                 className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n               >\r\n                 <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{auteurNom}</strong> :{' '}\r\n+                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n                   {inapproprie ? (\r\n                     <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n                   ) : (\r\n-                    <span className=\"text-gray-700\">{msg.titre} — {msg.contenu}</span>\r\n+                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n                   )}\r\n                   <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateFormatee})\r\n+                    ({dateHeure})\r\n                   </span>\r\n                 </div>\r\n                 <button\r\n-                  onClick={() => handleSupprimerForum(msg.idSujet)}\r\n+                  onClick={() => handleSupprimer(msg.id)}\r\n                   className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                 >\r\n                   Supprimer\r\n                 </button>\r\n@@ -112,5 +112,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default ModerationDiscussions;\r\n+export default ModerationMessages;\r\n"
                },
                {
                    "date": 1749914309018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/tous`, {\r\n+  const response = await fetch(`${API_BASE_URL}messag/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n     throw new Error(\"Erreur lors de la récupération des messages\");\r\n"
                },
                {
                    "date": 1749914321373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}messag/admin/tous`, {\r\n+  const response = await fetch(`${API_BASE_URL}messages/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n     throw new Error(\"Erreur lors de la récupération des messages\");\r\n@@ -22,9 +22,9 @@\n   return await response.json();\r\n }\r\n \r\n async function supprimerMessage(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/admin/supprimer/${id}`, {\r\n+  const response = await fetch(`${API_BASE_URL}messages/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n"
                },
                {
                    "date": 1749914341350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   return await response.json();\r\n }\r\n \r\n async function supprimerMessage(id) {\r\n-  const response = await fetch(`${API_BASE_URL}messages/admin/supprimer/${id}`, {\r\n+  const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n"
                },
                {
                    "date": 1749914350652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}messages/admin/tous`, {\r\n+  const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n   if (!response.ok) {\r\n     throw new Error(\"Erreur lors de la récupération des messages\");\r\n"
                },
                {
                    "date": 1749927724293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n+// Mots interdits pour les messages (optionnel si msg.inapproprie est utilisé)\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n@@ -15,101 +14,173 @@\n async function getMessages() {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la récupération des messages\");\r\n-  }\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la récupération des messages\");\r\n   return await response.json();\r\n }\r\n \r\n async function supprimerMessage(id) {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la suppression du message\");\r\n-  }\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la suppression du message\");\r\n   return await response.text();\r\n }\r\n \r\n+// 🆕 Forum : récupérer tous les sujets\r\n+async function getSujetsForum() {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la récupération des sujets\");\r\n+  return await response.json();\r\n+}\r\n+\r\n+// 🆕 Forum : supprimer un sujet\r\n+async function supprimerSujetForum(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`, {\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la suppression du sujet\");\r\n+  return await response.text();\r\n+}\r\n+\r\n const ModerationMessages = () => {\r\n   const [messages, setMessages] = useState([]);\r\n+  const [sujets, setSujets] = useState([]);\r\n \r\n   useEffect(() => {\r\n     fetchMessages();\r\n+    fetchSujetsForum();\r\n   }, []);\r\n \r\n   const fetchMessages = async () => {\r\n     try {\r\n       const data = await getMessages();\r\n-      console.log('Messages reçus:', data);\r\n       setMessages(data);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages:', error);\r\n+      console.error('Erreur récupération messages:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimer = async (id) => {\r\n-    if (!id) {\r\n-      console.error('handleSupprimer: id est undefined');\r\n-      return;\r\n+  const fetchSujetsForum = async () => {\r\n+    try {\r\n+      const data = await getSujetsForum();\r\n+      setSujets(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur récupération sujets:', error);\r\n     }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n+  };\r\n+\r\n+  const handleSupprimerMessage = async (id) => {\r\n+    const confirmation = window.confirm('Supprimer ce message ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n       await supprimerMessage(id);\r\n       setMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la suppression du message:', error);\r\n+      console.error('Erreur suppression message:', error);\r\n     }\r\n   };\r\n \r\n+  const handleSupprimerSujet = async (idSujet) => {\r\n+    const confirmation = window.confirm('Supprimer ce sujet ?');\r\n+    if (!confirmation) return;\r\n+\r\n+    try {\r\n+      await supprimerSujetForum(idSujet);\r\n+      setSujets(prev => prev.filter(s => s.idSujet !== idSujet));\r\n+    } catch (error) {\r\n+      console.error('Erreur suppression sujet forum:', error);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n-      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {messages.length === 0 ? (\r\n-          <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message à modérer.\r\n-          </li>\r\n+    <div className=\"space-y-8 p-4\">\r\n+      {/* Bloc Messages */}\r\n+      <div>\r\n+        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages</h2>\r\n+        <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+          {messages.length === 0 ? (\r\n+            <li className=\"p-4 text-center text-gray-500\">Aucun message à modérer.</li>\r\n+          ) : (\r\n+            messages.map(msg => {\r\n+              const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n+              const expediteur = msg.expediteur || 'Inconnu';\r\n+              const destinataire = msg.destinataire || 'Public';\r\n+              const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n+\r\n+              return (\r\n+                <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n+                  <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                    <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n+                    {inapproprie ? (\r\n+                      <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                    ) : (\r\n+                      <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                    )}\r\n+                    <span className=\"block text-xs text-gray-500 mt-1\">({dateHeure})</span>\r\n+                  </div>\r\n+                  <button\r\n+                    onClick={() => handleSupprimerMessage(msg.id)}\r\n+                    className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n+                  >\r\n+                    Supprimer\r\n+                  </button>\r\n+                </li>\r\n+              );\r\n+            })\r\n+          )}\r\n+        </ul>\r\n+      </div>\r\n+\r\n+      {/* Bloc Forum */}\r\n+      <div>\r\n+        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Sujets du Forum</h2>\r\n+        {sujets.length === 0 ? (\r\n+          <p className=\"text-gray-500\">Aucun sujet trouvé.</p>\r\n         ) : (\r\n-          messages.map(msg => {\r\n-            // On peut aussi se baser sur msg.inapproprie côté backend\r\n-            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-            const expediteur = msg.expediteur || 'Inconnu';\r\n-            const destinataire = msg.destinataire || 'Public';\r\n-            const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n+          <ul className=\"space-y-6\">\r\n+            {sujets.map(sujet => (\r\n+              <li key={sujet.idSujet} className=\"border border-gray-200 rounded-md p-4 shadow-sm\">\r\n+                <div className=\"flex justify-between items-start\">\r\n+                  <div>\r\n+                    <h3 className=\"text-lg font-semibold\">{sujet.titre}</h3>\r\n+                    <p className=\"text-gray-800\">{sujet.contenu}</p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Auteur : {sujet.auteur} | {new Date(sujet.dateCreation).toLocaleString()}\r\n+                    </p>\r\n+                  </div>\r\n+                  <button\r\n+                    onClick={() => handleSupprimerSujet(sujet.idSujet)}\r\n+                    className=\"bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700\"\r\n+                  >\r\n+                    Supprimer\r\n+                  </button>\r\n+                </div>\r\n \r\n-            return (\r\n-              <li\r\n-                key={msg.id}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-              >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateHeure})\r\n-                  </span>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimer(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n+                {sujet.reponses && sujet.reponses.length > 0 && (\r\n+                  <div className=\"mt-4 border-t pt-2\">\r\n+                    <h4 className=\"text-sm font-semibold text-gray-600 mb-2\">Réponses :</h4>\r\n+                    <ul className=\"space-y-2\">\r\n+                      {sujet.reponses.map(rep => (\r\n+                        <li key={rep.idReponse} className=\"bg-gray-50 p-2 rounded\">\r\n+                          <p><strong>{rep.auteur}</strong> : {rep.message}</p>\r\n+                          <p className=\"text-xs text-gray-500\">{new Date(rep.dateReponse).toLocaleString()}</p>\r\n+                        </li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n               </li>\r\n-            );\r\n-          })\r\n+            ))}\r\n+          </ul>\r\n         )}\r\n-      </ul>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1749928123212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useEffect, useState } from 'react';\r\n+\r\n+const API_BASE_URL = 'http://localhost:9191/api';\r\n+\r\n+// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n+const motsInterdits = ['haine', 'suicide', 'viol'];\r\n+\r\n+// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n+function contientMotInterdit(texte) {\r\n+  if (!texte) return false;\r\n+  const texteMinuscule = texte.toLowerCase();\r\n+  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n+}\r\n+\r\n+async function getMessages() {\r\n+  const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error(\"Erreur lors de la récupération des messages\");\r\n+  }\r\n+  return await response.json();\r\n+}\r\n+\r\n+async function supprimerMessage(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) {\r\n+    throw new Error(\"Erreur lors de la suppression du message\");\r\n+  }\r\n+  return await response.text();\r\n+}\r\n+\r\n+const ModerationMessages = () => {\r\n+  const [messages, setMessages] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    fetchMessages();\r\n+  }, []);\r\n+\r\n+  const fetchMessages = async () => {\r\n+    try {\r\n+      const data = await getMessages();\r\n+      console.log('Messages reçus:', data);\r\n+      setMessages(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la récupération des messages:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSupprimer = async (id) => {\r\n+    if (!id) {\r\n+      console.error('handleSupprimer: id est undefined');\r\n+      return;\r\n+    }\r\n+    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n+    if (!confirmation) return;\r\n+\r\n+    try {\r\n+      await supprimerMessage(id);\r\n+      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de la suppression du message:', error);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"space-y-4\">\r\n+      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n+      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+        {messages.length === 0 ? (\r\n+          <li className=\"p-4 text-center text-gray-500\">\r\n+            Aucun message à modérer.\r\n+          </li>\r\n+        ) : (\r\n+          messages.map(msg => {\r\n+            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n+            const expediteur = msg.expediteur || 'Inconnu';\r\n+            const destinataire = msg.destinataire || 'Public';\r\n+\r\n+            // Construction de la date complète à partir du backend\r\n+            const fullDateTime = new Date(`${msg.date}T${msg.heure}`);\r\n+            const dateHeure = !isNaN(fullDateTime)\r\n+              ? `${fullDateTime.toLocaleDateString()} ${fullDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`\r\n+              : 'Date inconnue';\r\n+\r\n+            return (\r\n+              <li\r\n+                key={msg.id}\r\n+                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n+              >\r\n+                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n+                  {inapproprie ? (\r\n+                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                  ) : (\r\n+                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                  )}\r\n+                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n+                    ({dateHeure})\r\n+                  </span>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleSupprimer(msg.id)}\r\n+                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n+                >\r\n+                  Supprimer\r\n+                </button>\r\n+              </li>\r\n+            );\r\n+          })\r\n+        )}\r\n+      </ul>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default ModerationMessages;\r\n"
                },
                {
                    "date": 1749928186893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Mots interdits (optionnel ici si tu utilises déjà le champ 'inapproprie')\r\n+// Mots interdits pour les messages (optionnel si msg.inapproprie est utilisé)\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n-// Fonction de modération locale (optionnelle, tu peux utiliser msg.inapproprie aussi)\r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n@@ -15,105 +14,173 @@\n async function getMessages() {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la récupération des messages\");\r\n-  }\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la récupération des messages\");\r\n   return await response.json();\r\n }\r\n \r\n async function supprimerMessage(id) {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) {\r\n-    throw new Error(\"Erreur lors de la suppression du message\");\r\n-  }\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la suppression du message\");\r\n   return await response.text();\r\n }\r\n \r\n+// 🆕 Forum : récupérer tous les sujets\r\n+async function getSujetsForum() {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la récupération des sujets\");\r\n+  return await response.json();\r\n+}\r\n+\r\n+// 🆕 Forum : supprimer un sujet\r\n+async function supprimerSujetForum(id) {\r\n+  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`, {\r\n+    method: 'DELETE',\r\n+    credentials: 'include',\r\n+  });\r\n+  if (!response.ok) throw new Error(\"Erreur lors de la suppression du sujet\");\r\n+  return await response.text();\r\n+}\r\n+\r\n const ModerationMessages = () => {\r\n   const [messages, setMessages] = useState([]);\r\n+  const [sujets, setSujets] = useState([]);\r\n \r\n   useEffect(() => {\r\n     fetchMessages();\r\n+    fetchSujetsForum();\r\n   }, []);\r\n \r\n   const fetchMessages = async () => {\r\n     try {\r\n       const data = await getMessages();\r\n-      console.log('Messages reçus:', data);\r\n       setMessages(data);\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la récupération des messages:', error);\r\n+      console.error('Erreur récupération messages:', error);\r\n     }\r\n   };\r\n \r\n-  const handleSupprimer = async (id) => {\r\n-    if (!id) {\r\n-      console.error('handleSupprimer: id est undefined');\r\n-      return;\r\n+  const fetchSujetsForum = async () => {\r\n+    try {\r\n+      const data = await getSujetsForum();\r\n+      setSujets(data);\r\n+    } catch (error) {\r\n+      console.error('Erreur récupération sujets:', error);\r\n     }\r\n-    const confirmation = window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?');\r\n+  };\r\n+\r\n+  const handleSupprimerMessage = async (id) => {\r\n+    const confirmation = window.confirm('Supprimer ce message ?');\r\n     if (!confirmation) return;\r\n \r\n     try {\r\n       await supprimerMessage(id);\r\n       setMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n-      console.error('Erreur lors de la suppression du message:', error);\r\n+      console.error('Erreur suppression message:', error);\r\n     }\r\n   };\r\n \r\n+  const handleSupprimerSujet = async (idSujet) => {\r\n+    const confirmation = window.confirm('Supprimer ce sujet ?');\r\n+    if (!confirmation) return;\r\n+\r\n+    try {\r\n+      await supprimerSujetForum(idSujet);\r\n+      setSujets(prev => prev.filter(s => s.idSujet !== idSujet));\r\n+    } catch (error) {\r\n+      console.error('Erreur suppression sujet forum:', error);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"space-y-4\">\r\n-      <h2 className=\"text-xl font-bold text-gray-700\">Modération des Messages</h2>\r\n-      <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-        {messages.length === 0 ? (\r\n-          <li className=\"p-4 text-center text-gray-500\">\r\n-            Aucun message à modérer.\r\n-          </li>\r\n-        ) : (\r\n-          messages.map(msg => {\r\n-            const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-            const expediteur = msg.expediteur || 'Inconnu';\r\n-            const destinataire = msg.destinataire || 'Public';\r\n+    <div className=\"space-y-8 p-4\">\r\n+      {/* Bloc Messages */}\r\n+      <div>\r\n+        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages</h2>\r\n+        <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n+          {messages.length === 0 ? (\r\n+            <li className=\"p-4 text-center text-gray-500\">Aucun message à modérer.</li>\r\n+          ) : (\r\n+            messages.map(msg => {\r\n+              const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n+              const expediteur = msg.expediteur || 'Inconnu';\r\n+              const destinataire = msg.destinataire || 'Public';\r\n+              const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n \r\n-            // Construction de la date complète à partir du backend\r\n-            const fullDateTime = new Date(`${msg.date}T${msg.heure}`);\r\n-            const dateHeure = !isNaN(fullDateTime)\r\n-              ? `${fullDateTime.toLocaleDateString()} ${fullDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`\r\n-              : 'Date inconnue';\r\n+              return (\r\n+                <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n+                  <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n+                    <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n+                    {inapproprie ? (\r\n+                      <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n+                    ) : (\r\n+                      <span className=\"text-gray-700\">{msg.contenu}</span>\r\n+                    )}\r\n+                    <span className=\"block text-xs text-gray-500 mt-1\">({dateHeure})</span>\r\n+                  </div>\r\n+                  <button\r\n+                    onClick={() => handleSupprimerMessage(msg.id)}\r\n+                    className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n+                  >\r\n+                    Supprimer\r\n+                  </button>\r\n+                </li>\r\n+              );\r\n+            })\r\n+          )}\r\n+        </ul>\r\n+      </div>\r\n \r\n-            return (\r\n-              <li\r\n-                key={msg.id}\r\n-                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\"\r\n-              >\r\n-                <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                  <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n-                  {inapproprie ? (\r\n-                    <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                  ) : (\r\n-                    <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                  )}\r\n-                  <span className=\"block text-xs text-gray-500 mt-1\">\r\n-                    ({dateHeure})\r\n-                  </span>\r\n+      {/* Bloc Forum */}\r\n+      <div>\r\n+        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Sujets du Forum</h2>\r\n+        {sujets.length === 0 ? (\r\n+          <p className=\"text-gray-500\">Aucun sujet trouvé.</p>\r\n+        ) : (\r\n+          <ul className=\"space-y-6\">\r\n+            {sujets.map(sujet => (\r\n+              <li key={sujet.idSujet} className=\"border border-gray-200 rounded-md p-4 shadow-sm\">\r\n+                <div className=\"flex justify-between items-start\">\r\n+                  <div>\r\n+                    <h3 className=\"text-lg font-semibold\">{sujet.titre}</h3>\r\n+                    <p className=\"text-gray-800\">{sujet.contenu}</p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Auteur : {sujet.auteur} | {new Date(sujet.dateCreation).toLocaleString()}\r\n+                    </p>\r\n+                  </div>\r\n+                  <button\r\n+                    onClick={() => handleSupprimerSujet(sujet.idSujet)}\r\n+                    className=\"bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700\"\r\n+                  >\r\n+                    Supprimer\r\n+                  </button>\r\n                 </div>\r\n-                <button\r\n-                  onClick={() => handleSupprimer(msg.id)}\r\n-                  className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n-                >\r\n-                  Supprimer\r\n-                </button>\r\n+\r\n+                {sujet.reponses && sujet.reponses.length > 0 && (\r\n+                  <div className=\"mt-4 border-t pt-2\">\r\n+                    <h4 className=\"text-sm font-semibold text-gray-600 mb-2\">Réponses :</h4>\r\n+                    <ul className=\"space-y-2\">\r\n+                      {sujet.reponses.map(rep => (\r\n+                        <li key={rep.idReponse} className=\"bg-gray-50 p-2 rounded\">\r\n+                          <p><strong>{rep.auteur}</strong> : {rep.message}</p>\r\n+                          <p className=\"text-xs text-gray-500\">{new Date(rep.dateReponse).toLocaleString()}</p>\r\n+                        </li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n               </li>\r\n-            );\r\n-          })\r\n+            ))}\r\n+          </ul>\r\n         )}\r\n-      </ul>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1749928270593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,191 +184,4 @@\n   );\r\n };\r\n \r\n export default ModerationMessages;\r\n-import React, { useEffect, useState } from 'react';\r\n-\r\n-const API_BASE_URL = 'http://localhost:9191/api';\r\n-\r\n-// Mots interdits pour les messages (optionnel si msg.inapproprie est utilisé)\r\n-const motsInterdits = ['haine', 'suicide', 'viol'];\r\n-\r\n-function contientMotInterdit(texte) {\r\n-  if (!texte) return false;\r\n-  const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n-}\r\n-\r\n-async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la récupération des messages\");\r\n-  return await response.json();\r\n-}\r\n-\r\n-async function supprimerMessage(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la suppression du message\");\r\n-  return await response.text();\r\n-}\r\n-\r\n-// 🆕 Forum : récupérer tous les sujets\r\n-async function getSujetsForum() {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la récupération des sujets\");\r\n-  return await response.json();\r\n-}\r\n-\r\n-// 🆕 Forum : supprimer un sujet\r\n-async function supprimerSujetForum(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`, {\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la suppression du sujet\");\r\n-  return await response.text();\r\n-}\r\n-\r\n-const ModerationMessages = () => {\r\n-  const [messages, setMessages] = useState([]);\r\n-  const [sujets, setSujets] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    fetchMessages();\r\n-    fetchSujetsForum();\r\n-  }, []);\r\n-\r\n-  const fetchMessages = async () => {\r\n-    try {\r\n-      const data = await getMessages();\r\n-      setMessages(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur récupération messages:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const fetchSujetsForum = async () => {\r\n-    try {\r\n-      const data = await getSujetsForum();\r\n-      setSujets(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur récupération sujets:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerMessage = async (id) => {\r\n-    const confirmation = window.confirm('Supprimer ce message ?');\r\n-    if (!confirmation) return;\r\n-\r\n-    try {\r\n-      await supprimerMessage(id);\r\n-      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n-    } catch (error) {\r\n-      console.error('Erreur suppression message:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerSujet = async (idSujet) => {\r\n-    const confirmation = window.confirm('Supprimer ce sujet ?');\r\n-    if (!confirmation) return;\r\n-\r\n-    try {\r\n-      await supprimerSujetForum(idSujet);\r\n-      setSujets(prev => prev.filter(s => s.idSujet !== idSujet));\r\n-    } catch (error) {\r\n-      console.error('Erreur suppression sujet forum:', error);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"space-y-8 p-4\">\r\n-      {/* Bloc Messages */}\r\n-      <div>\r\n-        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages</h2>\r\n-        <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-          {messages.length === 0 ? (\r\n-            <li className=\"p-4 text-center text-gray-500\">Aucun message à modérer.</li>\r\n-          ) : (\r\n-            messages.map(msg => {\r\n-              const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-              const expediteur = msg.expediteur || 'Inconnu';\r\n-              const destinataire = msg.destinataire || 'Public';\r\n-              const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n-\r\n-              return (\r\n-                <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n-                  <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                    <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n-                    {inapproprie ? (\r\n-                      <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                    ) : (\r\n-                      <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                    )}\r\n-                    <span className=\"block text-xs text-gray-500 mt-1\">({dateHeure})</span>\r\n-                  </div>\r\n-                  <button\r\n-                    onClick={() => handleSupprimerMessage(msg.id)}\r\n-                    className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n-                  >\r\n-                    Supprimer\r\n-                  </button>\r\n-                </li>\r\n-              );\r\n-            })\r\n-          )}\r\n-        </ul>\r\n-      </div>\r\n-\r\n-      {/* Bloc Forum */}\r\n-      <div>\r\n-        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Sujets du Forum</h2>\r\n-        {sujets.length === 0 ? (\r\n-          <p className=\"text-gray-500\">Aucun sujet trouvé.</p>\r\n-        ) : (\r\n-          <ul className=\"space-y-6\">\r\n-            {sujets.map(sujet => (\r\n-              <li key={sujet.idSujet} className=\"border border-gray-200 rounded-md p-4 shadow-sm\">\r\n-                <div className=\"flex justify-between items-start\">\r\n-                  <div>\r\n-                    <h3 className=\"text-lg font-semibold\">{sujet.titre}</h3>\r\n-                    <p className=\"text-gray-800\">{sujet.contenu}</p>\r\n-                    <p className=\"text-sm text-gray-500\">\r\n-                      Auteur : {sujet.auteur} | {new Date(sujet.dateCreation).toLocaleString()}\r\n-                    </p>\r\n-                  </div>\r\n-                  <button\r\n-                    onClick={() => handleSupprimerSujet(sujet.idSujet)}\r\n-                    className=\"bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700\"\r\n-                  >\r\n-                    Supprimer\r\n-                  </button>\r\n-                </div>\r\n-\r\n-                {sujet.reponses && sujet.reponses.length > 0 && (\r\n-                  <div className=\"mt-4 border-t pt-2\">\r\n-                    <h4 className=\"text-sm font-semibold text-gray-600 mb-2\">Réponses :</h4>\r\n-                    <ul className=\"space-y-2\">\r\n-                      {sujet.reponses.map(rep => (\r\n-                        <li key={rep.idReponse} className=\"bg-gray-50 p-2 rounded\">\r\n-                          <p><strong>{rep.auteur}</strong> : {rep.message}</p>\r\n-                          <p className=\"text-xs text-gray-500\">{new Date(rep.dateReponse).toLocaleString()}</p>\r\n-                        </li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-              </li>\r\n-            ))}\r\n-          </ul>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default ModerationMessages;\r\n"
                },
                {
                    "date": 1749928459285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,50 +1,51 @@\n import React, { useEffect, useState } from 'react';\r\n \r\n const API_BASE_URL = 'http://localhost:9191/api';\r\n \r\n-// Mots interdits pour les messages (optionnel si msg.inapproprie est utilisé)\r\n const motsInterdits = ['haine', 'suicide', 'viol'];\r\n \r\n function contientMotInterdit(texte) {\r\n   if (!texte) return false;\r\n   const texteMinuscule = texte.toLowerCase();\r\n   return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n }\r\n \r\n+// Requête pour les messages\r\n async function getMessages() {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la récupération des messages\");\r\n+  if (!response.ok) throw new Error(\"Erreur récupération des messages\");\r\n   return await response.json();\r\n }\r\n \r\n+// Supprimer un message\r\n async function supprimerMessage(id) {\r\n   const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la suppression du message\");\r\n+  if (!response.ok) throw new Error(\"Erreur suppression message\");\r\n   return await response.text();\r\n }\r\n \r\n-// 🆕 Forum : récupérer tous les sujets\r\n+// Forum : récupérer les sujets\r\n async function getSujetsForum() {\r\n   const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la récupération des sujets\");\r\n+  if (!response.ok) throw new Error(\"Erreur récupération des sujets forum\");\r\n   return await response.json();\r\n }\r\n \r\n-// 🆕 Forum : supprimer un sujet\r\n+// Forum : supprimer un sujet\r\n async function supprimerSujetForum(id) {\r\n   const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`, {\r\n     method: 'DELETE',\r\n     credentials: 'include',\r\n   });\r\n-  if (!response.ok) throw new Error(\"Erreur lors de la suppression du sujet\");\r\n+  if (!response.ok) throw new Error(\"Erreur suppression sujet\");\r\n   return await response.text();\r\n }\r\n \r\n const ModerationMessages = () => {\r\n@@ -69,16 +70,15 @@\n     try {\r\n       const data = await getSujetsForum();\r\n       setSujets(data);\r\n     } catch (error) {\r\n-      console.error('Erreur récupération sujets:', error);\r\n+      console.error('Erreur récupération sujets forum:', error);\r\n     }\r\n   };\r\n \r\n   const handleSupprimerMessage = async (id) => {\r\n-    const confirmation = window.confirm('Supprimer ce message ?');\r\n-    if (!confirmation) return;\r\n-\r\n+    if (!id) return;\r\n+    if (!window.confirm('Supprimer ce message ?')) return;\r\n     try {\r\n       await supprimerMessage(id);\r\n       setMessages(prev => prev.filter(msg => msg.id !== id));\r\n     } catch (error) {\r\n@@ -86,11 +86,9 @@\n     }\r\n   };\r\n \r\n   const handleSupprimerSujet = async (idSujet) => {\r\n-    const confirmation = window.confirm('Supprimer ce sujet ?');\r\n-    if (!confirmation) return;\r\n-\r\n+    if (!window.confirm('Supprimer ce sujet ?')) return;\r\n     try {\r\n       await supprimerSujetForum(idSujet);\r\n       setSujets(prev => prev.filter(s => s.idSujet !== idSujet));\r\n     } catch (error) {\r\n@@ -99,21 +97,30 @@\n   };\r\n \r\n   return (\r\n     <div className=\"space-y-8 p-4\">\r\n-      {/* Bloc Messages */}\r\n+      {/* Bloc Messages privés + forum */}\r\n       <div>\r\n-        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages</h2>\r\n+        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages (Forum & Privés)</h2>\r\n         <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n           {messages.length === 0 ? (\r\n             <li className=\"p-4 text-center text-gray-500\">Aucun message à modérer.</li>\r\n           ) : (\r\n             messages.map(msg => {\r\n               const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-              const expediteur = msg.expediteur || 'Inconnu';\r\n-              const destinataire = msg.destinataire || 'Public';\r\n-              const dateHeure = `${new Date(msg.date).toLocaleDateString()} ${msg.heure}`;\r\n+              const expediteur = msg.anonymat ? 'Anonyme' : (msg.expediteur || 'Inconnu');\r\n+              const destinataire = msg.destinataire || 'Forum Public';\r\n \r\n+              let dateHeure = 'Date inconnue';\r\n+              try {\r\n+                const dateTime = new Date(`${msg.date}T${msg.heure}`);\r\n+                if (!isNaN(dateTime)) {\r\n+                  dateHeure = `${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n+                }\r\n+              } catch (e) {\r\n+                console.error('Date invalide:', e);\r\n+              }\r\n+\r\n               return (\r\n                 <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n                   <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n                     <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n@@ -136,9 +143,9 @@\n           )}\r\n         </ul>\r\n       </div>\r\n \r\n-      {/* Bloc Forum */}\r\n+      {/* Bloc Forum Sujets */}\r\n       <div>\r\n         <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Sujets du Forum</h2>\r\n         {sujets.length === 0 ? (\r\n           <p className=\"text-gray-500\">Aucun sujet trouvé.</p>\r\n"
                },
                {
                    "date": 1749941013289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,194 +1,173 @@\n-import React, { useEffect, useState } from 'react';\r\n+// src/components/utilisateur/MesReservations.jsx\r\n+import React, { useState, useEffect, useCallback } from 'react';\r\n+import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n+import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n-const API_BASE_URL = 'http://localhost:9191/api';\r\n+const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n+    const [reservations, setReservations] = useState([]);\r\n+    const [loading, setLoading] = useState(true);\r\n \r\n-const motsInterdits = ['haine', 'suicide', 'viol'];\r\n+    const fetchMesReservations = useCallback(async () => {\r\n+        setLoading(true);\r\n+        try {\r\n+            const data = await getReservationsUtilisateur();\r\n+            setReservations(data);\r\n+        } catch (err) {\r\n+            console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n+            onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n+        } finally {\r\n+            setLoading(false);\r\n+        }\r\n+    }, [onError]);\r\n \r\n-function contientMotInterdit(texte) {\r\n-  if (!texte) return false;\r\n-  const texteMinuscule = texte.toLowerCase();\r\n-  return motsInterdits.some(mot => texteMinuscule.includes(mot.toLowerCase()));\r\n-}\r\n+    useEffect(() => {\r\n+        fetchMesReservations();\r\n+    }, [fetchMesReservations]);\r\n \r\n-// Requête pour les messages\r\n-async function getMessages() {\r\n-  const response = await fetch(`${API_BASE_URL}/messages/admin/tous`, {\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur récupération des messages\");\r\n-  return await response.json();\r\n-}\r\n+    const handleAnnulerReservation = (reservationId) => {\r\n+        onShowConfirm(\r\n+            \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n+            async () => {\r\n+                try {\r\n+                    await annulerReservationUtilisateur(reservationId);\r\n+                    fetchMesReservations();\r\n+                } catch (err) {\r\n+                    console.error(\"Erreur lors de l'annulation de la réservation :\", err.response ? err.response.data : err.message);\r\n+                    onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n+                }\r\n+            }\r\n+        );\r\n+    };\r\n \r\n-// Supprimer un message\r\n-async function supprimerMessage(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/messages/admin/supprimer/${id}`, {\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur suppression message\");\r\n-  return await response.text();\r\n-}\r\n+    const formatDateTime = (dateString, timeString) => {\r\n+        if (!dateString) return 'N/A';\r\n+        try {\r\n+            const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n+            if (isNaN(dateTime.getTime())) {\r\n+                console.warn(\"Invalid date format detected for:\", dateString, timeString);\r\n+                return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n+            }\r\n+            return dateTime.toLocaleString('fr-FR', {\r\n+                year: 'numeric',\r\n+                month: 'long',\r\n+                day: 'numeric',\r\n+                hour: '2-digit',\r\n+                minute: '2-digit'\r\n+            });\r\n+        } catch (e) {\r\n+            console.error(\"Erreur de formatage de date/heure:\", e);\r\n+            return `${dateString} ${timeString || ''}`;\r\n+        }\r\n+    };\r\n \r\n-// Forum : récupérer les sujets\r\n-async function getSujetsForum() {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/tous`, {\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur récupération des sujets forum\");\r\n-  return await response.json();\r\n-}\r\n+    const showReservationDetails = (res) => {\r\n+        const details = `\r\n+Détails de la réservation ${res.id}:\r\n+Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n+Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n+Statut: ${res.statut}\r\n+Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n+        `;\r\n+        onShowInfo(\"Détails de la réservation\", details);\r\n+    };\r\n \r\n-// Forum : supprimer un sujet\r\n-async function supprimerSujetForum(id) {\r\n-  const response = await fetch(`${API_BASE_URL}/forum/admin/supprimer-sujet/${id}`, {\r\n-    method: 'DELETE',\r\n-    credentials: 'include',\r\n-  });\r\n-  if (!response.ok) throw new Error(\"Erreur suppression sujet\");\r\n-  return await response.text();\r\n-}\r\n-\r\n-const ModerationMessages = () => {\r\n-  const [messages, setMessages] = useState([]);\r\n-  const [sujets, setSujets] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    fetchMessages();\r\n-    fetchSujetsForum();\r\n-  }, []);\r\n-\r\n-  const fetchMessages = async () => {\r\n-    try {\r\n-      const data = await getMessages();\r\n-      setMessages(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur récupération messages:', error);\r\n+    // On ne montre rien pendant le chargement (chargement supprimé)\r\n+    if (loading) {\r\n+        return null;\r\n     }\r\n-  };\r\n \r\n-  const fetchSujetsForum = async () => {\r\n-    try {\r\n-      const data = await getSujetsForum();\r\n-      setSujets(data);\r\n-    } catch (error) {\r\n-      console.error('Erreur récupération sujets forum:', error);\r\n+    if (!reservations || reservations.length === 0) {\r\n+        return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n     }\r\n-  };\r\n \r\n-  const handleSupprimerMessage = async (id) => {\r\n-    if (!id) return;\r\n-    if (!window.confirm('Supprimer ce message ?')) return;\r\n-    try {\r\n-      await supprimerMessage(id);\r\n-      setMessages(prev => prev.filter(msg => msg.id !== id));\r\n-    } catch (error) {\r\n-      console.error('Erreur suppression message:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSupprimerSujet = async (idSujet) => {\r\n-    if (!window.confirm('Supprimer ce sujet ?')) return;\r\n-    try {\r\n-      await supprimerSujetForum(idSujet);\r\n-      setSujets(prev => prev.filter(s => s.idSujet !== idSujet));\r\n-    } catch (error) {\r\n-      console.error('Erreur suppression sujet forum:', error);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"space-y-8 p-4\">\r\n-      {/* Bloc Messages privés + forum */}\r\n-      <div>\r\n-        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Messages (Forum & Privés)</h2>\r\n-        <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n-          {messages.length === 0 ? (\r\n-            <li className=\"p-4 text-center text-gray-500\">Aucun message à modérer.</li>\r\n-          ) : (\r\n-            messages.map(msg => {\r\n-              const inapproprie = msg.inapproprie || contientMotInterdit(msg.contenu);\r\n-              const expediteur = msg.anonymat ? 'Anonyme' : (msg.expediteur || 'Inconnu');\r\n-              const destinataire = msg.destinataire || 'Forum Public';\r\n-\r\n-              let dateHeure = 'Date inconnue';\r\n-              try {\r\n-                const dateTime = new Date(`${msg.date}T${msg.heure}`);\r\n-                if (!isNaN(dateTime)) {\r\n-                  dateHeure = `${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n-                }\r\n-              } catch (e) {\r\n-                console.error('Date invalide:', e);\r\n-              }\r\n-\r\n-              return (\r\n-                <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n-                  <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n-                    <strong className=\"text-gray-800\">{expediteur}</strong> à <em>{destinataire}</em> :{' '}\r\n-                    {inapproprie ? (\r\n-                      <span className=\"text-red-600 font-semibold\">[Message inapproprié]</span>\r\n-                    ) : (\r\n-                      <span className=\"text-gray-700\">{msg.contenu}</span>\r\n-                    )}\r\n-                    <span className=\"block text-xs text-gray-500 mt-1\">({dateHeure})</span>\r\n-                  </div>\r\n-                  <button\r\n-                    onClick={() => handleSupprimerMessage(msg.id)}\r\n-                    className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600\"\r\n-                  >\r\n-                    Supprimer\r\n-                  </button>\r\n-                </li>\r\n-              );\r\n-            })\r\n-          )}\r\n-        </ul>\r\n-      </div>\r\n-\r\n-      {/* Bloc Forum Sujets */}\r\n-      <div>\r\n-        <h2 className=\"text-xl font-bold text-gray-700 mb-2\">Modération des Sujets du Forum</h2>\r\n-        {sujets.length === 0 ? (\r\n-          <p className=\"text-gray-500\">Aucun sujet trouvé.</p>\r\n-        ) : (\r\n-          <ul className=\"space-y-6\">\r\n-            {sujets.map(sujet => (\r\n-              <li key={sujet.idSujet} className=\"border border-gray-200 rounded-md p-4 shadow-sm\">\r\n-                <div className=\"flex justify-between items-start\">\r\n-                  <div>\r\n-                    <h3 className=\"text-lg font-semibold\">{sujet.titre}</h3>\r\n-                    <p className=\"text-gray-800\">{sujet.contenu}</p>\r\n-                    <p className=\"text-sm text-gray-500\">\r\n-                      Auteur : {sujet.auteur} | {new Date(sujet.dateCreation).toLocaleString()}\r\n-                    </p>\r\n-                  </div>\r\n-                  <button\r\n-                    onClick={() => handleSupprimerSujet(sujet.idSujet)}\r\n-                    className=\"bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700\"\r\n-                  >\r\n-                    Supprimer\r\n-                  </button>\r\n-                </div>\r\n-\r\n-                {sujet.reponses && sujet.reponses.length > 0 && (\r\n-                  <div className=\"mt-4 border-t pt-2\">\r\n-                    <h4 className=\"text-sm font-semibold text-gray-600 mb-2\">Réponses :</h4>\r\n-                    <ul className=\"space-y-2\">\r\n-                      {sujet.reponses.map(rep => (\r\n-                        <li key={rep.idReponse} className=\"bg-gray-50 p-2 rounded\">\r\n-                          <p><strong>{rep.auteur}</strong> : {rep.message}</p>\r\n-                          <p className=\"text-xs text-gray-500\">{new Date(rep.dateReponse).toLocaleString()}</p>\r\n-                        </li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-              </li>\r\n-            ))}\r\n-          </ul>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n+    return (\r\n+        <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n+            <table className=\"min-w-full divide-y divide-gray-200\">\r\n+                <thead className=\"bg-gray-50\">\r\n+                    <tr>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID Réservation</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure Dem.</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation Prévue</th>\r\n+                        <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+                    {reservations.map((res) => (\r\n+                        <tr key={res.id}>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{res.id}</td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n+                                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n+                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n+                                    ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n+                                    res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n+                                    res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n+                                    res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n+                                    'bg-gray-100 text-gray-800'}`}>\r\n+                                    <FontAwesomeIcon icon={\r\n+                                        res.statut === 'EN_ATTENTE' ? faClock :\r\n+                                        res.statut === 'VALIDÉ' ? faCheckCircle :\r\n+                                        res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n+                                        faInfoCircle\r\n+                                    } className=\"mr-1\" />\r\n+                                    {res.statut}\r\n+                                </span>\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n+                                    <>\r\n+                                        <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n+                                            {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n+                                        </p>\r\n+                                        {res.consultation.lienVisio && (\r\n+                                            <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n+                                                <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n+                                            </a>\r\n+                                        )}\r\n+                                    </>\r\n+                                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n+                                    <p className=\"text-red-500\">Consultation non trouvée</p>\r\n+                                ) : (\r\n+                                    <p className=\"text-gray-500\">N/A</p>\r\n+                                )}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-medium\">\r\n+                                {res.statut === 'EN_ATTENTE' && (\r\n+                                    <button\r\n+                                        onClick={() => handleAnnulerReservation(res.id)}\r\n+                                        className=\"text-red-600 hover:text-red-900\"\r\n+                                        title=\"Annuler cette réservation\"\r\n+                                    >\r\n+                                        <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n+                                    </button>\r\n+                                )}\r\n+                                <button\r\n+                                    onClick={() => showReservationDetails(res)}\r\n+                                    className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n+                                    title=\"Voir les détails\"\r\n+                                >\r\n+                                    <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n+                                </button>\r\n+                            </td>\r\n+                        </tr>\r\n+                    ))}\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    );\r\n };\r\n \r\n-export default ModerationMessages;\r\n+export default MesReservations;\r\n"
                }
            ],
            "date": 1749906549850,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { getDiscussions, supprimerDiscussion, getMessagesPrives, supprimerMessagePrive } from '../../services/serviceAdmin';\r\n\r\nconst motsInterdits = [\"suicide\", \"haine\", \"violence\", \"insulte\"];\r\n\r\nconst contientMotInterdit = (texte) => {\r\n  if (!texte) return false;\r\n  const txt = texte.toLowerCase();\r\n  return motsInterdits.some(mot => txt.includes(mot));\r\n};\r\n\r\nconst ModerationDiscussions = () => {\r\n  const [forumMessages, setForumMessages] = useState([]);\r\n  const [messagesPrives, setMessagesPrives] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('forum');\r\n\r\n  useEffect(() => {\r\n    fetchForumMessages();\r\n    fetchMessagesPrives();\r\n  }, []);\r\n\r\n  const fetchForumMessages = async () => {\r\n    try {\r\n      const data = await getDiscussions();\r\n      // filtrer les messages contenant mots interdits\r\n      const filtres = data.filter(msg => !contientMotInterdit(msg.contenu));\r\n      setForumMessages(filtres);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des messages du forum:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchMessagesPrives = async () => {\r\n    try {\r\n      const data = await getMessagesPrives();\r\n      // idem filtrage ici\r\n      const filtres = data.filter(msg => !contientMotInterdit(msg.contenu));\r\n      setMessagesPrives(filtres);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des messages privés:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSupprimerForum = async (id) => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce message du forum ?\")) {\r\n      try {\r\n        await supprimerDiscussion(id);\r\n        fetchForumMessages();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression du message du forum:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSupprimerPrive = async (id) => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce message privé ?\")) {\r\n      try {\r\n        await supprimerMessagePrive(id);\r\n        fetchMessagesPrives();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression du message privé:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Onglets */}\r\n      <div className=\"flex border-b border-gray-200\">\r\n        <button\r\n          onClick={() => setActiveTab('forum')}\r\n          className={`px-4 py-2 text-sm font-medium ${activeTab === 'forum' ? 'border-b-2 border-blue-500 text-blue-600' : 'text-gray-600 hover:text-gray-800'}`}\r\n        >\r\n          Modération Forum\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveTab('prive')}\r\n          className={`px-4 py-2 text-sm font-medium ${activeTab === 'prive' ? 'border-b-2 border-blue-500 text-blue-600' : 'text-gray-600 hover:text-gray-800'}`}\r\n        >\r\n          Modération Messagerie Privée\r\n        </button>\r\n      </div>\r\n\r\n      {/* Contenu onglet */}\r\n      <div className=\"mt-4\">\r\n        {activeTab === 'forum' && (\r\n          <div className=\"space-y-3\">\r\n            <h3 className=\"text-lg font-medium text-gray-700\">Messages du Forum</h3>\r\n            <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n              {forumMessages.length === 0 ? (\r\n                <li className=\"p-4 text-center text-gray-500\">Aucun message de forum à modérer.</li>\r\n              ) : (\r\n                forumMessages.map(msg => (\r\n                  <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n                    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n                      <strong className=\"text-gray-800\">{msg.auteur}</strong>: <span className=\"text-gray-700\">{msg.contenu}</span>\r\n                      <span className=\"block text-xs text-gray-500 mt-1\">({new Date(msg.date).toLocaleDateString()} à {msg.heure})</span>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleSupprimerForum(msg.id)}\r\n                      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                    >\r\n                      Supprimer\r\n                    </button>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'prive' && (\r\n          <div className=\"space-y-3\">\r\n            <h3 className=\"text-lg font-medium text-gray-700\">Messages Privés</h3>\r\n            <ul className=\"divide-y divide-gray-200 border border-gray-200 rounded-md\">\r\n              {messagesPrives.length === 0 ? (\r\n                <li className=\"p-4 text-center text-gray-500\">Aucun message privé à modérer.</li>\r\n              ) : (\r\n                messagesPrives.map(msg => (\r\n                  <li key={msg.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4\">\r\n                    <div className=\"flex-grow mb-2 sm:mb-0 pr-4\">\r\n                      <strong className=\"text-gray-800\">{msg.expéditeur}</strong> à <strong className=\"text-gray-800\">{msg.destinataire}</strong>: <span className=\"text-gray-700\">{msg.contenu}</span>\r\n                      <span className=\"block text-xs text-gray-500 mt-1\">({new Date(msg.date).toLocaleDateString()} à {msg.heure})</span>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleSupprimerPrive(msg.id)}\r\n                      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-200 flex-shrink-0\"\r\n                    >\r\n                      Supprimer\r\n                    </button>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModerationDiscussions;\r\n"
        }
    ]
}