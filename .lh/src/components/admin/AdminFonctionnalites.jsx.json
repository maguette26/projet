{
    "sourceFile": "src/components/admin/AdminFonctionnalites.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1750885746942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750886104795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,425 +1,521 @@\n import React, { useEffect, useState } from 'react';\r\n-import api from '../../services/api'; \r\n+import api from '../../services/api';\r\n+import { logout } from '../../services/serviceAuth';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import { faPencilAlt, faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n+import { faPencilAlt, faTrash, faPlus, faFileImport } from '@fortawesome/free-solid-svg-icons';\r\n \r\n function AdminFonctionnalites() {\r\n-    const [fonctionnalites, setFonctionnalites] = useState([]);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [error, setError] = useState(null);\r\n-    const [successMessage, setSuccessMessage] = useState(null);\r\n+  // États pour les fonctionnalités\r\n+  const [fonctionnalites, setFonctionnalites] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+  const [successMessage, setSuccessMessage] = useState(null);\r\n \r\n-    const [nom, setNom] = useState('');\r\n-    const [description, setDescription] = useState('');\r\n-    const [type, setType] = useState('');\r\n-    const [statut, setStatut] = useState(true);\r\n-    const [premium, setPremium] = useState(false);\r\n-    const [lienFichier, setLienFichier] = useState('');\r\n-    const [categorie, setCategorie] = useState('');\r\n-    const [editId, setEditId] = useState(null);\r\n+  // États formulaire ajout/modif\r\n+  const [nom, setNom] = useState('');\r\n+  const [description, setDescription] = useState('');\r\n+  const [type, setType] = useState('');\r\n+  const [statut, setStatut] = useState(true);\r\n+  const [premium, setPremium] = useState(false);\r\n+  const [lienFichier, setLienFichier] = useState('');\r\n+  const [categorie, setCategorie] = useState('');\r\n+  const [editId, setEditId] = useState(null);\r\n \r\n-    const [role, setRole] = useState(null);\r\n+  // Infos utilisateur\r\n+  const [role, setRole] = useState(null);\r\n+  const [email, setEmail] = useState(null);\r\n \r\n-    const [showForm, setShowForm] = useState(false);\r\n+  // Import Excel\r\n+  const [excelFile, setExcelFile] = useState(null);\r\n+  const [importLoading, setImportLoading] = useState(false);\r\n+  const [importMessage, setImportMessage] = useState(null);\r\n+  const [importError, setImportError] = useState(null);\r\n \r\n-    // État pour gérer la modal de confirmation de suppression\r\n-    const [modalDeleteId, setModalDeleteId] = useState(null);\r\n+  useEffect(() => {\r\n+    fetchUserInfo();\r\n+  }, []);\r\n \r\n-    useEffect(() => {\r\n-        fetchUserInfo();\r\n-    }, []);\r\n+  const fetchUserInfo = async () => {\r\n+    try {\r\n+      const res = await api.get('/auth/me');\r\n+      setRole(res.data.role);\r\n+      setEmail(res.data.email);\r\n+      fetchFonctionnalites();\r\n+    } catch (err) {\r\n+      console.error(\"Erreur lors de la récupération des infos utilisateur:\", err);\r\n+      setError(\"Erreur lors de la récupération des informations utilisateur.\");\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n \r\n-    useEffect(() => {\r\n-        if (successMessage) {\r\n-            const timer = setTimeout(() => setSuccessMessage(null), 3000);\r\n-            return () => clearTimeout(timer);\r\n-        }\r\n-    }, [successMessage]);\r\n+  const handleLogout = async () => {\r\n+    try {\r\n+      await logout();\r\n+    } catch (err) {\r\n+      console.error(\"Erreur lors de la déconnexion:\", err);\r\n+      setError(\"Erreur lors de la déconnexion.\");\r\n+    }\r\n+  };\r\n \r\n-    const fetchUserInfo = async () => {\r\n-        try {\r\n-            const res = await api.get('/auth/me'); \r\n-            setRole(res.data.role);\r\n-            fetchFonctionnalites();\r\n-        } catch (err) {\r\n-            console.error(err);\r\n-            setError(\"Erreur lors de la récupération des informations utilisateur.\");\r\n-            setLoading(false); \r\n-        }\r\n-    };\r\n+  const fetchFonctionnalites = async () => {\r\n+    setError(null);\r\n+    try {\r\n+      const res = await api.get('/fonctionnalites');\r\n+      if (Array.isArray(res.data)) {\r\n+        setFonctionnalites(res.data);\r\n+      } else {\r\n+        throw new Error(\"Format de données inattendu de l'API.\");\r\n+      }\r\n+    } catch (err) {\r\n+      handleApiError(err, \"Erreur lors du chargement des fonctionnalités.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n \r\n-    const fetchFonctionnalites = async () => {\r\n-        setError(null);\r\n-        try {\r\n-            const res = await api.get('/fonctionnalites'); \r\n-            if (Array.isArray(res.data)) {\r\n-                setFonctionnalites(res.data);\r\n-            } else {\r\n-                throw new Error(\"Format de données inattendu de l'API.\");\r\n-            }\r\n-        } catch (err) {\r\n-            handleApiError(err, \"Erreur lors du chargement des fonctionnalités.\");\r\n-        } finally {\r\n-            setLoading(false);\r\n-        }\r\n-    };\r\n+  const handleApiError = (err, defaultMessage) => {\r\n+    console.error(\"Erreur API:\", err);\r\n+    if (err.response) {\r\n+      switch (err.response.status) {\r\n+        case 403:\r\n+          setError(\"Accès refusé : Vous n'avez pas les permissions nécessaires.\");\r\n+          break;\r\n+        case 401:\r\n+          setError(\"Session expirée ou non autorisée. Veuillez vous reconnecter.\");\r\n+          break;\r\n+        case 404:\r\n+          setError(\"La ressource demandée n'a pas été trouvée.\");\r\n+          break;\r\n+        default:\r\n+          setError(err.response.data?.message || defaultMessage);\r\n+      }\r\n+    } else if (err.request) {\r\n+      setError(\"Aucune réponse du serveur. Vérifiez votre connexion ou si le backend est démarré.\");\r\n+    } else {\r\n+      setError(err.message || defaultMessage);\r\n+    }\r\n+  };\r\n \r\n-    const handleApiError = (err, defaultMessage) => {\r\n-        console.error(\"Erreur API:\", err);\r\n-        if (err.response) {\r\n-            switch (err.response.status) {\r\n-                case 403:\r\n-                    setError(\"Accès refusé : Vous n'avez pas les permissions nécessaires.\");\r\n-                    break;\r\n-                case 401:\r\n-                    setError(\"Session expirée ou non autorisée. Veuillez vous reconnecter.\");\r\n-                    break;\r\n-                case 404: \r\n-                    setError(\"La ressource demandée n'a pas été trouvée. Vérifiez l'URL ou si le backend est démarré.\");\r\n-                    break;\r\n-                default:\r\n-                    setError(err.response.data?.message || defaultMessage);\r\n-            }\r\n-        } else if (err.request) {\r\n-            setError(\"Aucune réponse du serveur. Vérifiez votre connexion internet ou si le backend est démarré et accessible.\");\r\n-        } else {\r\n-            setError(err.message || defaultMessage);\r\n-        }\r\n-    };\r\n+  const resetForm = () => {\r\n+    setNom('');\r\n+    setDescription('');\r\n+    setType('');\r\n+    setStatut(true);\r\n+    setPremium(false);\r\n+    setLienFichier('');\r\n+    setCategorie('');\r\n+    setEditId(null);\r\n+    setError(null);\r\n+    setSuccessMessage(null);\r\n+  };\r\n \r\n-    const resetForm = () => {\r\n-        setNom('');\r\n-        setDescription('');\r\n-        setType('');\r\n-        setStatut(true);\r\n-        setPremium(false);\r\n-        setLienFichier('');\r\n-        setCategorie('');\r\n-        setEditId(null);\r\n-        setError(null);\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    if (!nom.trim()) {\r\n+      setError(\"Le nom de la fonctionnalité est obligatoire.\");\r\n+      return;\r\n+    }\r\n+\r\n+    const payload = {\r\n+      nom,\r\n+      description,\r\n+      type,\r\n+      statut,\r\n+      premium,\r\n+      lienFichier: lienFichier.trim() !== '' ? lienFichier.trim() : null,\r\n+      categorie: categorie.trim() !== '' ? categorie.trim() : null,\r\n     };\r\n \r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-        if (!nom.trim()) {\r\n-            setError(\"Le nom de la fonctionnalité est obligatoire.\");\r\n-            return;\r\n-        }\r\n+    try {\r\n+      if (editId) {\r\n+        await api.put(`/fonctionnalites/${editId}`, payload);\r\n+        setSuccessMessage(\"Fonctionnalité modifiée avec succès !\");\r\n+      } else {\r\n+        await api.post('/fonctionnalites', payload);\r\n+        setSuccessMessage(\"Fonctionnalité ajoutée avec succès !\");\r\n+      }\r\n+      resetForm();\r\n+      fetchFonctionnalites();\r\n+    } catch (err) {\r\n+      handleApiError(err, \"Erreur lors de l'enregistrement de la fonctionnalité.\");\r\n+    }\r\n+  };\r\n \r\n-        const payload = { \r\n-            nom, \r\n-            description, \r\n-            type, \r\n-            statut, \r\n-            premium,\r\n-            lienFichier: lienFichier.trim() !== '' ? lienFichier.trim() : null,\r\n-            categorie: categorie.trim() !== '' ? categorie.trim() : null\r\n-        };\r\n+  const handleEdit = (f) => {\r\n+    setNom(f.nom || '');\r\n+    setDescription(f.description || '');\r\n+    setType(f.type || '');\r\n+    setStatut(!!f.statut);\r\n+    setPremium(!!f.premium);\r\n+    setLienFichier(f.lienFichier || '');\r\n+    setCategorie(f.categorie || '');\r\n+    setEditId(f.id);\r\n+    setError(null);\r\n+    setSuccessMessage(null);\r\n+  };\r\n \r\n-        try {\r\n-            if (editId) {\r\n-                await api.put(`/fonctionnalites/${editId}`, payload);\r\n-                setSuccessMessage(\"Fonctionnalité modifiée avec succès !\");\r\n-            } else {\r\n-                await api.post('/fonctionnalites', payload);\r\n-                setSuccessMessage(\"Fonctionnalité ajoutée avec succès !\");\r\n-            }\r\n-            resetForm();\r\n-            setShowForm(false);\r\n-            fetchFonctionnalites();\r\n-        } catch (err) {\r\n-            handleApiError(err, \"Erreur lors de l'enregistrement de la fonctionnalité.\");\r\n-        }\r\n-    };\r\n+  const handleDelete = async (id) => {\r\n+    if (!window.confirm(\"Êtes-vous sûr de vouloir supprimer cette fonctionnalité ?\")) return;\r\n+    try {\r\n+      await api.delete(`/fonctionnalites/${id}`);\r\n+      setSuccessMessage(\"Fonctionnalité supprimée avec succès !\");\r\n+      fetchFonctionnalites();\r\n+    } catch (err) {\r\n+      handleApiError(err, \"Erreur lors de la suppression de la fonctionnalité.\");\r\n+    }\r\n+  };\r\n \r\n-    const handleEdit = (f) => {\r\n-        setNom(f.nom || '');\r\n-        setDescription(f.description || '');\r\n-        setType(f.type || '');\r\n-        setStatut(!!f.statut);\r\n-        setPremium(!!f.premium);\r\n-        setLienFichier(f.lienFichier || '');\r\n-        setCategorie(f.categorie || '');\r\n-        setEditId(f.id);\r\n-        setError(null);\r\n-        setSuccessMessage(null);\r\n-        setShowForm(true);\r\n-    };\r\n+  // Gestion import Excel\r\n+  const handleFileChange = (e) => {\r\n+    setExcelFile(e.target.files[0]);\r\n+    setImportMessage(null);\r\n+    setImportError(null);\r\n+  };\r\n \r\n-    // Ouvre la modal en mettant l'id à supprimer\r\n-    const openDeleteModal = (id) => {\r\n-        setModalDeleteId(id);\r\n-    };\r\n+  const handleImport = async () => {\r\n+    if (!excelFile) {\r\n+      setImportError(\"Veuillez sélectionner un fichier Excel avant d'importer.\");\r\n+      return;\r\n+    }\r\n \r\n-    // Ferme la modal\r\n-    const closeDeleteModal = () => {\r\n-        setModalDeleteId(null);\r\n-    };\r\n+    const formData = new FormData();\r\n+    formData.append('file', excelFile);\r\n \r\n-    // Confirme suppression\r\n-    const confirmDelete = async () => {\r\n-        if (!modalDeleteId) return;\r\n-        try {\r\n-            await api.delete(`/fonctionnalites/${modalDeleteId}`);\r\n-            setSuccessMessage(\"Fonctionnalité supprimée avec succès !\");\r\n-            fetchFonctionnalites();\r\n-            closeDeleteModal();\r\n-        } catch (err) {\r\n-            handleApiError(err, \"Erreur lors de la suppression de la fonctionnalité.\");\r\n-            closeDeleteModal();\r\n-        }\r\n-    };\r\n+    try {\r\n+      setImportLoading(true);\r\n+      setImportError(null);\r\n+      setImportMessage(null);\r\n \r\n-    if (role && role !== \"ADMIN\") {\r\n-        return (\r\n-            <div className=\"alert alert-danger mt-5 text-center\">\r\n-                Vous n'avez pas la permission d'accéder à cette page.\r\n-            </div>\r\n-        );\r\n-    }\r\n+      const res = await api.post('/import/fonctionnalites', formData, {\r\n+        headers: { 'Content-Type': 'multipart/form-data' },\r\n+      });\r\n \r\n-    if (loading) {\r\n-        return <div className=\"text-center my-5\">Chargement des fonctionnalités...</div>;\r\n+      setImportMessage(res.data || \"Importation réussie !\");\r\n+      setExcelFile(null);\r\n+      fetchFonctionnalites();\r\n+    } catch (err) {\r\n+      const msg = err.response?.data || \"Erreur lors de l'importation. Vérifiez le fichier.\";\r\n+      setImportError(msg);\r\n+    } finally {\r\n+      setImportLoading(false);\r\n     }\r\n+  };\r\n \r\n+  if (role && role !== \"ADMIN\") {\r\n     return (\r\n-        <div className=\"container mt-8 max-w-7xl px-4\">\r\n-            <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 text-center\">Gestion des Fonctionnalités</h1>\r\n+      <div className=\"alert alert-danger mt-5 text-center\">\r\n+        Vous n'avez pas la permission d'accéder à cette page.\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n-            {error && (\r\n-                <div className=\"alert alert-danger alert-dismissible fade show mb-4\">\r\n-                    {error}\r\n-                    <button type=\"button\" className=\"btn-close\" onClick={() => setError(null)}></button>\r\n-                </div>\r\n-            )}\r\n+  if (loading) {\r\n+    return <div className=\"text-center my-5\">Chargement des fonctionnalités...</div>;\r\n+  }\r\n \r\n-            {successMessage && (\r\n-                <div className=\"alert alert-success alert-dismissible fade show mb-4\">\r\n-                    {successMessage}\r\n-                    <button type=\"button\" className=\"btn-close\" onClick={() => setSuccessMessage(null)}></button>\r\n-                </div>\r\n-            )}\r\n+  return (\r\n+    <div className=\"container mt-5\">\r\n+      <h1 className=\"text-3xl font-bold text-gray-800 mb-6 text-center\">Gestion des Fonctionnalités</h1>\r\n \r\n-            {!showForm && (\r\n-                <div className=\"mb-6 flex justify-end\">\r\n+      {/* Bloc Import Excel */}\r\n+      <div className=\"mb-6 p-4 border rounded-lg shadow-sm bg-gray-50\">\r\n+        <h2 className=\"text-xl font-semibold mb-3 flex items-center space-x-2\">\r\n+          <FontAwesomeIcon icon={faFileImport} />\r\n+          <span>Importer des fonctionnalités depuis un fichier Excel</span>\r\n+        </h2>\r\n+\r\n+        <div className=\"flex items-center space-x-4\">\r\n+          <input\r\n+            type=\"file\"\r\n+            accept=\".xls,.xlsx\"\r\n+            onChange={handleFileChange}\r\n+            className=\"block w-full text-sm text-gray-700 file:mr-4 file:py-2 file:px-4\r\n+              file:rounded file:border-0\r\n+              file:text-sm file:font-semibold\r\n+              file:bg-indigo-600 file:text-white\r\n+              hover:file:bg-indigo-700\r\n+            \"\r\n+          />\r\n+          <button\r\n+            onClick={handleImport}\r\n+            disabled={importLoading || !excelFile}\r\n+            className={`btn btn-primary px-6 py-2 rounded-md shadow-sm text-white ${\r\n+              importLoading || !excelFile\r\n+                ? 'bg-indigo-300 cursor-not-allowed'\r\n+                : 'bg-indigo-600 hover:bg-indigo-700'\r\n+            }`}\r\n+          >\r\n+            {importLoading ? 'Importation...' : 'Importer'}\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {importMessage && (\r\n+          <div className=\"mt-3 text-green-700 font-medium\">{importMessage}</div>\r\n+        )}\r\n+\r\n+        {importError && (\r\n+          <div className=\"mt-3 text-red-700 font-medium\">{importError}</div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* Messages d'erreur */}\r\n+      {error && (\r\n+        <div className=\"alert alert-danger alert-dismissible fade show\">\r\n+          {error}\r\n+          <button type=\"button\" className=\"btn-close\" onClick={() => setError(null)}></button>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Messages de succès */}\r\n+      {successMessage && (\r\n+        <div className=\"alert alert-success alert-dismissible fade show\">\r\n+          {successMessage}\r\n+          <button\r\n+            type=\"button\"\r\n+            className=\"btn-close\"\r\n+            onClick={() => setSuccessMessage(null)}\r\n+          ></button>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Formulaire Ajout / Modification */}\r\n+      <form onSubmit={handleSubmit} className=\"mb-4 card p-4 shadow-md rounded-lg\">\r\n+        <h3 className=\"mb-4 text-xl font-semibold text-gray-700\">\r\n+          {editId ? 'Modifier une fonctionnalité' : 'Ajouter une fonctionnalité'}\r\n+        </h3>\r\n+\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\r\n+          <div>\r\n+            <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-700\">\r\n+              Nom <span className=\"text-red-500\">*</span>\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+              id=\"nom\"\r\n+              value={nom}\r\n+              onChange={(e) => setNom(e.target.value)}\r\n+              required\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">\r\n+              Type <span className=\"text-red-500\">*</span>\r\n+            </label>\r\n+            <select\r\n+              className=\"form-select mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+              id=\"type\"\r\n+              value={type}\r\n+              onChange={(e) => setType(e.target.value)}\r\n+              required\r\n+            >\r\n+              <option value=\"\">Sélectionnez un type...</option>\r\n+              <option value=\"citation\">Citation</option>\r\n+              <option value=\"podcast\">Podcast</option>\r\n+              <option value=\"article\">Article</option>\r\n+              <option value=\"video\">Vidéo</option>\r\n+              <option value=\"outil\">Outil interactif</option>\r\n+              <option value=\"guide_pratique\">Guide Pratique</option>\r\n+              <option value=\"journaling_prompt\">Prompt Journaling</option>\r\n+              <option value=\"exercice_texte\">Exercice de Relaxation (texte)</option>\r\n+              <option value=\"challenge\">Défi Bien-être</option>\r\n+            </select>\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label\r\n+              htmlFor=\"categorie\"\r\n+              className=\"block text-sm font-medium text-gray-700\"\r\n+            >\r\n+              Catégorie (Optionnel)\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+              id=\"categorie\"\r\n+              value={categorie}\r\n+              onChange={(e) => setCategorie(e.target.value)}\r\n+              placeholder=\"Ex: Méditation, Sommeil\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"col-span-full\">\r\n+            <label\r\n+              htmlFor=\"description\"\r\n+              className=\"block text-sm font-medium text-gray-700\"\r\n+            >\r\n+              Description / Contenu\r\n+            </label>\r\n+            <textarea\r\n+              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+              id=\"description\"\r\n+              rows=\"3\"\r\n+              value={description}\r\n+              onChange={(e) => setDescription(e.target.value)}\r\n+              placeholder=\"Description détaillée ou contenu de la ressource\"\r\n+            ></textarea>\r\n+          </div>\r\n+\r\n+          <div className=\"col-span-full\">\r\n+            <label\r\n+              htmlFor=\"lienFichier\"\r\n+              className=\"block text-sm font-medium text-gray-700\"\r\n+            >\r\n+              Lien du Fichier (URL pour Vidéo/Podcast/Outil, optionnel)\r\n+            </label>\r\n+            <input\r\n+              type=\"url\"\r\n+              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+              id=\"lienFichier\"\r\n+              value={lienFichier}\r\n+              onChange={(e) => setLienFichier(e.target.value)}\r\n+              placeholder=\"Ex: https://youtube.com/ma-video\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"flex items-center space-x-4\">\r\n+            <div className=\"form-check form-switch flex items-center\">\r\n+              <input\r\n+                className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-indigo-600 focus:ring-indigo-500\"\r\n+                type=\"checkbox\"\r\n+                role=\"switch\"\r\n+                id=\"actif\"\r\n+                checked={statut}\r\n+                onChange={() => setStatut(!statut)}\r\n+              />\r\n+              <label\r\n+                className=\"form-check-label ml-2 text-gray-700\"\r\n+                htmlFor=\"actif\"\r\n+              >\r\n+                Actif\r\n+              </label>\r\n+            </div>\r\n+\r\n+            <div className=\"form-check form-switch flex items-center\">\r\n+              <input\r\n+                className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-yellow-500 focus:ring-yellow-500\"\r\n+                type=\"checkbox\"\r\n+                role=\"switch\"\r\n+                id=\"premium\"\r\n+                checked={premium}\r\n+                onChange={() => setPremium(!premium)}\r\n+              />\r\n+              <label\r\n+                className=\"form-check-label ml-2 text-gray-700\"\r\n+                htmlFor=\"premium\"\r\n+              >\r\n+                Premium\r\n+              </label>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"mt-4 flex justify-end space-x-3\">\r\n+          <button\r\n+            type=\"submit\"\r\n+            className=\"btn btn-primary px-6 py-2 rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 flex items-center\"\r\n+          >\r\n+            <FontAwesomeIcon\r\n+              icon={editId ? faPencilAlt : faPlus}\r\n+              className=\"mr-2\"\r\n+            />\r\n+            {editId ? 'Modifier' : 'Ajouter'}\r\n+          </button>\r\n+\r\n+          {editId && (\r\n+            <button\r\n+              type=\"button\"\r\n+              className=\"btn btn-secondary px-6 py-2 rounded-md shadow-sm text-gray-700 bg-gray-200 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400\"\r\n+              onClick={resetForm}\r\n+            >\r\n+              Annuler\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      </form>\r\n+\r\n+      {/* Tableau des fonctionnalités */}\r\n+      {fonctionnalites.length === 0 ? (\r\n+        <div className=\"alert alert-info text-center mt-4 p-4 rounded-lg shadow-sm\">\r\n+          Aucune fonctionnalité trouvée.\r\n+        </div>\r\n+      ) : (\r\n+        <div className=\"overflow-x-auto rounded-lg shadow-md\">\r\n+          <table className=\"min-w-full bg-white border border-gray-200\">\r\n+            <thead className=\"bg-gray-50\">\r\n+              <tr>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Lien Fichier</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Premium</th>\r\n+                <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {fonctionnalites.map(f => (\r\n+                <tr key={f.id} className=\"border-t border-gray-200 hover:bg-gray-50\">\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{f.id}</td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900\">{f.nom}</td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{f.type}</td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 max-w-xs truncate\" title={f.description}>{f.description || '-'}</td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-indigo-600 hover:underline max-w-xs truncate\" title={f.lienFichier}>\r\n+                    {f.lienFichier ? (\r\n+                      <a href={f.lienFichier} target=\"_blank\" rel=\"noopener noreferrer\">\r\n+                        Voir le lien\r\n+                      </a>\r\n+                    ) : (\r\n+                      '-'\r\n+                    )}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                    {f.statut ? (\r\n+                      <span className=\"inline-block px-2 py-1 text-xs font-semibold text-green-800 bg-green-100 rounded-full\">\r\n+                        Actif\r\n+                      </span>\r\n+                    ) : (\r\n+                      <span className=\"inline-block px-2 py-1 text-xs font-semibold text-red-800 bg-red-100 rounded-full\">\r\n+                        Inactif\r\n+                      </span>\r\n+                    )}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm\">\r\n+                    {f.premium ? (\r\n+                      <span className=\"text-yellow-500 font-semibold\">Oui</span>\r\n+                    ) : (\r\n+                      <span>Non</span>\r\n+                    )}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm flex justify-center space-x-4\">\r\n                     <button\r\n-                        onClick={() => {\r\n-                            resetForm();\r\n-                            setShowForm(true);\r\n-                        }}\r\n-                        className=\"inline-flex items-center rounded-md bg-indigo-600 px-6 py-2 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+                      onClick={() => handleEdit(f)}\r\n+                      title=\"Modifier\"\r\n+                      className=\"text-indigo-600 hover:text-indigo-900 focus:outline-none\"\r\n+                      style={{ border: 'none', background: 'transparent', padding: 0 }}\r\n                     >\r\n-                        <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\r\n-                        Ajouter une fonctionnalité\r\n+                      <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\r\n                     </button>\r\n-                </div>\r\n-            )}\r\n \r\n-            {showForm && (\r\n-                <form onSubmit={handleSubmit} className=\"mb-8 bg-white p-6 rounded-lg shadow-lg border border-gray-200\">\r\n-                    <h3 className=\"mb-6 text-2xl font-semibold text-gray-700\">{editId ? 'Modifier une fonctionnalité' : 'Ajouter une fonctionnalité'}</h3>\r\n-                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-                        <div>\r\n-                            <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-700\">Nom <span className=\"text-red-500\">*</span></label>\r\n-                            <input\r\n-                                type=\"text\"\r\n-                                id=\"nom\"\r\n-                                value={nom}\r\n-                                onChange={(e) => setNom(e.target.value)}\r\n-                                required\r\n-                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n-                            />\r\n-                        </div>\r\n-                        <div>\r\n-                            <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">Type <span className=\"text-red-500\">*</span></label>\r\n-                            <select\r\n-                                id=\"type\"\r\n-                                value={type}\r\n-                                onChange={(e) => setType(e.target.value)}\r\n-                                required\r\n-                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-                            >\r\n-                                <option value=\"\">Sélectionnez un type...</option>\r\n-                                <option value=\"citation\">Citation</option>\r\n-                                <option value=\"podcast\">Podcast</option>\r\n-                                <option value=\"article\">Article</option>\r\n-                                <option value=\"video\">Vidéo</option>\r\n-                                <option value=\"outil\">Outil interactif</option>\r\n-                                <option value=\"guide_pratique\">Guide Pratique</option>\r\n-                                <option value=\"journaling_prompt\">Prompt Journaling</option>\r\n-                                <option value=\"exercice_texte\">Exercice de Relaxation (texte)</option>\r\n-                                <option value=\"challenge\">Défi Bien-être</option>\r\n-                            </select>\r\n-                        </div>\r\n-                        <div>\r\n-                            <label htmlFor=\"categorie\" className=\"block text-sm font-medium text-gray-700\">Catégorie (Optionnel)</label>\r\n-                            <input\r\n-                                type=\"text\"\r\n-                                id=\"categorie\"\r\n-                                value={categorie}\r\n-                                onChange={(e) => setCategorie(e.target.value)}\r\n-                                placeholder=\"Ex: Méditation, Sommeil\"\r\n-                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n-                            />\r\n-                        </div>\r\n-                    </div>\r\n-                    <div className=\"mt-6\">\r\n-                        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">Description / Contenu</label>\r\n-                        <textarea\r\n-                            id=\"description\"\r\n-                            rows=\"4\"\r\n-                            value={description}\r\n-                            onChange={(e) => setDescription(e.target.value)}\r\n-                            placeholder=\"Description détaillée ou contenu de la ressource\"\r\n-                            className=\"block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n-                        />\r\n-                    </div>\r\n-                    <div className=\"mt-6\">\r\n-                        <label htmlFor=\"lienFichier\" className=\"block text-sm font-medium text-gray-700 mb-1\">Lien du Fichier (URL pour Vidéo/Podcast/Outil, optionnel)</label>\r\n-                        <input\r\n-                            type=\"url\"\r\n-                            id=\"lienFichier\"\r\n-                            value={lienFichier}\r\n-                            onChange={(e) => setLienFichier(e.target.value)}\r\n-                            placeholder=\"Ex: https://youtube.com/ma-video\"\r\n-                            className=\"block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n-                        />\r\n-                    </div>\r\n-                    <div className=\"flex items-center space-x-8 mt-6\">\r\n-                        <label className=\"inline-flex items-center\">\r\n-                            <input\r\n-                                type=\"checkbox\"\r\n-                                checked={statut}\r\n-                                onChange={() => setStatut(!statut)}\r\n-                                className=\"form-checkbox h-5 w-5 text-indigo-600\"\r\n-                            />\r\n-                            <span className=\"ml-2 text-gray-700\">Actif</span>\r\n-                        </label>\r\n-                        <label className=\"inline-flex items-center\">\r\n-                            <input\r\n-                                type=\"checkbox\"\r\n-                                checked={premium}\r\n-                                onChange={() => setPremium(!premium)}\r\n-                                className=\"form-checkbox h-5 w-5 text-yellow-500\"\r\n-                            />\r\n-                            <span className=\"ml-2 text-gray-700\">Premium</span>\r\n-                        </label>\r\n-                    </div>\r\n-                    <div className=\"mt-8 flex justify-end space-x-4\">\r\n-                        <button\r\n-                            type=\"submit\"\r\n-                            className=\"inline-flex items-center rounded-md bg-indigo-600 px-6 py-2 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-                        >\r\n-                            <FontAwesomeIcon icon={editId ? faPencilAlt : faPlus} className=\"mr-2\" />\r\n-                            {editId ? 'Modifier' : 'Ajouter'}\r\n-                        </button>\r\n-                        <button\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                                resetForm();\r\n-                                setShowForm(false);\r\n-                            }}\r\n-                            className=\"rounded-md bg-gray-200 px-6 py-2 text-gray-700 shadow-sm hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n-                        >\r\n-                            Annuler\r\n-                        </button>\r\n-                    </div>\r\n-                </form>\r\n-            )}\r\n-\r\n-            {fonctionnalites.length === 0 ? (\r\n-                <div className=\"text-center p-6 bg-blue-50 rounded-md shadow-sm text-blue-700\">Aucune fonctionnalité trouvée.</div>\r\n-            ) : (\r\n-                <div className=\"overflow-x-auto rounded-lg shadow-lg border border-gray-200\">\r\n-                    <table className=\"min-w-full bg-white\">\r\n-                        <thead className=\"bg-gray-100\">\r\n-                            <tr>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">ID</th>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Nom</th>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Type</th>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Description</th>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Lien Fichier</th>\r\n-                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Catégorie</th>\r\n-                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Statut</th>\r\n-                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Premium</th>\r\n-                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Actions</th>\r\n-                            </tr>\r\n-                        </thead>\r\n-                        <tbody>\r\n-                            {fonctionnalites.map((f) => (\r\n-                                <tr key={f.id} className=\"hover:bg-gray-50\">\r\n-                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.id}</td>\r\n-                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.nom}</td>\r\n-                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.type}</td>\r\n-                                    <td className=\"px-5 py-4 max-w-xs truncate text-sm text-gray-600\">{f.description}</td>\r\n-                                    <td className=\"px-5 py-4 max-w-xs truncate text-sm text-blue-600\">{f.lienFichier}</td>\r\n-                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.categorie || '-'}</td>\r\n-                                    <td className=\"px-5 py-4 text-center text-sm\">\r\n-                                        <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${f.statut ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n-                                            {f.statut ? 'Actif' : 'Inactif'}\r\n-                                        </span>\r\n-                                    </td>\r\n-                                    <td className=\"px-5 py-4 text-center text-sm\">\r\n-                                        <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${f.premium ? 'bg-yellow-100 text-yellow-800' : 'bg-blue-100 text-blue-800'}`}>\r\n-                                            {f.premium ? 'Oui' : 'Non'}\r\n-                                        </span>\r\n-                                    </td>\r\n-                                    <td className=\"px-5 py-4 text-center text-sm space-x-4\">\r\n-                                        <button\r\n-                                            onClick={() => handleEdit(f)}\r\n-                                            aria-label={`Modifier ${f.nom}`}\r\n-                                            className=\"text-indigo-600 hover:text-indigo-900 focus:outline-none\"\r\n-                                            style={{ outline: 'none' }}\r\n-                                        >\r\n-                                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\r\n-                                        </button>\r\n-                                        <button\r\n-                                            onClick={() => openDeleteModal(f.id)}\r\n-                                            aria-label={`Supprimer ${f.nom}`}\r\n-                                            className=\"text-red-600 hover:text-red-900 focus:outline-none\"\r\n-                                            style={{ outline: 'none' }}\r\n-                                        >\r\n-                                            <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n-                                        </button>\r\n-                                    </td>\r\n-                                </tr>\r\n-                            ))}\r\n-                        </tbody>\r\n-                    </table>\r\n-                </div>\r\n-            )}\r\n-\r\n-            {/* Modal de confirmation suppression */}\r\n-            {modalDeleteId && (\r\n-                <div\r\n-                    className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-                    aria-modal=\"true\"\r\n-                    role=\"dialog\"\r\n-                    aria-labelledby=\"modal-title\"\r\n-                    aria-describedby=\"modal-description\"\r\n-                >\r\n-                    <div className=\"bg-white rounded-lg shadow-xl max-w-sm w-full p-6\">\r\n-                        <h2 id=\"modal-title\" className=\"text-xl font-semibold text-gray-800 mb-4\">Confirmation de suppression</h2>\r\n-                        <p id=\"modal-description\" className=\"mb-6 text-gray-600\">Êtes-vous sûr de vouloir supprimer cette fonctionnalité ? Cette action est irréversible.</p>\r\n-                        <div className=\"flex justify-end space-x-4\">\r\n-                            <button\r\n-                                onClick={closeDeleteModal}\r\n-                                className=\"px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n-                            >\r\n-                                Annuler\r\n-                            </button>\r\n-                            <button\r\n-                                onClick={confirmDelete}\r\n-                                className=\"px-4 py-2 rounded-md bg-red-600 text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n-                            >\r\n-                                Supprimer\r\n-                            </button>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            )}\r\n+                    <button\r\n+                      onClick={() => handleDelete(f.id)}\r\n+                      title=\"Supprimer\"\r\n+                      className=\"text-red-600 hover:text-red-900 focus:outline-none\"\r\n+                      style={{ border: 'none', background: 'transparent', padding: 0 }}\r\n+                    >\r\n+                      <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n+                    </button>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n         </div>\r\n-    );\r\n+      )}\r\n+    </div>\r\n+  );\r\n }\r\n \r\n export default AdminFonctionnalites;\r\n"
                },
                {
                    "date": 1750886339287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n import api from '../../services/api';\r\n import { logout } from '../../services/serviceAuth';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import { faPencilAlt, faTrash, faPlus, faFileImport } from '@fortawesome/free-solid-svg-icons';\r\n+import { faPencilAlt, faTrash, faPlus, faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n \r\n function AdminFonctionnalites() {\r\n-  // États pour les fonctionnalités\r\n   const [fonctionnalites, setFonctionnalites] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n   const [successMessage, setSuccessMessage] = useState(null);\r\n@@ -20,8 +19,11 @@\n   const [lienFichier, setLienFichier] = useState('');\r\n   const [categorie, setCategorie] = useState('');\r\n   const [editId, setEditId] = useState(null);\r\n \r\n+  // Pour masquer/afficher le formulaire\r\n+  const [formVisible, setFormVisible] = useState(false);\r\n+\r\n   // Infos utilisateur\r\n   const [role, setRole] = useState(null);\r\n   const [email, setEmail] = useState(null);\r\n \r\n@@ -41,9 +43,8 @@\n       setRole(res.data.role);\r\n       setEmail(res.data.email);\r\n       fetchFonctionnalites();\r\n     } catch (err) {\r\n-      console.error(\"Erreur lors de la récupération des infos utilisateur:\", err);\r\n       setError(\"Erreur lors de la récupération des informations utilisateur.\");\r\n       setLoading(false);\r\n     }\r\n   };\r\n@@ -51,9 +52,8 @@\n   const handleLogout = async () => {\r\n     try {\r\n       await logout();\r\n     } catch (err) {\r\n-      console.error(\"Erreur lors de la déconnexion:\", err);\r\n       setError(\"Erreur lors de la déconnexion.\");\r\n     }\r\n   };\r\n \r\n@@ -73,9 +73,8 @@\n     }\r\n   };\r\n \r\n   const handleApiError = (err, defaultMessage) => {\r\n-    console.error(\"Erreur API:\", err);\r\n     if (err.response) {\r\n       switch (err.response.status) {\r\n         case 403:\r\n           setError(\"Accès refusé : Vous n'avez pas les permissions nécessaires.\");\r\n@@ -134,8 +133,9 @@\n         await api.post('/fonctionnalites', payload);\r\n         setSuccessMessage(\"Fonctionnalité ajoutée avec succès !\");\r\n       }\r\n       resetForm();\r\n+      setFormVisible(false); // cacher formulaire après ajout/modif\r\n       fetchFonctionnalites();\r\n     } catch (err) {\r\n       handleApiError(err, \"Erreur lors de l'enregistrement de la fonctionnalité.\");\r\n     }\r\n@@ -151,8 +151,9 @@\n     setCategorie(f.categorie || '');\r\n     setEditId(f.id);\r\n     setError(null);\r\n     setSuccessMessage(null);\r\n+    setFormVisible(true); // Afficher formulaire en mode édition\r\n   };\r\n \r\n   const handleDelete = async (id) => {\r\n     if (!window.confirm(\"Êtes-vous sûr de vouloir supprimer cette fonctionnalité ?\")) return;\r\n@@ -277,164 +278,184 @@\n           ></button>\r\n         </div>\r\n       )}\r\n \r\n+      {/* Bouton Ajouter */}\r\n+      {!formVisible && (\r\n+        <div className=\"mb-4 flex justify-end\">\r\n+          <button\r\n+            className=\"btn btn-success px-6 py-2 rounded-md shadow-sm text-white flex items-center hover:bg-green-700\"\r\n+            onClick={() => {\r\n+              resetForm();\r\n+              setFormVisible(true);\r\n+            }}\r\n+          >\r\n+            <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\r\n+            Ajouter une fonctionnalité\r\n+          </button>\r\n+        </div>\r\n+      )}\r\n+\r\n       {/* Formulaire Ajout / Modification */}\r\n-      <form onSubmit={handleSubmit} className=\"mb-4 card p-4 shadow-md rounded-lg\">\r\n-        <h3 className=\"mb-4 text-xl font-semibold text-gray-700\">\r\n-          {editId ? 'Modifier une fonctionnalité' : 'Ajouter une fonctionnalité'}\r\n-        </h3>\r\n+      {formVisible && (\r\n+        <form onSubmit={handleSubmit} className=\"mb-4 card p-4 shadow-md rounded-lg border border-gray-300\">\r\n+          <h3 className=\"mb-4 text-xl font-semibold text-gray-700\">\r\n+            {editId ? 'Modifier une fonctionnalité' : 'Ajouter une fonctionnalité'}\r\n+          </h3>\r\n \r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\r\n-          <div>\r\n-            <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-700\">\r\n-              Nom <span className=\"text-red-500\">*</span>\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-              id=\"nom\"\r\n-              value={nom}\r\n-              onChange={(e) => setNom(e.target.value)}\r\n-              required\r\n-            />\r\n-          </div>\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\r\n+            <div>\r\n+              <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-700\">\r\n+                Nom <span className=\"text-red-500\">*</span>\r\n+              </label>\r\n+              <input\r\n+                type=\"text\"\r\n+                className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+                id=\"nom\"\r\n+                value={nom}\r\n+                onChange={(e) => setNom(e.target.value)}\r\n+                required\r\n+              />\r\n+            </div>\r\n \r\n-          <div>\r\n-            <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">\r\n-              Type <span className=\"text-red-500\">*</span>\r\n-            </label>\r\n-            <select\r\n-              className=\"form-select mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-              id=\"type\"\r\n-              value={type}\r\n-              onChange={(e) => setType(e.target.value)}\r\n-              required\r\n-            >\r\n-              <option value=\"\">Sélectionnez un type...</option>\r\n-              <option value=\"citation\">Citation</option>\r\n-              <option value=\"podcast\">Podcast</option>\r\n-              <option value=\"article\">Article</option>\r\n-              <option value=\"video\">Vidéo</option>\r\n-              <option value=\"outil\">Outil interactif</option>\r\n-              <option value=\"guide_pratique\">Guide Pratique</option>\r\n-              <option value=\"journaling_prompt\">Prompt Journaling</option>\r\n-              <option value=\"exercice_texte\">Exercice de Relaxation (texte)</option>\r\n-              <option value=\"challenge\">Défi Bien-être</option>\r\n-            </select>\r\n-          </div>\r\n+            <div>\r\n+              <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">\r\n+                Type <span className=\"text-red-500\">*</span>\r\n+              </label>\r\n+              <select\r\n+                className=\"form-select mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+                id=\"type\"\r\n+                value={type}\r\n+                onChange={(e) => setType(e.target.value)}\r\n+                required\r\n+              >\r\n+                <option value=\"\">Sélectionnez un type...</option>\r\n+                <option value=\"citation\">Citation</option>\r\n+                <option value=\"podcast\">Podcast</option>\r\n+                <option value=\"article\">Article</option>\r\n+                <option value=\"video\">Vidéo</option>\r\n+                <option value=\"outil\">Outil interactif</option>\r\n+                <option value=\"guide_pratique\">Guide Pratique</option>\r\n+                <option value=\"journaling_prompt\">Prompt Journaling</option>\r\n+                <option value=\"exercice_texte\">Exercice de Relaxation (texte)</option>\r\n+                <option value=\"challenge\">Défi Bien-être</option>\r\n+              </select>\r\n+            </div>\r\n \r\n-          <div>\r\n-            <label\r\n-              htmlFor=\"categorie\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Catégorie (Optionnel)\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-              id=\"categorie\"\r\n-              value={categorie}\r\n-              onChange={(e) => setCategorie(e.target.value)}\r\n-              placeholder=\"Ex: Méditation, Sommeil\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"col-span-full\">\r\n-            <label\r\n-              htmlFor=\"description\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Description / Contenu\r\n-            </label>\r\n-            <textarea\r\n-              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-              id=\"description\"\r\n-              rows=\"3\"\r\n-              value={description}\r\n-              onChange={(e) => setDescription(e.target.value)}\r\n-              placeholder=\"Description détaillée ou contenu de la ressource\"\r\n-            ></textarea>\r\n-          </div>\r\n-\r\n-          <div className=\"col-span-full\">\r\n-            <label\r\n-              htmlFor=\"lienFichier\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Lien du Fichier (URL pour Vidéo/Podcast/Outil, optionnel)\r\n-            </label>\r\n-            <input\r\n-              type=\"url\"\r\n-              className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n-              id=\"lienFichier\"\r\n-              value={lienFichier}\r\n-              onChange={(e) => setLienFichier(e.target.value)}\r\n-              placeholder=\"Ex: https://youtube.com/ma-video\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"flex items-center space-x-4\">\r\n-            <div className=\"form-check form-switch flex items-center\">\r\n+            <div>\r\n+              <label\r\n+                htmlFor=\"categorie\"\r\n+                className=\"block text-sm font-medium text-gray-700\"\r\n+              >\r\n+                Catégorie (Optionnel)\r\n+              </label>\r\n               <input\r\n-                className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-indigo-600 focus:ring-indigo-500\"\r\n-                type=\"checkbox\"\r\n-                role=\"switch\"\r\n-                id=\"actif\"\r\n-                checked={statut}\r\n-                onChange={() => setStatut(!statut)}\r\n+                type=\"text\"\r\n+                className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+                id=\"categorie\"\r\n+                value={categorie}\r\n+                onChange={(e) => setCategorie(e.target.value)}\r\n+                placeholder=\"Ex: Méditation, Sommeil\"\r\n               />\r\n+            </div>\r\n+\r\n+            <div className=\"col-span-full\">\r\n               <label\r\n-                className=\"form-check-label ml-2 text-gray-700\"\r\n-                htmlFor=\"actif\"\r\n+                htmlFor=\"description\"\r\n+                className=\"block text-sm font-medium text-gray-700\"\r\n               >\r\n-                Actif\r\n+                Description / Contenu\r\n               </label>\r\n+              <textarea\r\n+                className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+                id=\"description\"\r\n+                rows=\"3\"\r\n+                value={description}\r\n+                onChange={(e) => setDescription(e.target.value)}\r\n+                placeholder=\"Description détaillée ou contenu de la ressource\"\r\n+              ></textarea>\r\n             </div>\r\n \r\n-            <div className=\"form-check form-switch flex items-center\">\r\n-              <input\r\n-                className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-yellow-500 focus:ring-yellow-500\"\r\n-                type=\"checkbox\"\r\n-                role=\"switch\"\r\n-                id=\"premium\"\r\n-                checked={premium}\r\n-                onChange={() => setPremium(!premium)}\r\n-              />\r\n+            <div className=\"col-span-full\">\r\n               <label\r\n-                className=\"form-check-label ml-2 text-gray-700\"\r\n-                htmlFor=\"premium\"\r\n+                htmlFor=\"lienFichier\"\r\n+                className=\"block text-sm font-medium text-gray-700\"\r\n               >\r\n-                Premium\r\n+                Lien du Fichier (URL pour Vidéo/Podcast/Outil, optionnel)\r\n               </label>\r\n+              <input\r\n+                type=\"url\"\r\n+                className=\"form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+                id=\"lienFichier\"\r\n+                value={lienFichier}\r\n+                onChange={(e) => setLienFichier(e.target.value)}\r\n+                placeholder=\"Ex: https://youtube.com/ma-video\"\r\n+              />\r\n             </div>\r\n+\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <div className=\"form-check form-switch flex items-center\">\r\n+                <input\r\n+                  className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-indigo-600 focus:ring-indigo-500\"\r\n+                  type=\"checkbox\"\r\n+                  role=\"switch\"\r\n+                  id=\"actif\"\r\n+                  checked={statut}\r\n+                  onChange={() => setStatut(!statut)}\r\n+                />\r\n+                <label\r\n+                  className=\"form-check-label ml-2 text-gray-700\"\r\n+                  htmlFor=\"actif\"\r\n+                >\r\n+                  Actif\r\n+                </label>\r\n+              </div>\r\n+\r\n+              <div className=\"form-check form-switch flex items-center\">\r\n+                <input\r\n+                  className=\"form-check-input h-5 w-9 rounded-full bg-gray-200 checked:bg-yellow-500 focus:ring-yellow-500\"\r\n+                  type=\"checkbox\"\r\n+                  role=\"switch\"\r\n+                  id=\"premium\"\r\n+                  checked={premium}\r\n+                  onChange={() => setPremium(!premium)}\r\n+                />\r\n+                <label\r\n+                  className=\"form-check-label ml-2 text-gray-700\"\r\n+                  htmlFor=\"premium\"\r\n+                >\r\n+                  Premium\r\n+                </label>\r\n+              </div>\r\n+            </div>\r\n           </div>\r\n-        </div>\r\n \r\n-        <div className=\"mt-4 flex justify-end space-x-3\">\r\n-          <button\r\n-            type=\"submit\"\r\n-            className=\"btn btn-primary px-6 py-2 rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 flex items-center\"\r\n-          >\r\n-            <FontAwesomeIcon\r\n-              icon={editId ? faPencilAlt : faPlus}\r\n-              className=\"mr-2\"\r\n-            />\r\n-            {editId ? 'Modifier' : 'Ajouter'}\r\n-          </button>\r\n+          <div className=\"mt-4 flex justify-between items-center\">\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"btn btn-primary px-6 py-2 rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 flex items-center\"\r\n+            >\r\n+              <FontAwesomeIcon\r\n+                icon={editId ? faPencilAlt : faPlus}\r\n+                className=\"mr-2\"\r\n+              />\r\n+              {editId ? 'Modifier' : 'Ajouter'}\r\n+            </button>\r\n \r\n-          {editId && (\r\n             <button\r\n               type=\"button\"\r\n-              className=\"btn btn-secondary px-6 py-2 rounded-md shadow-sm text-gray-700 bg-gray-200 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400\"\r\n-              onClick={resetForm}\r\n+              className=\"btn btn-secondary px-4 py-2 rounded-md shadow-sm text-gray-700 bg-gray-200 hover:bg-gray-300 flex items-center\"\r\n+              onClick={() => {\r\n+                resetForm();\r\n+                setFormVisible(false);\r\n+              }}\r\n             >\r\n+              <FontAwesomeIcon icon={faTimes} className=\"mr-2\" />\r\n               Annuler\r\n             </button>\r\n-          )}\r\n-        </div>\r\n-      </form>\r\n+          </div>\r\n+        </form>\r\n+      )}\r\n \r\n       {/* Tableau des fonctionnalités */}\r\n       {fonctionnalites.length === 0 ? (\r\n         <div className=\"alert alert-info text-center mt-4 p-4 rounded-lg shadow-sm\">\r\n@@ -449,64 +470,47 @@\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Lien Fichier</th>\r\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Catégorie</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Premium</th>\r\n                 <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {fonctionnalites.map(f => (\r\n-                <tr key={f.id} className=\"border-t border-gray-200 hover:bg-gray-50\">\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{f.id}</td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900\">{f.nom}</td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{f.type}</td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 max-w-xs truncate\" title={f.description}>{f.description || '-'}</td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-indigo-600 hover:underline max-w-xs truncate\" title={f.lienFichier}>\r\n+                <tr key={f.id} className=\"hover:bg-gray-100\">\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.id}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.nom}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.type}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.description}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-blue-600 underline\">\r\n                     {f.lienFichier ? (\r\n-                      <a href={f.lienFichier} target=\"_blank\" rel=\"noopener noreferrer\">\r\n-                        Voir le lien\r\n+                      <a href={f.lienFichier} target=\"_blank\" rel=\"noreferrer\">\r\n+                        Voir lien\r\n                       </a>\r\n                     ) : (\r\n                       '-'\r\n                     )}\r\n                   </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                    {f.statut ? (\r\n-                      <span className=\"inline-block px-2 py-1 text-xs font-semibold text-green-800 bg-green-100 rounded-full\">\r\n-                        Actif\r\n-                      </span>\r\n-                    ) : (\r\n-                      <span className=\"inline-block px-2 py-1 text-xs font-semibold text-red-800 bg-red-100 rounded-full\">\r\n-                        Inactif\r\n-                      </span>\r\n-                    )}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm\">\r\n-                    {f.premium ? (\r\n-                      <span className=\"text-yellow-500 font-semibold\">Oui</span>\r\n-                    ) : (\r\n-                      <span>Non</span>\r\n-                    )}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm flex justify-center space-x-4\">\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.categorie || '-'}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.statut ? 'Actif' : 'Inactif'}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">{f.premium ? 'Oui' : 'Non'}</td>\r\n+                  <td className=\"px-6 py-3 whitespace-nowrap text-center text-sm font-medium flex justify-center space-x-4\">\r\n                     <button\r\n                       onClick={() => handleEdit(f)}\r\n                       title=\"Modifier\"\r\n-                      className=\"text-indigo-600 hover:text-indigo-900 focus:outline-none\"\r\n-                      style={{ border: 'none', background: 'transparent', padding: 0 }}\r\n+                      className=\"text-indigo-600 hover:text-indigo-900\"\r\n                     >\r\n-                      <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\r\n+                      <FontAwesomeIcon icon={faPencilAlt} />\r\n                     </button>\r\n-\r\n                     <button\r\n                       onClick={() => handleDelete(f.id)}\r\n                       title=\"Supprimer\"\r\n-                      className=\"text-red-600 hover:text-red-900 focus:outline-none\"\r\n-                      style={{ border: 'none', background: 'transparent', padding: 0 }}\r\n+                      className=\"text-red-600 hover:text-red-900\"\r\n                     >\r\n-                      <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n+                      <FontAwesomeIcon icon={faTrash} />\r\n                     </button>\r\n                   </td>\r\n                 </tr>\r\n               ))}\r\n"
                },
                {
                    "date": 1750888154155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -463,9 +463,9 @@\n         </div>\r\n       ) : (\r\n         <div className=\"overflow-x-auto rounded-lg shadow-md\">\r\n           <table className=\"min-w-full bg-white border border-gray-200\">\r\n-            <thead className=\"bg-gray-50\">\r\n+            <thead className=\"bg-blue-600 text-white\"\">\r\n               <tr>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n"
                },
                {
                    "date": 1750888198303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,9 +462,9 @@\n           Aucune fonctionnalité trouvée.\r\n         </div>\r\n       ) : (\r\n         <div className=\"overflow-x-auto rounded-lg shadow-md\">\r\n-          <table className=\"min-w-full bg-white border border-gray-200\">\r\n+          <table className=\"min-w-full bg-white border border-white-200\">\r\n             <thead className=\"bg-blue-600 text-white\">\r\n               <tr>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\r\n"
                },
                {
                    "date": 1750888210239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,9 +462,9 @@\n           Aucune fonctionnalité trouvée.\r\n         </div>\r\n       ) : (\r\n         <div className=\"overflow-x-auto rounded-lg shadow-md\">\r\n-          <table className=\"min-w-full bg-white border border-white-200\">\r\n+          <table className=\"min-w-full bg-white border border-gray-200\">\r\n             <thead className=\"bg-blue-600 text-white\">\r\n               <tr>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\r\n"
                }
            ],
            "date": 1750885746942,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/api'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction AdminFonctionnalites() {\r\n    const [fonctionnalites, setFonctionnalites] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n    const [nom, setNom] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [statut, setStatut] = useState(true);\r\n    const [premium, setPremium] = useState(false);\r\n    const [lienFichier, setLienFichier] = useState('');\r\n    const [categorie, setCategorie] = useState('');\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    const [role, setRole] = useState(null);\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    // État pour gérer la modal de confirmation de suppression\r\n    const [modalDeleteId, setModalDeleteId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchUserInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (successMessage) {\r\n            const timer = setTimeout(() => setSuccessMessage(null), 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [successMessage]);\r\n\r\n    const fetchUserInfo = async () => {\r\n        try {\r\n            const res = await api.get('/auth/me'); \r\n            setRole(res.data.role);\r\n            fetchFonctionnalites();\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError(\"Erreur lors de la récupération des informations utilisateur.\");\r\n            setLoading(false); \r\n        }\r\n    };\r\n\r\n    const fetchFonctionnalites = async () => {\r\n        setError(null);\r\n        try {\r\n            const res = await api.get('/fonctionnalites'); \r\n            if (Array.isArray(res.data)) {\r\n                setFonctionnalites(res.data);\r\n            } else {\r\n                throw new Error(\"Format de données inattendu de l'API.\");\r\n            }\r\n        } catch (err) {\r\n            handleApiError(err, \"Erreur lors du chargement des fonctionnalités.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleApiError = (err, defaultMessage) => {\r\n        console.error(\"Erreur API:\", err);\r\n        if (err.response) {\r\n            switch (err.response.status) {\r\n                case 403:\r\n                    setError(\"Accès refusé : Vous n'avez pas les permissions nécessaires.\");\r\n                    break;\r\n                case 401:\r\n                    setError(\"Session expirée ou non autorisée. Veuillez vous reconnecter.\");\r\n                    break;\r\n                case 404: \r\n                    setError(\"La ressource demandée n'a pas été trouvée. Vérifiez l'URL ou si le backend est démarré.\");\r\n                    break;\r\n                default:\r\n                    setError(err.response.data?.message || defaultMessage);\r\n            }\r\n        } else if (err.request) {\r\n            setError(\"Aucune réponse du serveur. Vérifiez votre connexion internet ou si le backend est démarré et accessible.\");\r\n        } else {\r\n            setError(err.message || defaultMessage);\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setNom('');\r\n        setDescription('');\r\n        setType('');\r\n        setStatut(true);\r\n        setPremium(false);\r\n        setLienFichier('');\r\n        setCategorie('');\r\n        setEditId(null);\r\n        setError(null);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!nom.trim()) {\r\n            setError(\"Le nom de la fonctionnalité est obligatoire.\");\r\n            return;\r\n        }\r\n\r\n        const payload = { \r\n            nom, \r\n            description, \r\n            type, \r\n            statut, \r\n            premium,\r\n            lienFichier: lienFichier.trim() !== '' ? lienFichier.trim() : null,\r\n            categorie: categorie.trim() !== '' ? categorie.trim() : null\r\n        };\r\n\r\n        try {\r\n            if (editId) {\r\n                await api.put(`/fonctionnalites/${editId}`, payload);\r\n                setSuccessMessage(\"Fonctionnalité modifiée avec succès !\");\r\n            } else {\r\n                await api.post('/fonctionnalites', payload);\r\n                setSuccessMessage(\"Fonctionnalité ajoutée avec succès !\");\r\n            }\r\n            resetForm();\r\n            setShowForm(false);\r\n            fetchFonctionnalites();\r\n        } catch (err) {\r\n            handleApiError(err, \"Erreur lors de l'enregistrement de la fonctionnalité.\");\r\n        }\r\n    };\r\n\r\n    const handleEdit = (f) => {\r\n        setNom(f.nom || '');\r\n        setDescription(f.description || '');\r\n        setType(f.type || '');\r\n        setStatut(!!f.statut);\r\n        setPremium(!!f.premium);\r\n        setLienFichier(f.lienFichier || '');\r\n        setCategorie(f.categorie || '');\r\n        setEditId(f.id);\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n        setShowForm(true);\r\n    };\r\n\r\n    // Ouvre la modal en mettant l'id à supprimer\r\n    const openDeleteModal = (id) => {\r\n        setModalDeleteId(id);\r\n    };\r\n\r\n    // Ferme la modal\r\n    const closeDeleteModal = () => {\r\n        setModalDeleteId(null);\r\n    };\r\n\r\n    // Confirme suppression\r\n    const confirmDelete = async () => {\r\n        if (!modalDeleteId) return;\r\n        try {\r\n            await api.delete(`/fonctionnalites/${modalDeleteId}`);\r\n            setSuccessMessage(\"Fonctionnalité supprimée avec succès !\");\r\n            fetchFonctionnalites();\r\n            closeDeleteModal();\r\n        } catch (err) {\r\n            handleApiError(err, \"Erreur lors de la suppression de la fonctionnalité.\");\r\n            closeDeleteModal();\r\n        }\r\n    };\r\n\r\n    if (role && role !== \"ADMIN\") {\r\n        return (\r\n            <div className=\"alert alert-danger mt-5 text-center\">\r\n                Vous n'avez pas la permission d'accéder à cette page.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center my-5\">Chargement des fonctionnalités...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-8 max-w-7xl px-4\">\r\n            <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 text-center\">Gestion des Fonctionnalités</h1>\r\n\r\n            {error && (\r\n                <div className=\"alert alert-danger alert-dismissible fade show mb-4\">\r\n                    {error}\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => setError(null)}></button>\r\n                </div>\r\n            )}\r\n\r\n            {successMessage && (\r\n                <div className=\"alert alert-success alert-dismissible fade show mb-4\">\r\n                    {successMessage}\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => setSuccessMessage(null)}></button>\r\n                </div>\r\n            )}\r\n\r\n            {!showForm && (\r\n                <div className=\"mb-6 flex justify-end\">\r\n                    <button\r\n                        onClick={() => {\r\n                            resetForm();\r\n                            setShowForm(true);\r\n                        }}\r\n                        className=\"inline-flex items-center rounded-md bg-indigo-600 px-6 py-2 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\r\n                        Ajouter une fonctionnalité\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {showForm && (\r\n                <form onSubmit={handleSubmit} className=\"mb-8 bg-white p-6 rounded-lg shadow-lg border border-gray-200\">\r\n                    <h3 className=\"mb-6 text-2xl font-semibold text-gray-700\">{editId ? 'Modifier une fonctionnalité' : 'Ajouter une fonctionnalité'}</h3>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                        <div>\r\n                            <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-700\">Nom <span className=\"text-red-500\">*</span></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"nom\"\r\n                                value={nom}\r\n                                onChange={(e) => setNom(e.target.value)}\r\n                                required\r\n                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">Type <span className=\"text-red-500\">*</span></label>\r\n                            <select\r\n                                id=\"type\"\r\n                                value={type}\r\n                                onChange={(e) => setType(e.target.value)}\r\n                                required\r\n                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                            >\r\n                                <option value=\"\">Sélectionnez un type...</option>\r\n                                <option value=\"citation\">Citation</option>\r\n                                <option value=\"podcast\">Podcast</option>\r\n                                <option value=\"article\">Article</option>\r\n                                <option value=\"video\">Vidéo</option>\r\n                                <option value=\"outil\">Outil interactif</option>\r\n                                <option value=\"guide_pratique\">Guide Pratique</option>\r\n                                <option value=\"journaling_prompt\">Prompt Journaling</option>\r\n                                <option value=\"exercice_texte\">Exercice de Relaxation (texte)</option>\r\n                                <option value=\"challenge\">Défi Bien-être</option>\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"categorie\" className=\"block text-sm font-medium text-gray-700\">Catégorie (Optionnel)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"categorie\"\r\n                                value={categorie}\r\n                                onChange={(e) => setCategorie(e.target.value)}\r\n                                placeholder=\"Ex: Méditation, Sommeil\"\r\n                                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">Description / Contenu</label>\r\n                        <textarea\r\n                            id=\"description\"\r\n                            rows=\"4\"\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            placeholder=\"Description détaillée ou contenu de la ressource\"\r\n                            className=\"block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <label htmlFor=\"lienFichier\" className=\"block text-sm font-medium text-gray-700 mb-1\">Lien du Fichier (URL pour Vidéo/Podcast/Outil, optionnel)</label>\r\n                        <input\r\n                            type=\"url\"\r\n                            id=\"lienFichier\"\r\n                            value={lienFichier}\r\n                            onChange={(e) => setLienFichier(e.target.value)}\r\n                            placeholder=\"Ex: https://youtube.com/ma-video\"\r\n                            className=\"block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-8 mt-6\">\r\n                        <label className=\"inline-flex items-center\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={statut}\r\n                                onChange={() => setStatut(!statut)}\r\n                                className=\"form-checkbox h-5 w-5 text-indigo-600\"\r\n                            />\r\n                            <span className=\"ml-2 text-gray-700\">Actif</span>\r\n                        </label>\r\n                        <label className=\"inline-flex items-center\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={premium}\r\n                                onChange={() => setPremium(!premium)}\r\n                                className=\"form-checkbox h-5 w-5 text-yellow-500\"\r\n                            />\r\n                            <span className=\"ml-2 text-gray-700\">Premium</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"mt-8 flex justify-end space-x-4\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"inline-flex items-center rounded-md bg-indigo-600 px-6 py-2 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                        >\r\n                            <FontAwesomeIcon icon={editId ? faPencilAlt : faPlus} className=\"mr-2\" />\r\n                            {editId ? 'Modifier' : 'Ajouter'}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                resetForm();\r\n                                setShowForm(false);\r\n                            }}\r\n                            className=\"rounded-md bg-gray-200 px-6 py-2 text-gray-700 shadow-sm hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n                        >\r\n                            Annuler\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {fonctionnalites.length === 0 ? (\r\n                <div className=\"text-center p-6 bg-blue-50 rounded-md shadow-sm text-blue-700\">Aucune fonctionnalité trouvée.</div>\r\n            ) : (\r\n                <div className=\"overflow-x-auto rounded-lg shadow-lg border border-gray-200\">\r\n                    <table className=\"min-w-full bg-white\">\r\n                        <thead className=\"bg-gray-100\">\r\n                            <tr>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">ID</th>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Nom</th>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Type</th>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Description</th>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Lien Fichier</th>\r\n                                <th className=\"px-5 py-3 text-left text-sm font-semibold text-gray-600\">Catégorie</th>\r\n                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Statut</th>\r\n                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Premium</th>\r\n                                <th className=\"px-5 py-3 text-center text-sm font-semibold text-gray-600\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {fonctionnalites.map((f) => (\r\n                                <tr key={f.id} className=\"hover:bg-gray-50\">\r\n                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.id}</td>\r\n                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.nom}</td>\r\n                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.type}</td>\r\n                                    <td className=\"px-5 py-4 max-w-xs truncate text-sm text-gray-600\">{f.description}</td>\r\n                                    <td className=\"px-5 py-4 max-w-xs truncate text-sm text-blue-600\">{f.lienFichier}</td>\r\n                                    <td className=\"px-5 py-4 text-sm text-gray-900\">{f.categorie || '-'}</td>\r\n                                    <td className=\"px-5 py-4 text-center text-sm\">\r\n                                        <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${f.statut ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n                                            {f.statut ? 'Actif' : 'Inactif'}\r\n                                        </span>\r\n                                    </td>\r\n                                    <td className=\"px-5 py-4 text-center text-sm\">\r\n                                        <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${f.premium ? 'bg-yellow-100 text-yellow-800' : 'bg-blue-100 text-blue-800'}`}>\r\n                                            {f.premium ? 'Oui' : 'Non'}\r\n                                        </span>\r\n                                    </td>\r\n                                    <td className=\"px-5 py-4 text-center text-sm space-x-4\">\r\n                                        <button\r\n                                            onClick={() => handleEdit(f)}\r\n                                            aria-label={`Modifier ${f.nom}`}\r\n                                            className=\"text-indigo-600 hover:text-indigo-900 focus:outline-none\"\r\n                                            style={{ outline: 'none' }}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => openDeleteModal(f.id)}\r\n                                            aria-label={`Supprimer ${f.nom}`}\r\n                                            className=\"text-red-600 hover:text-red-900 focus:outline-none\"\r\n                                            style={{ outline: 'none' }}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal de confirmation suppression */}\r\n            {modalDeleteId && (\r\n                <div\r\n                    className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n                    aria-modal=\"true\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"modal-title\"\r\n                    aria-describedby=\"modal-description\"\r\n                >\r\n                    <div className=\"bg-white rounded-lg shadow-xl max-w-sm w-full p-6\">\r\n                        <h2 id=\"modal-title\" className=\"text-xl font-semibold text-gray-800 mb-4\">Confirmation de suppression</h2>\r\n                        <p id=\"modal-description\" className=\"mb-6 text-gray-600\">Êtes-vous sûr de vouloir supprimer cette fonctionnalité ? Cette action est irréversible.</p>\r\n                        <div className=\"flex justify-end space-x-4\">\r\n                            <button\r\n                                onClick={closeDeleteModal}\r\n                                className=\"px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n                            >\r\n                                Annuler\r\n                            </button>\r\n                            <button\r\n                                onClick={confirmDelete}\r\n                                className=\"px-4 py-2 rounded-md bg-red-600 text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                            >\r\n                                Supprimer\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminFonctionnalites;\r\n"
        }
    ]
}