{
    "sourceFile": "src/components/utilisateur/MesReservations.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 38,
            "patches": [
                {
                    "date": 1749940066277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749940181082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,171 +1,194 @@\n // src/components/utilisateur/MesReservations.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n-import { getReservationsUtilisateur, cancelReservation } from '../../services/serviceUtilisateur';\r\n+// Importations corrigées pour correspondre à serviceUtilisateur.js\r\n+import { getReservationsUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import { \r\n-  faCalendarAlt, faTimesCircle, faClock, faVideo, \r\n-  faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle \r\n-} from '@fortawesome/free-solid-svg-icons';\r\n+// Ajout de faCheckCircle et correction de faTimesCircle si nécessaire pour le statut ANNULEE/REFUSE\r\n+import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n+// Le composant MesReservations prendra des props pour interagir avec les modales du parent\r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n-  const [reservations, setReservations] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+    const [reservations, setReservations] = useState([]);\r\n+    const [loading, setLoading] = useState(true);\r\n \r\n-  const fetchMesReservations = useCallback(async () => {\r\n-    setLoading(true);\r\n-    try {\r\n-      const data = await getReservationsUtilisateur();\r\n-      setReservations(data);\r\n-    } catch (err) {\r\n-      console.error(\"Erreur lors de la récupération des réservations:\", err);\r\n-      onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  }, [onError]);\r\n+    const fetchMesReservations = useCallback(async () => {\r\n+        setLoading(true);\r\n+        try {\r\n+            // Utilise la fonction renommée du service\r\n+            const data = await getReservationsUtilisateur();\r\n+            setReservations(data);\r\n+        } catch (err) {\r\n+            console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n+            // Passe l'erreur au parent via la prop onError\r\n+            onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n+        } finally {\r\n+            setLoading(false);\r\n+        }\r\n+    }, [onError]); // Dépend de onError, car c'est une fonction passée en prop\r\n \r\n-  useEffect(() => {\r\n-    fetchMesReservations();\r\n-  }, [fetchMesReservations]);\r\n+    useEffect(() => {\r\n+        fetchMesReservations();\r\n+    }, [fetchMesReservations]);\r\n \r\n-  const handleAnnulerReservation = (reservationId) => {\r\n-    onShowConfirm(\r\n-      \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n-      async () => {\r\n+    const handleAnnulerReservation = (reservationId) => {\r\n+        // Utilise la prop onShowConfirm fournie par le parent pour afficher la modale de confirmation\r\n+        onShowConfirm(\r\n+            \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n+            async () => {\r\n+                try {\r\n+                    // Utilise la fonction renommée du service\r\n+                    await cancelReservation(reservationId);\r\n+                    // Recharge la liste après annulation réussie\r\n+                    fetchMesReservations(); \r\n+                    // Informe le parent d'un changement, si nécessaire (ex: pour mettre à jour un message de succès global)\r\n+                    // onReservationChange(); // Cette prop n'est plus nécessaire ici car on utilise onError/onShowConfirm du parent\r\n+                } catch (err) {\r\n+                    console.error(\"Erreur lors de l'annulation de la réservation :\", err.response ? err.response.data : err.message);\r\n+                    // Passe l'erreur au parent\r\n+                    onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n+                }\r\n+            }\r\n+        );\r\n+    };\r\n+\r\n+    // Fonction de formatage de date/heure, corrigée pour utiliser heureReservation\r\n+    const formatDateTime = (dateString, timeString) => {\r\n+        if (!dateString) return 'N/A';\r\n         try {\r\n-          await cancelReservation(reservationId);\r\n-          fetchMesReservations();\r\n-        } catch (err) {\r\n-          console.error(\"Erreur lors de l'annulation :\", err.response?.data || err.message);\r\n-          onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n+            // Assure un format ISO pour la création de Date, même si l'heure est optionnelle\r\n+            const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n+            \r\n+            if (isNaN(dateTime.getTime())) { // Vérifie si la date est invalide\r\n+                console.warn(\"Invalid date format detected for:\", dateString, timeString);\r\n+                return `${dateString}${timeString ? ' ' + timeString : ''}`; \r\n+            }\r\n+\r\n+            return dateTime.toLocaleString('fr-FR', {\r\n+                year: 'numeric',\r\n+                month: 'long',\r\n+                day: 'numeric',\r\n+                hour: '2-digit',\r\n+                minute: '2-digit'\r\n+            });\r\n+        } catch (e) {\r\n+            console.error(\"Erreur de formatage de date/heure:\", e);\r\n+            return `${dateString} ${timeString || ''}`; // Retourne les strings bruts en cas d'erreur\r\n         }\r\n-      }\r\n-    );\r\n-  };\r\n+    };\r\n \r\n-  const formatDateTime = (dateString, timeString) => {\r\n-    if (!dateString) return 'N/A';\r\n-    try {\r\n-      const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n-      if (isNaN(dateTime.getTime())) {\r\n-        console.warn(\"Format date invalide:\", dateString, timeString);\r\n-        return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n-      }\r\n-      return dateTime.toLocaleString('fr-FR', {\r\n-        year: 'numeric', month: 'long', day: 'numeric',\r\n-        hour: '2-digit', minute: '2-digit'\r\n-      });\r\n-    } catch {\r\n-      return `${dateString} ${timeString || ''}`;\r\n+    // Fonction pour afficher les détails dans une modale d'information\r\n+    const showReservationDetails = (res) => {\r\n+        const details = `\r\n+            Détails de la réservation ${res.id}:\r\n+            Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n+            Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n+            Statut: ${res.statut}\r\n+            Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+            Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n+        `;\r\n+        // Utilise la prop onShowInfo fournie par le parent\r\n+        onShowInfo(\"Détails de la réservation\", details);\r\n+    };\r\n+\r\n+    if (loading) {\r\n+        return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n     }\r\n-  };\r\n \r\n-  const showReservationDetails = (res) => {\r\n-    const details = `\r\n-Détails de la réservation ${res.id}:\r\n-Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n-Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n-Statut: ${res.statut}\r\n-Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n-    `;\r\n-    onShowInfo(\"Détails de la réservation\", details);\r\n-  };\r\n+    if (!reservations || reservations.length === 0) {\r\n+        return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n+    }\r\n \r\n-  if (loading) {\r\n-    return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n-  }\r\n-\r\n-  if (!reservations.length) {\r\n-    return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n-      <table className=\"min-w-full divide-y divide-gray-200\">\r\n-        <thead className=\"bg-gray-50\">\r\n-          <tr>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID Réservation</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure Dem.</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation Prévue</th>\r\n-            <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-          {reservations.map((res) => (\r\n-            <tr key={res.id}>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{res.id}</td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n-                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n-                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n-                  ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n-                  res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n-                  (res.statut === 'REFUSE' || res.statut === 'ANNULEE') ? 'bg-red-100 text-red-800' :\r\n-                  res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n-                  'bg-gray-100 text-gray-800'}`}>\r\n-                  <FontAwesomeIcon icon={\r\n-                    res.statut === 'EN_ATTENTE' ? faClock :\r\n-                    res.statut === 'VALIDÉ' ? faCheckCircle :\r\n-                    (res.statut === 'REFUSE' || res.statut === 'ANNULEE') ? faTimesCircle :\r\n-                    faInfoCircle\r\n-                  } className=\"mr-1\" />\r\n-                  {res.statut}\r\n-                </span>\r\n-              </td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n-                  <>\r\n-                    <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n-                      {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n-                    </p>\r\n-                    {res.consultation.lienVisio && (\r\n-                      <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n-                        <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n-                      </a>\r\n-                    )}\r\n-                  </>\r\n-                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n-                  <p className=\"text-red-500\">Consultation non trouvée</p>\r\n-                ) : (\r\n-                  <p className=\"text-gray-500\">N/A</p>\r\n-                )}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-medium\">\r\n-                {res.statut === 'EN_ATTENTE' && (\r\n-                  <button\r\n-                    onClick={() => handleAnnulerReservation(res.id)}\r\n-                    className=\"text-red-600 hover:text-red-900\"\r\n-                    title=\"Annuler cette réservation\"\r\n-                  >\r\n-                    <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n-                  </button>\r\n-                )}\r\n-                <button\r\n-                  onClick={() => showReservationDetails(res)}\r\n-                  className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n-                  title=\"Voir les détails\"\r\n-                >\r\n-                  <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n-                </button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n+    return (\r\n+        <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n+            <table className=\"min-w-full divide-y divide-gray-200\">\r\n+                <thead className=\"bg-gray-50\">\r\n+                    <tr>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID Réservation</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure Dem.</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n+                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation Prévue</th>\r\n+                        <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+                    {reservations.map((res) => (\r\n+                        <tr key={res.id}>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{res.id}</td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {/* Utilise heureReservation comme défini dans l'entité Java */}\r\n+                                {formatDateTime(res.dateReservation, res.heureReservation)} \r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n+                                {/* Correction de la devise */}\r\n+                                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n+                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n+                                    ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n+                                    // Correction de 'VALIDE' en 'VALIDÉ' pour correspondre à l'enum Java\r\n+                                    res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n+                                    res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n+                                    res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n+                                    'bg-gray-100 text-gray-800'}`}>\r\n+                                    <FontAwesomeIcon icon={\r\n+                                        res.statut === 'EN_ATTENTE' ? faClock :\r\n+                                        // Correction de 'VALIDE' en 'VALIDÉ'\r\n+                                        res.statut === 'VALIDÉ' ? faCheckCircle :\r\n+                                        res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n+                                        faInfoCircle\r\n+                                    } className=\"mr-1\" />\r\n+                                    {res.statut}\r\n+                                </span>\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n+                                {/* Correction de 'VALIDE' en 'VALIDÉ' */}\r\n+                                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n+                                    <>\r\n+                                        <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n+                                            {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n+                                        </p>\r\n+                                        {res.consultation.lienVisio && (\r\n+                                            <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n+                                                <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n+                                            </a>\r\n+                                        )}\r\n+                                    </>\r\n+                                ) : res.statut === 'VALIDÉ' && !res.consultation ? ( // Correction ici aussi\r\n+                                    <p className=\"text-red-500\">Consultation non trouvée</p>\r\n+                                ) : (\r\n+                                    <p className=\"text-gray-500\">N/A</p>\r\n+                                )}\r\n+                            </td>\r\n+                            <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-medium\">\r\n+                                {res.statut === 'EN_ATTENTE' && (\r\n+                                    <button\r\n+                                        onClick={() => handleAnnulerReservation(res.id)}\r\n+                                        className=\"text-red-600 hover:text-red-900\"\r\n+                                        title=\"Annuler cette réservation\"\r\n+                                    >\r\n+                                        <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n+                                    </button>\r\n+                                )}\r\n+                                <button\r\n+                                    onClick={() => showReservationDetails(res)} // Utilise la nouvelle fonction\r\n+                                    className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n+                                    title=\"Voir les détails\"\r\n+                                >\r\n+                                    <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n+                                </button>\r\n+                            </td>\r\n+                        </tr>\r\n+                    ))}\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    );\r\n };\r\n \r\n export default MesReservations;\r\n"
                },
                {
                    "date": 1749940310146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,54 @@\n // src/components/utilisateur/MesReservations.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n-// Importations corrigées pour correspondre à serviceUtilisateur.js\r\n-import { getReservationsUtilisateur } from '../../services/serviceUtilisateur';\r\n+import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-// Ajout de faCheckCircle et correction de faTimesCircle si nécessaire pour le statut ANNULEE/REFUSE\r\n import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n-// Le composant MesReservations prendra des props pour interagir avec les modales du parent\r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n     const [loading, setLoading] = useState(true);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n         setLoading(true);\r\n         try {\r\n-            // Utilise la fonction renommée du service\r\n             const data = await getReservationsUtilisateur();\r\n             setReservations(data);\r\n         } catch (err) {\r\n             console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n-            // Passe l'erreur au parent via la prop onError\r\n             onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n         } finally {\r\n             setLoading(false);\r\n         }\r\n-    }, [onError]); // Dépend de onError, car c'est une fonction passée en prop\r\n+    }, [onError]);\r\n \r\n     useEffect(() => {\r\n         fetchMesReservations();\r\n     }, [fetchMesReservations]);\r\n \r\n     const handleAnnulerReservation = (reservationId) => {\r\n-        // Utilise la prop onShowConfirm fournie par le parent pour afficher la modale de confirmation\r\n         onShowConfirm(\r\n             \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n             async () => {\r\n                 try {\r\n-                    // Utilise la fonction renommée du service\r\n-                    await cancelReservation(reservationId);\r\n-                    // Recharge la liste après annulation réussie\r\n-                    fetchMesReservations(); \r\n-                    // Informe le parent d'un changement, si nécessaire (ex: pour mettre à jour un message de succès global)\r\n-                    // onReservationChange(); // Cette prop n'est plus nécessaire ici car on utilise onError/onShowConfirm du parent\r\n+                    await annulerReservationUtilisateur(reservationId);\r\n+                    fetchMesReservations();\r\n                 } catch (err) {\r\n                     console.error(\"Erreur lors de l'annulation de la réservation :\", err.response ? err.response.data : err.message);\r\n-                    // Passe l'erreur au parent\r\n                     onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n                 }\r\n             }\r\n         );\r\n     };\r\n \r\n-    // Fonction de formatage de date/heure, corrigée pour utiliser heureReservation\r\n     const formatDateTime = (dateString, timeString) => {\r\n         if (!dateString) return 'N/A';\r\n         try {\r\n-            // Assure un format ISO pour la création de Date, même si l'heure est optionnelle\r\n             const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n-            \r\n-            if (isNaN(dateTime.getTime())) { // Vérifie si la date est invalide\r\n+            if (isNaN(dateTime.getTime())) {\r\n                 console.warn(\"Invalid date format detected for:\", dateString, timeString);\r\n-                return `${dateString}${timeString ? ' ' + timeString : ''}`; \r\n+                return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n             }\r\n-\r\n             return dateTime.toLocaleString('fr-FR', {\r\n                 year: 'numeric',\r\n                 month: 'long',\r\n                 day: 'numeric',\r\n@@ -71,23 +56,21 @@\n                 minute: '2-digit'\r\n             });\r\n         } catch (e) {\r\n             console.error(\"Erreur de formatage de date/heure:\", e);\r\n-            return `${dateString} ${timeString || ''}`; // Retourne les strings bruts en cas d'erreur\r\n+            return `${dateString} ${timeString || ''}`;\r\n         }\r\n     };\r\n \r\n-    // Fonction pour afficher les détails dans une modale d'information\r\n     const showReservationDetails = (res) => {\r\n         const details = `\r\n-            Détails de la réservation ${res.id}:\r\n-            Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n-            Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n-            Statut: ${res.statut}\r\n-            Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-            Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n+Détails de la réservation ${res.id}:\r\n+Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n+Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n+Statut: ${res.statut}\r\n+Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n         `;\r\n-        // Utilise la prop onShowInfo fournie par le parent\r\n         onShowInfo(\"Détails de la réservation\", details);\r\n     };\r\n \r\n     if (loading) {\r\n@@ -119,36 +102,31 @@\n                             <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                                 {res.professionnel?.nom} {res.professionnel?.prenom}\r\n                             </td>\r\n                             <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                {/* Utilise heureReservation comme défini dans l'entité Java */}\r\n-                                {formatDateTime(res.dateReservation, res.heureReservation)} \r\n+                                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n                             </td>\r\n                             <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                                 <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n-                                {/* Correction de la devise */}\r\n                                 {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n                             </td>\r\n                             <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                                 <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n                                     ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n-                                    // Correction de 'VALIDE' en 'VALIDÉ' pour correspondre à l'enum Java\r\n                                     res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n                                     res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n                                     res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n                                     'bg-gray-100 text-gray-800'}`}>\r\n                                     <FontAwesomeIcon icon={\r\n                                         res.statut === 'EN_ATTENTE' ? faClock :\r\n-                                        // Correction de 'VALIDE' en 'VALIDÉ'\r\n                                         res.statut === 'VALIDÉ' ? faCheckCircle :\r\n                                         res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n                                         faInfoCircle\r\n                                     } className=\"mr-1\" />\r\n                                     {res.statut}\r\n                                 </span>\r\n                             </td>\r\n                             <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                {/* Correction de 'VALIDE' en 'VALIDÉ' */}\r\n                                 {res.statut === 'VALIDÉ' && res.consultation ? (\r\n                                     <>\r\n                                         <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n                                             {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n@@ -158,9 +136,9 @@\n                                                 <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n                                             </a>\r\n                                         )}\r\n                                     </>\r\n-                                ) : res.statut === 'VALIDÉ' && !res.consultation ? ( // Correction ici aussi\r\n+                                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n                                     <p className=\"text-red-500\">Consultation non trouvée</p>\r\n                                 ) : (\r\n                                     <p className=\"text-gray-500\">N/A</p>\r\n                                 )}\r\n@@ -175,9 +153,9 @@\n                                         <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n                                     </button>\r\n                                 )}\r\n                                 <button\r\n-                                    onClick={() => showReservationDetails(res)} // Utilise la nouvelle fonction\r\n+                                    onClick={() => showReservationDetails(res)}\r\n                                     className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n                                     title=\"Voir les détails\"\r\n                                 >\r\n                                     <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n"
                },
                {
                    "date": 1749940806808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,19 @@\n-// src/components/utilisateur/MesReservations.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n-    const [loading, setLoading] = useState(true);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n-        setLoading(true);\r\n         try {\r\n             const data = await getReservationsUtilisateur();\r\n             setReservations(data);\r\n         } catch (err) {\r\n             console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n             onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n-        } finally {\r\n-            setLoading(false);\r\n         }\r\n     }, [onError]);\r\n \r\n     useEffect(() => {\r\n@@ -72,12 +67,8 @@\n         `;\r\n         onShowInfo(\"Détails de la réservation\", details);\r\n     };\r\n \r\n-    if (loading) {\r\n-        return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n-    }\r\n-\r\n     if (!reservations || reservations.length === 0) {\r\n         return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1749940839996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,24 @@\n+// src/components/utilisateur/MesReservations.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n+    const [loading, setLoading] = useState(true);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n+        setLoading(true);\r\n         try {\r\n             const data = await getReservationsUtilisateur();\r\n             setReservations(data);\r\n         } catch (err) {\r\n             console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n             onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n+        } finally {\r\n+            setLoading(false);\r\n         }\r\n     }, [onError]);\r\n \r\n     useEffect(() => {\r\n@@ -67,8 +72,12 @@\n         `;\r\n         onShowInfo(\"Détails de la réservation\", details);\r\n     };\r\n \r\n+    if (loading) {\r\n+        return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n+    }\r\n+\r\n     if (!reservations || reservations.length === 0) {\r\n         return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1749942205019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,19 @@\n-// src/components/utilisateur/MesReservations.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n-    const [loading, setLoading] = useState(true);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n-        setLoading(true);\r\n         try {\r\n             const data = await getReservationsUtilisateur();\r\n             setReservations(data);\r\n         } catch (err) {\r\n             console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n             onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n-        } finally {\r\n-            setLoading(false);\r\n         }\r\n     }, [onError]);\r\n \r\n     useEffect(() => {\r\n@@ -72,12 +67,8 @@\n         `;\r\n         onShowInfo(\"Détails de la réservation\", details);\r\n     };\r\n \r\n-    if (loading) {\r\n-        return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n-    }\r\n-\r\n     if (!reservations || reservations.length === 0) {\r\n         return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1749944895596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,25 @@\n import React, { useState, useEffect, useCallback } from 'react';\r\n-import { getReservationsUtilisateur, annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n+import axios from 'axios';\r\n+import { annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n         try {\r\n-            const data = await getReservationsUtilisateur();\r\n-            setReservations(data);\r\n+            const token = localStorage.getItem(\"access_token\");\r\n+            const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n+                headers: {\r\n+                    Authorization: `Bearer ${token}`\r\n+                }\r\n+            });\r\n+            console.log(\"Réservations récupérées:\", response.data);\r\n+            setReservations(response.data);\r\n         } catch (err) {\r\n-            console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err);\r\n+            console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err.response?.data || err.message);\r\n             onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n         }\r\n     }, [onError]);\r\n \r\n"
                },
                {
                    "date": 1749945274007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,12 @@\n     const [reservations, setReservations] = useState([]);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n         try {\r\n-            const token = localStorage.getItem(\"access_token\");\r\n             const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n-                headers: {\r\n-                    Authorization: `Bearer ${token}`\r\n-                }\r\n+    withCredentials: true // Important pour envoyer les cookies de session\r\n+});\r\n+\r\n             });\r\n             console.log(\"Réservations récupérées:\", response.data);\r\n             setReservations(response.data);\r\n         } catch (err) {\r\n"
                },
                {
                    "date": 1749945304363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,22 +7,20 @@\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n     const [reservations, setReservations] = useState([]);\r\n \r\n     const fetchMesReservations = useCallback(async () => {\r\n-        try {\r\n-            const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n-    withCredentials: true // Important pour envoyer les cookies de session\r\n-});\r\n+    try {\r\n+        const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n+            withCredentials: true\r\n+        });\r\n+        console.log(\"Réservations récupérées:\", response.data);\r\n+        setReservations(response.data);\r\n+    } catch (err) {\r\n+        console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err.response?.data || err.message);\r\n+        onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n+    }\r\n+}, [onError]);\r\n \r\n-            });\r\n-            console.log(\"Réservations récupérées:\", response.data);\r\n-            setReservations(response.data);\r\n-        } catch (err) {\r\n-            console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err.response?.data || err.message);\r\n-            onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n-        }\r\n-    }, [onError]);\r\n-\r\n     useEffect(() => {\r\n         fetchMesReservations();\r\n     }, [fetchMesReservations]);\r\n \r\n"
                },
                {
                    "date": 1750170306319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,167 +1,172 @@\n import React, { useState, useEffect, useCallback } from 'react';\r\n import axios from 'axios';\r\n-import { annulerReservationUtilisateur } from '../../services/serviceUtilisateur';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import { faCalendarAlt, faTimesCircle, faClock, faVideo, faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n+import {\r\n+  faCalendarAlt,\r\n+  faTimesCircle,\r\n+  faClock,\r\n+  faVideo,\r\n+  faCalendarCheck,\r\n+  faInfoCircle,\r\n+  faDollarSign,\r\n+  faCheckCircle\r\n+} from '@fortawesome/free-solid-svg-icons';\r\n \r\n const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n-    const [reservations, setReservations] = useState([]);\r\n+  const [reservations, setReservations] = useState([]);\r\n \r\n-    const fetchMesReservations = useCallback(async () => {\r\n+  const fetchMesReservations = useCallback(async () => {\r\n     try {\r\n-        const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n-            withCredentials: true\r\n-        });\r\n-        console.log(\"Réservations récupérées:\", response.data);\r\n-        setReservations(response.data);\r\n+      const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n+        withCredentials: true,\r\n+      });\r\n+      console.log(\"Réservations récupérées:\", response.data);\r\n+      setReservations(response.data);\r\n     } catch (err) {\r\n-        console.error(\"Erreur lors de la récupération des réservations de l'utilisateur:\", err.response?.data || err.message);\r\n-        onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n+      console.error(\"Erreur lors de la récupération:\", err.response?.data || err.message);\r\n+      onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n     }\r\n-}, [onError]);\r\n+  }, [onError]);\r\n \r\n-    useEffect(() => {\r\n-        fetchMesReservations();\r\n-    }, [fetchMesReservations]);\r\n+  useEffect(() => {\r\n+    fetchMesReservations();\r\n+  }, [fetchMesReservations]);\r\n \r\n-    const handleAnnulerReservation = (reservationId) => {\r\n-        onShowConfirm(\r\n-            \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n-            async () => {\r\n-                try {\r\n-                    await annulerReservationUtilisateur(reservationId);\r\n-                    fetchMesReservations();\r\n-                } catch (err) {\r\n-                    console.error(\"Erreur lors de l'annulation de la réservation :\", err.response ? err.response.data : err.message);\r\n-                    onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n-                }\r\n-            }\r\n-        );\r\n-    };\r\n+  const handleAnnulerReservation = (reservationId) => {\r\n+    onShowConfirm(\"Êtes-vous sûr de vouloir annuler cette réservation ?\", async () => {\r\n+      try {\r\n+        await axios.delete(`http://localhost:9191/api/reservations/annuler/${reservationId}`, {\r\n+          withCredentials: true,\r\n+        });\r\n+        fetchMesReservations(); // recharger les données après annulation\r\n+      } catch (err) {\r\n+        console.error(\"Erreur lors de l'annulation:\", err.response?.data || err.message);\r\n+        onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n+      }\r\n+    });\r\n+  };\r\n \r\n-    const formatDateTime = (dateString, timeString) => {\r\n-        if (!dateString) return 'N/A';\r\n-        try {\r\n-            const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n-            if (isNaN(dateTime.getTime())) {\r\n-                console.warn(\"Invalid date format detected for:\", dateString, timeString);\r\n-                return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n-            }\r\n-            return dateTime.toLocaleString('fr-FR', {\r\n-                year: 'numeric',\r\n-                month: 'long',\r\n-                day: 'numeric',\r\n-                hour: '2-digit',\r\n-                minute: '2-digit'\r\n-            });\r\n-        } catch (e) {\r\n-            console.error(\"Erreur de formatage de date/heure:\", e);\r\n-            return `${dateString} ${timeString || ''}`;\r\n-        }\r\n-    };\r\n+  const formatDateTime = (dateString, timeString) => {\r\n+    if (!dateString) return 'N/A';\r\n+    try {\r\n+      const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n+      if (isNaN(dateTime.getTime())) {\r\n+        return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n+      }\r\n+      return dateTime.toLocaleString('fr-FR', {\r\n+        year: 'numeric',\r\n+        month: 'long',\r\n+        day: 'numeric',\r\n+        hour: '2-digit',\r\n+        minute: '2-digit'\r\n+      });\r\n+    } catch (e) {\r\n+      return `${dateString} ${timeString || ''}`;\r\n+    }\r\n+  };\r\n \r\n-    const showReservationDetails = (res) => {\r\n-        const details = `\r\n+  const showReservationDetails = (res) => {\r\n+    const details = `\r\n Détails de la réservation ${res.id}:\r\n Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n Statut: ${res.statut}\r\n Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n-        `;\r\n-        onShowInfo(\"Détails de la réservation\", details);\r\n-    };\r\n+    `;\r\n+    onShowInfo(\"Détails de la réservation\", details);\r\n+  };\r\n \r\n-    if (!reservations || reservations.length === 0) {\r\n-        return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n-    }\r\n+  if (!reservations || reservations.length === 0) {\r\n+    return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n+  }\r\n \r\n-    return (\r\n-        <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n-            <table className=\"min-w-full divide-y divide-gray-200\">\r\n-                <thead className=\"bg-gray-50\">\r\n-                    <tr>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID Réservation</th>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure Dem.</th>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n-                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation Prévue</th>\r\n-                        <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-                    {reservations.map((res) => (\r\n-                        <tr key={res.id}>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{res.id}</td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n-                            </td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n-                            </td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n-                                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-                            </td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n-                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n-                                    ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n-                                    res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n-                                    res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n-                                    res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n-                                    'bg-gray-100 text-gray-800'}`}>\r\n-                                    <FontAwesomeIcon icon={\r\n-                                        res.statut === 'EN_ATTENTE' ? faClock :\r\n-                                        res.statut === 'VALIDÉ' ? faCheckCircle :\r\n-                                        res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n-                                        faInfoCircle\r\n-                                    } className=\"mr-1\" />\r\n-                                    {res.statut}\r\n-                                </span>\r\n-                            </td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n-                                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n-                                    <>\r\n-                                        <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n-                                            {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n-                                        </p>\r\n-                                        {res.consultation.lienVisio && (\r\n-                                            <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n-                                                <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n-                                            </a>\r\n-                                        )}\r\n-                                    </>\r\n-                                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n-                                    <p className=\"text-red-500\">Consultation non trouvée</p>\r\n-                                ) : (\r\n-                                    <p className=\"text-gray-500\">N/A</p>\r\n-                                )}\r\n-                            </td>\r\n-                            <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-medium\">\r\n-                                {res.statut === 'EN_ATTENTE' && (\r\n-                                    <button\r\n-                                        onClick={() => handleAnnulerReservation(res.id)}\r\n-                                        className=\"text-red-600 hover:text-red-900\"\r\n-                                        title=\"Annuler cette réservation\"\r\n-                                    >\r\n-                                        <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n-                                    </button>\r\n-                                )}\r\n-                                <button\r\n-                                    onClick={() => showReservationDetails(res)}\r\n-                                    className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n-                                    title=\"Voir les détails\"\r\n-                                >\r\n-                                    <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n-                                </button>\r\n-                            </td>\r\n-                        </tr>\r\n-                    ))}\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    );\r\n+  return (\r\n+    <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n+      <table className=\"min-w-full divide-y divide-gray-200\">\r\n+        <thead className=\"bg-gray-50\">\r\n+          <tr>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure</th>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n+            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation</th>\r\n+            <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+          {reservations.map((res) => (\r\n+            <tr key={res.id}>\r\n+              <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{res.id}</td>\r\n+              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n+                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n+              </td>\r\n+              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n+                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n+              </td>\r\n+              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n+                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n+                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n+              </td>\r\n+              <td className=\"px-6 py-4 text-sm\">\r\n+                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n+                  ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n+                    res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n+                      res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n+                        res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n+                          'bg-gray-100 text-gray-800'}`}>\r\n+                  <FontAwesomeIcon icon={\r\n+                    res.statut === 'EN_ATTENTE' ? faClock :\r\n+                      res.statut === 'VALIDÉ' ? faCheckCircle :\r\n+                        res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n+                          faInfoCircle\r\n+                  } className=\"mr-1\" />\r\n+                  {res.statut}\r\n+                </span>\r\n+              </td>\r\n+              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n+                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n+                  <>\r\n+                    <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n+                      {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n+                    </p>\r\n+                    {res.consultation.lienVisio && (\r\n+                      <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n+                        <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n+                      </a>\r\n+                    )}\r\n+                  </>\r\n+                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n+                  <p className=\"text-red-500\">Consultation non trouvée</p>\r\n+                ) : (\r\n+                  <p className=\"text-gray-500\">N/A</p>\r\n+                )}\r\n+              </td>\r\n+              <td className=\"px-6 py-4 text-center text-sm font-medium\">\r\n+                {res.statut === 'EN_ATTENTE' && (\r\n+                  <button\r\n+                    onClick={() => handleAnnulerReservation(res.id)}\r\n+                    className=\"text-red-600 hover:text-red-900\"\r\n+                    title=\"Annuler\"\r\n+                  >\r\n+                    <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n+                  </button>\r\n+                )}\r\n+                <button\r\n+                  onClick={() => showReservationDetails(res)}\r\n+                  className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n+                  title=\"Détails\"\r\n+                >\r\n+                  <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n+                </button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n };\r\n \r\n export default MesReservations;\r\n"
                },
                {
                    "date": 1750170485362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,171 +1,48 @@\n-import React, { useState, useEffect, useCallback } from 'react';\r\n+import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import {\r\n-  faCalendarAlt,\r\n-  faTimesCircle,\r\n-  faClock,\r\n-  faVideo,\r\n-  faCalendarCheck,\r\n-  faInfoCircle,\r\n-  faDollarSign,\r\n-  faCheckCircle\r\n-} from '@fortawesome/free-solid-svg-icons';\r\n \r\n-const MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n+const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n+  const [error, setError] = useState(null);\r\n \r\n-  const fetchMesReservations = useCallback(async () => {\r\n-    try {\r\n-      const response = await axios.get('http://localhost:9191/api/reservations/mes-reservations', {\r\n-        withCredentials: true,\r\n-      });\r\n-      console.log(\"Réservations récupérées:\", response.data);\r\n-      setReservations(response.data);\r\n-    } catch (err) {\r\n-      console.error(\"Erreur lors de la récupération:\", err.response?.data || err.message);\r\n-      onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n-    }\r\n-  }, [onError]);\r\n-\r\n   useEffect(() => {\r\n-    fetchMesReservations();\r\n-  }, [fetchMesReservations]);\r\n-\r\n-  const handleAnnulerReservation = (reservationId) => {\r\n-    onShowConfirm(\"Êtes-vous sûr de vouloir annuler cette réservation ?\", async () => {\r\n+    const fetchReservations = async () => {\r\n       try {\r\n-        await axios.delete(`http://localhost:9191/api/reservations/annuler/${reservationId}`, {\r\n-          withCredentials: true,\r\n+        const response = await axios.get('/api/reservations/mes-reservations', {\r\n+          withCredentials: true, // Important si tu utilises Spring Security avec session ou cookie\r\n         });\r\n-        fetchMesReservations(); // recharger les données après annulation\r\n+        setReservations(response.data);\r\n       } catch (err) {\r\n-        console.error(\"Erreur lors de l'annulation:\", err.response?.data || err.message);\r\n-        onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n+        console.error('Erreur lors de la récupération :', err);\r\n+        setError(err.message);\r\n       }\r\n-    });\r\n-  };\r\n+    };\r\n \r\n-  const formatDateTime = (dateString, timeString) => {\r\n-    if (!dateString) return 'N/A';\r\n-    try {\r\n-      const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n-      if (isNaN(dateTime.getTime())) {\r\n-        return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n-      }\r\n-      return dateTime.toLocaleString('fr-FR', {\r\n-        year: 'numeric',\r\n-        month: 'long',\r\n-        day: 'numeric',\r\n-        hour: '2-digit',\r\n-        minute: '2-digit'\r\n-      });\r\n-    } catch (e) {\r\n-      return `${dateString} ${timeString || ''}`;\r\n-    }\r\n-  };\r\n+    fetchReservations();\r\n+  }, []);\r\n \r\n-  const showReservationDetails = (res) => {\r\n-    const details = `\r\n-Détails de la réservation ${res.id}:\r\n-Professionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\n-Date Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\n-Statut: ${res.statut}\r\n-Prix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-Consultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n-    `;\r\n-    onShowInfo(\"Détails de la réservation\", details);\r\n-  };\r\n-\r\n-  if (!reservations || reservations.length === 0) {\r\n-    return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n+  if (error) {\r\n+    return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n-      <table className=\"min-w-full divide-y divide-gray-200\">\r\n-        <thead className=\"bg-gray-50\">\r\n-          <tr>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n-            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation</th>\r\n-            <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n+      <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n+      {reservations.length === 0 ? (\r\n+        <p>Aucune réservation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-3\">\r\n           {reservations.map((res) => (\r\n-            <tr key={res.id}>\r\n-              <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{res.id}</td>\r\n-              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n-                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n-                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n-                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n-                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 text-sm\">\r\n-                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n-                  ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n-                    res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n-                      res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? 'bg-red-100 text-red-800' :\r\n-                        res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n-                          'bg-gray-100 text-gray-800'}`}>\r\n-                  <FontAwesomeIcon icon={\r\n-                    res.statut === 'EN_ATTENTE' ? faClock :\r\n-                      res.statut === 'VALIDÉ' ? faCheckCircle :\r\n-                        res.statut === 'REFUSE' || res.statut === 'ANNULEE' ? faTimesCircle :\r\n-                          faInfoCircle\r\n-                  } className=\"mr-1\" />\r\n-                  {res.statut}\r\n-                </span>\r\n-              </td>\r\n-              <td className=\"px-6 py-4 text-sm text-gray-700\">\r\n-                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n-                  <>\r\n-                    <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n-                      {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n-                    </p>\r\n-                    {res.consultation.lienVisio && (\r\n-                      <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n-                        <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n-                      </a>\r\n-                    )}\r\n-                  </>\r\n-                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n-                  <p className=\"text-red-500\">Consultation non trouvée</p>\r\n-                ) : (\r\n-                  <p className=\"text-gray-500\">N/A</p>\r\n-                )}\r\n-              </td>\r\n-              <td className=\"px-6 py-4 text-center text-sm font-medium\">\r\n-                {res.statut === 'EN_ATTENTE' && (\r\n-                  <button\r\n-                    onClick={() => handleAnnulerReservation(res.id)}\r\n-                    className=\"text-red-600 hover:text-red-900\"\r\n-                    title=\"Annuler\"\r\n-                  >\r\n-                    <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n-                  </button>\r\n-                )}\r\n-                <button\r\n-                  onClick={() => showReservationDetails(res)}\r\n-                  className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n-                  title=\"Détails\"\r\n-                >\r\n-                  <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n-                </button>\r\n-              </td>\r\n-            </tr>\r\n+            <li key={res.id} className=\"border p-3 rounded-md\">\r\n+              <p><strong>Date :</strong> {res.dateReservation}</p>\r\n+              <p><strong>Heure :</strong> {res.heureReservation}</p>\r\n+              <p><strong>Statut :</strong> {res.statut}</p>\r\n+              <p><strong>Prix :</strong> {res.prix} €</p>\r\n+            </li>\r\n           ))}\r\n-        </tbody>\r\n-      </table>\r\n+        </ul>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1750170520680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   useEffect(() => {\r\n     const fetchReservations = async () => {\r\n       try {\r\n         const response = await axios.get('/api/reservations/mes-reservations', {\r\n-          withCredentials: true, // Important si tu utilises Spring Security avec session ou cookie\r\n+          withCredentials: true,  \r\n         });\r\n         setReservations(response.data);\r\n       } catch (err) {\r\n         console.error('Erreur lors de la récupération :', err);\r\n"
                },
                {
                    "date": 1750170610503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,24 +4,26 @@\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n \r\n-  useEffect(() => {\r\n-    const fetchReservations = async () => {\r\n-      try {\r\n-        const response = await axios.get('/api/reservations/mes-reservations', {\r\n-          withCredentials: true,  \r\n-        });\r\n-        setReservations(response.data);\r\n-      } catch (err) {\r\n-        console.error('Erreur lors de la récupération :', err);\r\n-        setError(err.message);\r\n-      }\r\n-    };\r\n+ useEffect(() => {\r\n+  const fetchReservations = async () => {\r\n+    try {\r\n+      const response = await axios.get('/api/reservations/mes-reservations', {\r\n+        withCredentials: true,\r\n+      });\r\n+      console.log('Données reçues:', response.data); // Ajouté pour debug\r\n+      setReservations(response.data);\r\n+    } catch (err) {\r\n+      console.error('Erreur lors de la récupération :', err);\r\n+      setError(err.message);\r\n+    }\r\n+  };\r\n \r\n-    fetchReservations();\r\n-  }, []);\r\n+  fetchReservations();\r\n+}, []);\r\n \r\n+\r\n   if (error) {\r\n     return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1750170692817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,19 @@\n \r\n  useEffect(() => {\r\n   const fetchReservations = async () => {\r\n     try {\r\n-      const response = await axios.get('/api/reservations/mes-reservations', {\r\n-        withCredentials: true,\r\n+      const response = await fetch('/api/reservations/mes-reservations', {\r\n+        credentials: 'include',  // important pour les cookies\r\n       });\r\n-      console.log('Données reçues:', response.data); // Ajouté pour debug\r\n-      setReservations(response.data);\r\n+      if (!response.ok) {\r\n+        throw new Error('Erreur HTTP ' + response.status);\r\n+      }\r\n+      const data = await response.json();\r\n+      console.log('Données fetch:', data);\r\n+      setReservations(data);\r\n     } catch (err) {\r\n-      console.error('Erreur lors de la récupération :', err);\r\n+      console.error('Erreur fetch:', err);\r\n       setError(err.message);\r\n     }\r\n   };\r\n \r\n"
                },
                {
                    "date": 1750170758401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,21 +7,18 @@\n \r\n  useEffect(() => {\r\n   const fetchReservations = async () => {\r\n     try {\r\n-      const response = await fetch('/api/reservations/mes-reservations', {\r\n-        credentials: 'include',  // important pour les cookies\r\n-      });\r\n-      if (!response.ok) {\r\n-        throw new Error('Erreur HTTP ' + response.status);\r\n-      }\r\n-      const data = await response.json();\r\n-      console.log('Données fetch:', data);\r\n-      setReservations(data);\r\n-    } catch (err) {\r\n-      console.error('Erreur fetch:', err);\r\n-      setError(err.message);\r\n-    }\r\n+  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+  console.log('Status:', response.status);\r\n+  console.log('Headers:', response.headers);\r\n+  console.log('Data:', response.data);\r\n+  setReservations(response.data);\r\n+} catch (err) {\r\n+  console.error('Erreur lors de la récupération :', err);\r\n+  setError(err.message);\r\n+}\r\n+\r\n   };\r\n \r\n   fetchReservations();\r\n }, []);\r\n"
                },
                {
                    "date": 1750171183310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \r\n  useEffect(() => {\r\n   const fetchReservations = async () => {\r\n     try {\r\n-  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+  const response = await axios.get('/api/reservations/mes-reservations, { withCredentials: true });\r\n   console.log('Status:', response.status);\r\n   console.log('Headers:', response.headers);\r\n   console.log('Data:', response.data);\r\n   setReservations(response.data);\r\n"
                },
                {
                    "date": 1750171190471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \r\n  useEffect(() => {\r\n   const fetchReservations = async () => {\r\n     try {\r\n-  const response = await axios.get('/api/reservations/mes-reservations, { withCredentials: true });\r\n+  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n   console.log('Status:', response.status);\r\n   console.log('Headers:', response.headers);\r\n   console.log('Data:', response.data);\r\n   setReservations(response.data);\r\n"
                },
                {
                    "date": 1750173530377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,27 +4,22 @@\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n \r\n- useEffect(() => {\r\n-  const fetchReservations = async () => {\r\n-    try {\r\n-  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n-  console.log('Status:', response.status);\r\n-  console.log('Headers:', response.headers);\r\n-  console.log('Data:', response.data);\r\n-  setReservations(response.data);\r\n-} catch (err) {\r\n-  console.error('Erreur lors de la récupération :', err);\r\n-  setError(err.message);\r\n-}\r\n+  useEffect(() => {\r\n+    const fetchReservations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+        setReservations(response.data);\r\n+      } catch (err) {\r\n+        console.error('Erreur lors de la récupération :', err);\r\n+        setError(err.message);\r\n+      }\r\n+    };\r\n \r\n-  };\r\n+    fetchReservations();\r\n+  }, []);\r\n \r\n-  fetchReservations();\r\n-}, []);\r\n-\r\n-\r\n   if (error) {\r\n     return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n   }\r\n \r\n@@ -33,15 +28,18 @@\n       <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n       {reservations.length === 0 ? (\r\n         <p>Aucune réservation trouvée.</p>\r\n       ) : (\r\n-        <ul className=\"space-y-3\">\r\n+        <ul className=\"space-y-4\">\r\n           {reservations.map((res) => (\r\n-            <li key={res.id} className=\"border p-3 rounded-md\">\r\n-              <p><strong>Date :</strong> {res.dateReservation}</p>\r\n-              <p><strong>Heure :</strong> {res.heureReservation}</p>\r\n-              <p><strong>Statut :</strong> {res.statut}</p>\r\n-              <p><strong>Prix :</strong> {res.prix} €</p>\r\n+            <li key={res.id} className=\"border p-4 rounded-md shadow-sm bg-gray-50\">\r\n+              <p><strong>🧑‍⚕️ Professionnel :</strong> {res.professionnelNom} (ID: {res.professionnelId})</p>\r\n+              <p><strong>📅 Date de réservation :</strong> {res.dateReservation}</p>\r\n+              <p><strong>🕒 Heure de réservation :</strong> {res.heureReservation}</p>\r\n+              <p><strong>📆 Jour de consultation :</strong> {res.jourConsultation || 'Non défini'}</p>\r\n+              <p><strong>🕘 Heure de consultation :</strong> {res.heureConsultation || 'Non définie'}</p>\r\n+              <p><strong>💬 Statut :</strong> {res.statut}</p>\r\n+              <p><strong>💶 Prix :</strong> {res.prix} €</p>\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1750173645143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,22 +4,27 @@\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n \r\n-  useEffect(() => {\r\n-    const fetchReservations = async () => {\r\n-      try {\r\n-        const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n-        setReservations(response.data);\r\n-      } catch (err) {\r\n-        console.error('Erreur lors de la récupération :', err);\r\n-        setError(err.message);\r\n-      }\r\n-    };\r\n+ useEffect(() => {\r\n+  const fetchReservations = async () => {\r\n+    try {\r\n+  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+  console.log('Status:', response.status);\r\n+  console.log('Headers:', response.headers);\r\n+  console.log('Data:', response.data);\r\n+  setReservations(response.data);\r\n+} catch (err) {\r\n+  console.error('Erreur lors de la récupération :', err);\r\n+  setError(err.message);\r\n+}\r\n \r\n-    fetchReservations();\r\n-  }, []);\r\n+  };\r\n \r\n+  fetchReservations();\r\n+}, []);\r\n+\r\n+\r\n   if (error) {\r\n     return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n   }\r\n \r\n@@ -28,18 +33,15 @@\n       <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n       {reservations.length === 0 ? (\r\n         <p>Aucune réservation trouvée.</p>\r\n       ) : (\r\n-        <ul className=\"space-y-4\">\r\n+        <ul className=\"space-y-3\">\r\n           {reservations.map((res) => (\r\n-            <li key={res.id} className=\"border p-4 rounded-md shadow-sm bg-gray-50\">\r\n-              <p><strong>🧑‍⚕️ Professionnel :</strong> {res.professionnelNom} (ID: {res.professionnelId})</p>\r\n-              <p><strong>📅 Date de réservation :</strong> {res.dateReservation}</p>\r\n-              <p><strong>🕒 Heure de réservation :</strong> {res.heureReservation}</p>\r\n-              <p><strong>📆 Jour de consultation :</strong> {res.jourConsultation || 'Non défini'}</p>\r\n-              <p><strong>🕘 Heure de consultation :</strong> {res.heureConsultation || 'Non définie'}</p>\r\n-              <p><strong>💬 Statut :</strong> {res.statut}</p>\r\n-              <p><strong>💶 Prix :</strong> {res.prix} €</p>\r\n+            <li key={res.id} className=\"border p-3 rounded-md\">\r\n+              <p><strong>Date :</strong> {res.dateReservation}</p>\r\n+              <p><strong>Heure :</strong> {res.heureReservation}</p>\r\n+              <p><strong>Statut :</strong> {res.statut}</p>\r\n+              <p><strong>Prix :</strong> {res.prix} €</p>\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1750173686701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,27 +4,24 @@\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n \r\n- useEffect(() => {\r\n-  const fetchReservations = async () => {\r\n-    try {\r\n-  const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n-  console.log('Status:', response.status);\r\n-  console.log('Headers:', response.headers);\r\n-  console.log('Data:', response.data);\r\n-  setReservations(response.data);\r\n-} catch (err) {\r\n-  console.error('Erreur lors de la récupération :', err);\r\n-  setError(err.message);\r\n-}\r\n+  useEffect(() => {\r\n+    const fetchReservations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+        console.log('Status:', response.status);\r\n+        console.log('Data:', response.data);\r\n+        setReservations(response.data);\r\n+      } catch (err) {\r\n+        console.error('Erreur lors de la récupération :', err);\r\n+        setError(err.message);\r\n+      }\r\n+    };\r\n \r\n-  };\r\n+    fetchReservations();\r\n+  }, []);\r\n \r\n-  fetchReservations();\r\n-}, []);\r\n-\r\n-\r\n   if (error) {\r\n     return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n   }\r\n \r\n@@ -35,11 +32,14 @@\n         <p>Aucune réservation trouvée.</p>\r\n       ) : (\r\n         <ul className=\"space-y-3\">\r\n           {reservations.map((res) => (\r\n-            <li key={res.id} className=\"border p-3 rounded-md\">\r\n-              <p><strong>Date :</strong> {res.dateReservation}</p>\r\n-              <p><strong>Heure :</strong> {res.heureReservation}</p>\r\n+            <li key={res.id} className=\"border p-4 rounded-md bg-gray-50\">\r\n+              <p><strong>Professionnel :</strong> {res.nomProfessionnel}</p>\r\n+              <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n+              <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n+              <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n+              <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n               <p><strong>Statut :</strong> {res.statut}</p>\r\n               <p><strong>Prix :</strong> {res.prix} €</p>\r\n             </li>\r\n           ))}\r\n"
                },
                {
                    "date": 1750174851102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const MesReservations = () => {\r\n+  const [reservations, setReservations] = useState([]);\r\n+  const [error, setError] = useState(null);\r\n+  const [loadingAnnulation, setLoadingAnnulation] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchReservations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n+        setReservations(response.data);\r\n+      } catch (err) {\r\n+        setError(err.message);\r\n+      }\r\n+    };\r\n+\r\n+    fetchReservations();\r\n+  }, []);\r\n+\r\n+  const handleAnnuler = async (id) => {\r\n+    if (!window.confirm(\"Voulez-vous vraiment annuler cette réservation ?\")) return;\r\n+\r\n+    try {\r\n+      setLoadingAnnulation(true);\r\n+      await axios.delete(`/api/reservations/annuler/${id}`, { withCredentials: true });\r\n+      // Retirer la réservation annulée de la liste ou la mettre à jour\r\n+      setReservations(prev =>\r\n+        prev.map(res => res.id === id ? { ...res, statut: 'ANNULÉE' } : res)\r\n+      );\r\n+    } catch (err) {\r\n+      alert(\"Erreur lors de l'annulation : \" + err.message);\r\n+    } finally {\r\n+      setLoadingAnnulation(false);\r\n+    }\r\n+  };\r\n+\r\n+  if (error) {\r\n+    return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n+      <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n+      {reservations.length === 0 ? (\r\n+        <p>Aucune réservation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-3\">\r\n+          {reservations.map((res) => (\r\n+            <li key={res.id} className=\"border p-4 rounded-md bg-gray-50 flex justify-between items-center\">\r\n+              <div>\r\n+                <p><strong>Professionnel :</strong> {res.professionnelNom}</p>\r\n+                <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n+                <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n+                <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n+                <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n+                <p><strong>Statut :</strong> {res.statut}</p>\r\n+                <p><strong>Prix :</strong> {res.prix} €</p>\r\n+              </div>\r\n+              {res.statut !== 'PAYE' && res.statut !== 'ANNULÉE' && (\r\n+                <button\r\n+                  disabled={loadingAnnulation}\r\n+                  onClick={() => handleAnnuler(res.id)}\r\n+                  className=\"ml-4 px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\r\n+                >\r\n+                  Annuler\r\n+                </button>\r\n+              )}\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default MesReservations;\r\n"
                },
                {
                    "date": 1750174907512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                 <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n                 <p><strong>Statut :</strong> {res.statut}</p>\r\n                 <p><strong>Prix :</strong> {res.prix} €</p>\r\n               </div>\r\n-              {res.statut !== 'PAYE' && res.statut !== 'ANNULÉE' && (\r\n+              {res.statut !== 'PAYEE' && res.statut !== 'ANNULÉE' && (\r\n                 <button\r\n                   disabled={loadingAnnulation}\r\n                   onClick={() => handleAnnuler(res.id)}\r\n                   className=\"ml-4 px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\r\n@@ -75,56 +75,4 @@\n   );\r\n };\r\n \r\n export default MesReservations;\r\n-import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const MesReservations = () => {\r\n-  const [reservations, setReservations] = useState([]);\r\n-  const [error, setError] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchReservations = async () => {\r\n-      try {\r\n-        const response = await axios.get('/api/reservations/mes-reservations', { withCredentials: true });\r\n-        console.log('Status:', response.status);\r\n-        console.log('Data:', response.data);\r\n-        setReservations(response.data);\r\n-      } catch (err) {\r\n-        console.error('Erreur lors de la récupération :', err);\r\n-        setError(err.message);\r\n-      }\r\n-    };\r\n-\r\n-    fetchReservations();\r\n-  }, []);\r\n-\r\n-  if (error) {\r\n-    return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n-      <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n-      {reservations.length === 0 ? (\r\n-        <p>Aucune réservation trouvée.</p>\r\n-      ) : (\r\n-        <ul className=\"space-y-3\">\r\n-          {reservations.map((res) => (\r\n-            <li key={res.id} className=\"border p-4 rounded-md bg-gray-50\">\r\n-              <p><strong>Professionnel :</strong> {res.nomProfessionnel}</p>\r\n-              <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n-              <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n-              <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n-              <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n-              <p><strong>Statut :</strong> {res.statut}</p>\r\n-              <p><strong>Prix :</strong> {res.prix} €</p>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default MesReservations;\r\n"
                },
                {
                    "date": 1750174929488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                 <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n                 <p><strong>Statut :</strong> {res.statut}</p>\r\n                 <p><strong>Prix :</strong> {res.prix} €</p>\r\n               </div>\r\n-              {res.statut !== 'PAYEE' && res.statut !== 'ANNULÉE' && (\r\n+              {res.statut !== 'PAYE' && res.statut !== 'ANNULÉE' && (\r\n                 <button\r\n                   disabled={loadingAnnulation}\r\n                   onClick={() => handleAnnuler(res.id)}\r\n                   className=\"ml-4 px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\r\n"
                },
                {
                    "date": 1750174963406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       setReservations(prev =>\r\n         prev.map(res => res.id === id ? { ...res, statut: 'ANNULÉE' } : res)\r\n       );\r\n     } catch (err) {\r\n-      alert(\"Erreur lors de l'annulation : \" + err.message);\r\n+      alert(\"Erreur lors de l'annulation : \"  );\r\n     } finally {\r\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1750174980743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       setReservations(prev =>\r\n         prev.map(res => res.id === id ? { ...res, statut: 'ANNULÉE' } : res)\r\n       );\r\n     } catch (err) {\r\n-      alert(\"Erreur lors de l'annulation : \"  );\r\n+      alert(\"Erreur lors de l'annulation : \" + err.message);\r\n     } finally {\r\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1750175054255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,11 @@\n \r\n     try {\r\n       setLoadingAnnulation(true);\r\n       await axios.delete(`/api/reservations/annuler/${id}`, { withCredentials: true });\r\n-      // Retirer la réservation annulée de la liste ou la mettre à jour\r\n+      // Mettre à jour le statut localement\r\n       setReservations(prev =>\r\n-        prev.map(res => res.id === id ? { ...res, statut: 'ANNULÉE' } : res)\r\n+        prev.map(res => res.id === id ? { ...res, statut: 'ANNULEE' } : res)\r\n       );\r\n     } catch (err) {\r\n       alert(\"Erreur lors de l'annulation : \" + err.message);\r\n     } finally {\r\n@@ -57,9 +57,9 @@\n                 <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n                 <p><strong>Statut :</strong> {res.statut}</p>\r\n                 <p><strong>Prix :</strong> {res.prix} €</p>\r\n               </div>\r\n-              {res.statut !== 'PAYE' && res.statut !== 'ANNULÉE' && (\r\n+              {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n                 <button\r\n                   disabled={loadingAnnulation}\r\n                   onClick={() => handleAnnuler(res.id)}\r\n                   className=\"ml-4 px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\r\n"
                },
                {
                    "date": 1750175091907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         <ul className=\"space-y-3\">\r\n           {reservations.map((res) => (\r\n             <li key={res.id} className=\"border p-4 rounded-md bg-gray-50 flex justify-between items-center\">\r\n               <div>\r\n-                <p><strong>Professionnel :</strong> {res.professionnelNom}</p>\r\n+                <p><strong>Docteur:</strong> {res.professionnelNom}</p>\r\n                 <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n                 <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n                 <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n                 <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n"
                },
                {
                    "date": 1750175216631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n+import { Trash2 } from 'lucide-react';\r\n \r\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n@@ -24,9 +25,8 @@\n \r\n     try {\r\n       setLoadingAnnulation(true);\r\n       await axios.delete(`/api/reservations/annuler/${id}`, { withCredentials: true });\r\n-      // Mettre à jour le statut localement\r\n       setReservations(prev =>\r\n         prev.map(res => res.id === id ? { ...res, statut: 'ANNULEE' } : res)\r\n       );\r\n     } catch (err) {\r\n@@ -36,36 +36,53 @@\n     }\r\n   };\r\n \r\n   if (error) {\r\n-    return <div className=\"text-red-500\">Erreur : {error}</div>;\r\n+    return <div className=\"text-red-600 font-semibold p-4\">{error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n-      <h2 className=\"text-xl font-bold mb-4\">Mes Réservations</h2>\r\n+    <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-md rounded-lg\">\r\n+      <h2 className=\"text-2xl font-extrabold mb-6 text-gray-800\">Mes Réservations</h2>\r\n+\r\n       {reservations.length === 0 ? (\r\n-        <p>Aucune réservation trouvée.</p>\r\n+        <p className=\"text-gray-600 text-center\">Aucune réservation trouvée.</p>\r\n       ) : (\r\n-        <ul className=\"space-y-3\">\r\n+        <ul className=\"space-y-6\">\r\n           {reservations.map((res) => (\r\n-            <li key={res.id} className=\"border p-4 rounded-md bg-gray-50 flex justify-between items-center\">\r\n-              <div>\r\n-                <p><strong>Docteur:</strong> {res.professionnelNom}</p>\r\n-                <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n-                <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n-                <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n-                <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n-                <p><strong>Statut :</strong> {res.statut}</p>\r\n-                <p><strong>Prix :</strong> {res.prix} €</p>\r\n+            <li\r\n+              key={res.id}\r\n+              className=\"flex flex-col md:flex-row md:justify-between md:items-center border border-gray-200 rounded-md p-5 bg-gray-50 shadow-sm hover:shadow-md transition-shadow\"\r\n+            >\r\n+              <div className=\"space-y-1 text-gray-700\">\r\n+                <p><span className=\"font-semibold\">Docteur :</span> {res.professionnelNom}</p>\r\n+                <p><span className=\"font-semibold\">Date réservation :</span> {res.dateReservation}</p>\r\n+                <p><span className=\"font-semibold\">Heure réservation :</span> {res.heureReservation || '-'}</p>\r\n+                <p><span className=\"font-semibold\">Jour consultation :</span> {res.jourConsultation || '-'}</p>\r\n+                <p><span className=\"font-semibold\">Heure consultation :</span> {res.heureConsultation || '-'}</p>\r\n+                <p><span className=\"font-semibold\">Statut :</span> \r\n+                  <span className={`ml-1 px-2 py-0.5 rounded-full text-xs font-medium ${\r\n+                    res.statut === 'ANNULEE' ? 'bg-red-100 text-red-700' :\r\n+                    res.statut === 'PAYEE' ? 'bg-green-100 text-green-700' :\r\n+                    res.statut === 'EN_ATTENTE_PAIEMENT' ? 'bg-yellow-100 text-yellow-700' :\r\n+                    'bg-gray-100 text-gray-700'\r\n+                  }`}>\r\n+                    {res.statut}\r\n+                  </span>\r\n+                </p>\r\n+                <p><span className=\"font-semibold\">Prix :</span> {res.prix} €</p>\r\n               </div>\r\n+\r\n               {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n                 <button\r\n+                  onClick={() => handleAnnuler(res.id)}\r\n                   disabled={loadingAnnulation}\r\n-                  onClick={() => handleAnnuler(res.id)}\r\n-                  className=\"ml-4 px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\r\n+                  className=\"mt-4 md:mt-0 flex items-center space-x-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white px-4 py-2 rounded transition\"\r\n+                  title=\"Annuler la réservation\"\r\n+                  aria-label=\"Annuler la réservation\"\r\n                 >\r\n-                  Annuler\r\n+                  <Trash2 size={18} />\r\n+                  <span>Annuler</span>\r\n                 </button>\r\n               )}\r\n             </li>\r\n           ))}\r\n"
                },
                {
                    "date": 1750175299952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,24 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2 } from 'lucide-react';\r\n+import { Trash2, CalendarDays, Clock, User, Tag } from 'lucide-react';\r\n \r\n+const statutEmojis = {\r\n+  EN_ATTENTE: '⌛',\r\n+  EN_ATTENTE_PAIEMENT: '💳',\r\n+  PAYEE: '✅',\r\n+  REFUSE: '❌',\r\n+  ANNULEE: '🚫',\r\n+};\r\n+\r\n+const statutColors = {\r\n+  EN_ATTENTE: 'bg-yellow-100 text-yellow-800',\r\n+  EN_ATTENTE_PAIEMENT: 'bg-orange-100 text-orange-800',\r\n+  PAYEE: 'bg-green-100 text-green-800',\r\n+  REFUSE: 'bg-red-100 text-red-800',\r\n+  ANNULEE: 'bg-gray-200 text-gray-600',\r\n+};\r\n+\r\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n   const [loadingAnnulation, setLoadingAnnulation] = useState(false);\r\n@@ -40,49 +56,72 @@\n     return <div className=\"text-red-600 font-semibold p-4\">{error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-md rounded-lg\">\r\n-      <h2 className=\"text-2xl font-extrabold mb-6 text-gray-800\">Mes Réservations</h2>\r\n+    <div className=\"max-w-5xl mx-auto p-6 bg-white rounded-xl shadow-lg\">\r\n+      <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 text-center\">📅 Mes Réservations</h2>\r\n \r\n       {reservations.length === 0 ? (\r\n-        <p className=\"text-gray-600 text-center\">Aucune réservation trouvée.</p>\r\n+        <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n       ) : (\r\n-        <ul className=\"space-y-6\">\r\n+        <ul className=\"space-y-8\">\r\n           {reservations.map((res) => (\r\n             <li\r\n               key={res.id}\r\n-              className=\"flex flex-col md:flex-row md:justify-between md:items-center border border-gray-200 rounded-md p-5 bg-gray-50 shadow-sm hover:shadow-md transition-shadow\"\r\n+              className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n             >\r\n-              <div className=\"space-y-1 text-gray-700\">\r\n-                <p><span className=\"font-semibold\">Docteur :</span> {res.professionnelNom}</p>\r\n-                <p><span className=\"font-semibold\">Date réservation :</span> {res.dateReservation}</p>\r\n-                <p><span className=\"font-semibold\">Heure réservation :</span> {res.heureReservation || '-'}</p>\r\n-                <p><span className=\"font-semibold\">Jour consultation :</span> {res.jourConsultation || '-'}</p>\r\n-                <p><span className=\"font-semibold\">Heure consultation :</span> {res.heureConsultation || '-'}</p>\r\n-                <p><span className=\"font-semibold\">Statut :</span> \r\n-                  <span className={`ml-1 px-2 py-0.5 rounded-full text-xs font-medium ${\r\n-                    res.statut === 'ANNULEE' ? 'bg-red-100 text-red-700' :\r\n-                    res.statut === 'PAYEE' ? 'bg-green-100 text-green-700' :\r\n-                    res.statut === 'EN_ATTENTE_PAIEMENT' ? 'bg-yellow-100 text-yellow-700' :\r\n-                    'bg-gray-100 text-gray-700'\r\n-                  }`}>\r\n-                    {res.statut}\r\n+              <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n+                <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n+                  <User size={20} className=\"text-indigo-600\" />\r\n+                  Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n+                </p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <CalendarDays size={18} className=\"text-green-600\" />\r\n+                  Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n+                </p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Clock size={18} className=\"text-yellow-600\" />\r\n+                  Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n+                </p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <CalendarDays size={18} className=\"text-green-600\" />\r\n+                  Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n+                </p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Clock size={18} className=\"text-yellow-600\" />\r\n+                  Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n+                </p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Tag size={18} className=\"text-purple-600\" />\r\n+                  Statut : \r\n+                  <span\r\n+                    className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n+                    title={`Statut : ${res.statut}`}\r\n+                  >\r\n+                    {statutEmojis[res.statut] || ''} {res.statut}\r\n                   </span>\r\n                 </p>\r\n-                <p><span className=\"font-semibold\">Prix :</span> {res.prix} €</p>\r\n+\r\n+                <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n+                  Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n+                </p>\r\n               </div>\r\n \r\n               {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n                 <button\r\n                   onClick={() => handleAnnuler(res.id)}\r\n                   disabled={loadingAnnulation}\r\n-                  className=\"mt-4 md:mt-0 flex items-center space-x-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white px-4 py-2 rounded transition\"\r\n+                  className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                  aria-label=\"Annuler la réservation\"\r\n                   title=\"Annuler la réservation\"\r\n-                  aria-label=\"Annuler la réservation\"\r\n                 >\r\n-                  <Trash2 size={18} />\r\n-                  <span>Annuler</span>\r\n+                  <Trash2 size={20} />\r\n+                  Annuler\r\n                 </button>\r\n               )}\r\n             </li>\r\n           ))}\r\n"
                },
                {
                    "date": 1750175390231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n import { Trash2, CalendarDays, Clock, User, Tag } from 'lucide-react';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+import toast, { Toaster } from 'react-hot-toast';\r\n \r\n const statutEmojis = {\r\n   EN_ATTENTE: '⌛',\r\n   EN_ATTENTE_PAIEMENT: '💳',\r\n@@ -31,9 +33,8 @@\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n     };\r\n-\r\n     fetchReservations();\r\n   }, []);\r\n \r\n   const handleAnnuler = async (id) => {\r\n@@ -42,12 +43,13 @@\n     try {\r\n       setLoadingAnnulation(true);\r\n       await axios.delete(`/api/reservations/annuler/${id}`, { withCredentials: true });\r\n       setReservations(prev =>\r\n-        prev.map(res => res.id === id ? { ...res, statut: 'ANNULEE' } : res)\r\n+        prev.map(res => (res.id === id ? { ...res, statut: 'ANNULEE' } : res))\r\n       );\r\n+      toast.success('Réservation annulée avec succès ! 🎉');\r\n     } catch (err) {\r\n-      alert(\"Erreur lors de l'annulation : \" + err.message);\r\n+      toast.error(`Erreur lors de l'annulation : ${err.message}`);\r\n     } finally {\r\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n@@ -57,75 +59,82 @@\n   }\r\n \r\n   return (\r\n     <div className=\"max-w-5xl mx-auto p-6 bg-white rounded-xl shadow-lg\">\r\n+      <Toaster position=\"top-right\" reverseOrder={false} />\r\n       <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 text-center\">📅 Mes Réservations</h2>\r\n \r\n       {reservations.length === 0 ? (\r\n         <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n       ) : (\r\n         <ul className=\"space-y-8\">\r\n-          {reservations.map((res) => (\r\n-            <li\r\n-              key={res.id}\r\n-              className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n-            >\r\n-              <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n-                <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n-                  <User size={20} className=\"text-indigo-600\" />\r\n-                  Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n-                </p>\r\n+          <AnimatePresence>\r\n+            {reservations.map((res) => (\r\n+              <motion.li\r\n+                key={res.id}\r\n+                initial={{ opacity: 0, y: 20 }}\r\n+                animate={{ opacity: 1, y: 0 }}\r\n+                exit={{ opacity: 0, y: -20 }}\r\n+                transition={{ duration: 0.3 }}\r\n+                className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n+              >\r\n+                <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n+                  <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n+                    <User size={20} className=\"text-indigo-600\" />\r\n+                    Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <CalendarDays size={18} className=\"text-green-600\" />\r\n-                  Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n-                </p>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                    <CalendarDays size={18} className=\"text-green-600\" />\r\n+                    Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Clock size={18} className=\"text-yellow-600\" />\r\n-                  Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n-                </p>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                    <Clock size={18} className=\"text-yellow-600\" />\r\n+                    Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <CalendarDays size={18} className=\"text-green-600\" />\r\n-                  Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n-                </p>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                    <CalendarDays size={18} className=\"text-green-600\" />\r\n+                    Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Clock size={18} className=\"text-yellow-600\" />\r\n-                  Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n-                </p>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                    <Clock size={18} className=\"text-yellow-600\" />\r\n+                    Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Tag size={18} className=\"text-purple-600\" />\r\n-                  Statut : \r\n-                  <span\r\n-                    className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n-                    title={`Statut : ${res.statut}`}\r\n-                  >\r\n-                    {statutEmojis[res.statut] || ''} {res.statut}\r\n-                  </span>\r\n-                </p>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                    <Tag size={18} className=\"text-purple-600\" />\r\n+                    Statut :{' '}\r\n+                    <span\r\n+                      className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n+                      title={`Statut : ${res.statut}`}\r\n+                    >\r\n+                      {statutEmojis[res.statut] || ''} {res.statut}\r\n+                    </span>\r\n+                  </p>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n-                  Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n-                </p>\r\n-              </div>\r\n+                  <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n+                    Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n+                  </p>\r\n+                </div>\r\n \r\n-              {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                <button\r\n-                  onClick={() => handleAnnuler(res.id)}\r\n-                  disabled={loadingAnnulation}\r\n-                  className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n-                  aria-label=\"Annuler la réservation\"\r\n-                  title=\"Annuler la réservation\"\r\n-                >\r\n-                  <Trash2 size={20} />\r\n-                  Annuler\r\n-                </button>\r\n-              )}\r\n-            </li>\r\n-          ))}\r\n+                {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n+                  <button\r\n+                    onClick={() => handleAnnuler(res.id)}\r\n+                    disabled={loadingAnnulation}\r\n+                    className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                    aria-label=\"Annuler la réservation\"\r\n+                    title=\"Annuler la réservation\"\r\n+                  >\r\n+                    <Trash2 size={20} />\r\n+                    Annuler\r\n+                  </button>\r\n+                )}\r\n+              </motion.li>\r\n+            ))}\r\n+          </AnimatePresence>\r\n         </ul>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1750175465436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,7 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n import { Trash2, CalendarDays, Clock, User, Tag } from 'lucide-react';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n-import toast, { Toaster } from 'react-hot-toast';\r\n \r\n const statutEmojis = {\r\n   EN_ATTENTE: '⌛',\r\n   EN_ATTENTE_PAIEMENT: '💳',\r\n@@ -33,8 +31,9 @@\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n     };\r\n+\r\n     fetchReservations();\r\n   }, []);\r\n \r\n   const handleAnnuler = async (id) => {\r\n@@ -43,13 +42,12 @@\n     try {\r\n       setLoadingAnnulation(true);\r\n       await axios.delete(`/api/reservations/annuler/${id}`, { withCredentials: true });\r\n       setReservations(prev =>\r\n-        prev.map(res => (res.id === id ? { ...res, statut: 'ANNULEE' } : res))\r\n+        prev.map(res => res.id === id ? { ...res, statut: 'ANNULEE' } : res)\r\n       );\r\n-      toast.success('Réservation annulée avec succès ! 🎉');\r\n     } catch (err) {\r\n-      toast.error(`Erreur lors de l'annulation : ${err.message}`);\r\n+      alert(\"Erreur lors de l'annulation : \" + err.message);\r\n     } finally {\r\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n@@ -59,82 +57,75 @@\n   }\r\n \r\n   return (\r\n     <div className=\"max-w-5xl mx-auto p-6 bg-white rounded-xl shadow-lg\">\r\n-      <Toaster position=\"top-right\" reverseOrder={false} />\r\n       <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 text-center\">📅 Mes Réservations</h2>\r\n \r\n       {reservations.length === 0 ? (\r\n         <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n       ) : (\r\n         <ul className=\"space-y-8\">\r\n-          <AnimatePresence>\r\n-            {reservations.map((res) => (\r\n-              <motion.li\r\n-                key={res.id}\r\n-                initial={{ opacity: 0, y: 20 }}\r\n-                animate={{ opacity: 1, y: 0 }}\r\n-                exit={{ opacity: 0, y: -20 }}\r\n-                transition={{ duration: 0.3 }}\r\n-                className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n-              >\r\n-                <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n-                  <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n-                    <User size={20} className=\"text-indigo-600\" />\r\n-                    Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n-                  </p>\r\n+          {reservations.map((res) => (\r\n+            <li\r\n+              key={res.id}\r\n+              className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n+            >\r\n+              <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n+                <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n+                  <User size={20} className=\"text-indigo-600\" />\r\n+                  Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                    <CalendarDays size={18} className=\"text-green-600\" />\r\n-                    Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n-                  </p>\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <CalendarDays size={18} className=\"text-green-600\" />\r\n+                  Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                    <Clock size={18} className=\"text-yellow-600\" />\r\n-                    Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n-                  </p>\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Clock size={18} className=\"text-yellow-600\" />\r\n+                  Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                    <CalendarDays size={18} className=\"text-green-600\" />\r\n-                    Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n-                  </p>\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <CalendarDays size={18} className=\"text-green-600\" />\r\n+                  Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                    <Clock size={18} className=\"text-yellow-600\" />\r\n-                    Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n-                  </p>\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Clock size={18} className=\"text-yellow-600\" />\r\n+                  Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                    <Tag size={18} className=\"text-purple-600\" />\r\n-                    Statut :{' '}\r\n-                    <span\r\n-                      className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n-                      title={`Statut : ${res.statut}`}\r\n-                    >\r\n-                      {statutEmojis[res.statut] || ''} {res.statut}\r\n-                    </span>\r\n-                  </p>\r\n+                <p className=\"flex items-center gap-2 text-gray-700\">\r\n+                  <Tag size={18} className=\"text-purple-600\" />\r\n+                  Statut : \r\n+                  <span\r\n+                    className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n+                    title={`Statut : ${res.statut}`}\r\n+                  >\r\n+                    {statutEmojis[res.statut] || ''} {res.statut}\r\n+                  </span>\r\n+                </p>\r\n \r\n-                  <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n-                    Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n-                  </p>\r\n-                </div>\r\n+                <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n+                  Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n+                </p>\r\n+              </div>\r\n \r\n-                {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                  <button\r\n-                    onClick={() => handleAnnuler(res.id)}\r\n-                    disabled={loadingAnnulation}\r\n-                    className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n-                    aria-label=\"Annuler la réservation\"\r\n-                    title=\"Annuler la réservation\"\r\n-                  >\r\n-                    <Trash2 size={20} />\r\n-                    Annuler\r\n-                  </button>\r\n-                )}\r\n-              </motion.li>\r\n-            ))}\r\n-          </AnimatePresence>\r\n+              {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n+                <button\r\n+                  onClick={() => handleAnnuler(res.id)}\r\n+                  disabled={loadingAnnulation}\r\n+                  className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                  aria-label=\"Annuler la réservation\"\r\n+                  title=\"Annuler la réservation\"\r\n+                >\r\n+                  <Trash2 size={20} />\r\n+                  Annuler\r\n+                </button>\r\n+              )}\r\n+            </li>\r\n+          ))}\r\n         </ul>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1750175596357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,35 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2, CalendarDays, Clock, User, Tag } from 'lucide-react';\r\n+import { Trash2, CalendarCheck, Clock, User, Euro, Search } from 'lucide-react';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n \r\n-const statutEmojis = {\r\n-  EN_ATTENTE: '⌛',\r\n-  EN_ATTENTE_PAIEMENT: '💳',\r\n-  PAYEE: '✅',\r\n-  REFUSE: '❌',\r\n-  ANNULEE: '🚫',\r\n-};\r\n+const AnimatedButton = ({ children, ...props }) => (\r\n+  <motion.button\r\n+    whileHover={{ scale: 1.05, boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}\r\n+    whileTap={{ scale: 0.95 }}\r\n+    transition={{ type: 'spring', stiffness: 300 }}\r\n+    {...props}\r\n+  >\r\n+    {children}\r\n+  </motion.button>\r\n+);\r\n \r\n-const statutColors = {\r\n-  EN_ATTENTE: 'bg-yellow-100 text-yellow-800',\r\n-  EN_ATTENTE_PAIEMENT: 'bg-orange-100 text-orange-800',\r\n-  PAYEE: 'bg-green-100 text-green-800',\r\n-  REFUSE: 'bg-red-100 text-red-800',\r\n-  ANNULEE: 'bg-gray-200 text-gray-600',\r\n-};\r\n+const STATUTS = [\r\n+  '',\r\n+  'EN_ATTENTE',\r\n+  'EN_ATTENTE_PAIEMENT',\r\n+  'PAYEE',\r\n+  'REFUSE',\r\n+  'ANNULEE',\r\n+];\r\n \r\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n   const [loadingAnnulation, setLoadingAnnulation] = useState(false);\r\n+  const [searchTerm, setSearchTerm] = useState('');\r\n+  const [statutFilter, setStatutFilter] = useState('');\r\n \r\n   useEffect(() => {\r\n     const fetchReservations = async () => {\r\n       try {\r\n@@ -51,83 +58,125 @@\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n \r\n+  // Filtre combiné sur nom professionnel et statut\r\n+  const filteredReservations = reservations.filter(res => {\r\n+    const nomOk = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n+    const statutOk = statutFilter === '' || res.statut === statutFilter;\r\n+    return nomOk && statutOk;\r\n+  });\r\n+\r\n   if (error) {\r\n-    return <div className=\"text-red-600 font-semibold p-4\">{error}</div>;\r\n+    return <div className=\"text-red-600 text-center mt-6 font-semibold\">❌ Erreur : {error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"max-w-5xl mx-auto p-6 bg-white rounded-xl shadow-lg\">\r\n-      <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 text-center\">📅 Mes Réservations</h2>\r\n+    <div className=\"min-h-screen flex items-start justify-center p-10 bg-indigo-50\">\r\n+      {/* Colonne recherche */}\r\n+      <aside className=\"w-64 mr-10 sticky top-24 self-start bg-white p-6 rounded-xl shadow-md h-fit\">\r\n+        <h3 className=\"text-xl font-bold mb-4 text-indigo-700 flex items-center gap-2\">\r\n+          <Search size={24} /> Filtres\r\n+        </h3>\r\n+        <div className=\"mb-6\">\r\n+          <label htmlFor=\"search\" className=\"block mb-1 font-semibold text-gray-700\">\r\n+            Rechercher un professionnel\r\n+          </label>\r\n+          <input\r\n+            id=\"search\"\r\n+            type=\"search\"\r\n+            placeholder=\"Nom du professionnel\"\r\n+            value={searchTerm}\r\n+            onChange={(e) => setSearchTerm(e.target.value)}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+          />\r\n+        </div>\r\n+        <div>\r\n+          <label htmlFor=\"statut\" className=\"block mb-1 font-semibold text-gray-700\">\r\n+            Filtrer par statut\r\n+          </label>\r\n+          <select\r\n+            id=\"statut\"\r\n+            value={statutFilter}\r\n+            onChange={(e) => setStatutFilter(e.target.value)}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+          >\r\n+            {STATUTS.map(st => (\r\n+              <option key={st} value={st}>\r\n+                {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n+              </option>\r\n+            ))}\r\n+          </select>\r\n+        </div>\r\n+      </aside>\r\n \r\n-      {reservations.length === 0 ? (\r\n-        <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n-      ) : (\r\n-        <ul className=\"space-y-8\">\r\n-          {reservations.map((res) => (\r\n-            <li\r\n-              key={res.id}\r\n-              className=\"flex flex-col md:flex-row justify-between items-start md:items-center bg-gray-50 rounded-2xl p-6 shadow-md hover:shadow-xl transition-shadow duration-300\"\r\n-            >\r\n-              <div className=\"space-y-2 text-gray-800 w-full md:w-4/5\">\r\n-                <p className=\"text-lg font-semibold flex items-center gap-2\">\r\n-                  <User size={20} className=\"text-indigo-600\" />\r\n-                  Docteur : <span className=\"ml-1 text-indigo-900\">{res.professionnelNom}</span>\r\n-                </p>\r\n+      {/* Liste réservations */}\r\n+      <main className=\"flex-1 max-w-4xl\">\r\n+        <h2 className=\"text-3xl font-extrabold mb-6 text-indigo-700 flex items-center gap-3\">\r\n+          <CalendarCheck size={36} /> Mes Réservations\r\n+        </h2>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <CalendarDays size={18} className=\"text-green-600\" />\r\n-                  Date de réservation : <span className=\"font-medium\">{res.dateReservation}</span>\r\n-                </p>\r\n+        {filteredReservations.length === 0 ? (\r\n+          <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n+        ) : (\r\n+          <ul className=\"space-y-8\">\r\n+            <AnimatePresence>\r\n+              {filteredReservations.map((res) => (\r\n+                <motion.li\r\n+                  key={res.id}\r\n+                  initial={{ opacity: 0, y: 15 }}\r\n+                  animate={{ opacity: 1, y: 0 }}\r\n+                  exit={{ opacity: 0, y: -15 }}\r\n+                  transition={{ duration: 0.3 }}\r\n+                  className=\"border border-indigo-200 rounded-xl bg-indigo-50 p-6 flex flex-col md:flex-row justify-between items-start md:items-center gap-6 shadow-md\"\r\n+                >\r\n+                  <div className=\"space-y-2 md:w-3/4\">\r\n+                    <p className=\"text-lg font-semibold text-indigo-900 flex items-center gap-2\">\r\n+                      <User size={20} /> Docteur : {res.professionnelNom}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <CalendarCheck size={18} /> Date de réservation : <time dateTime={res.dateReservation}>{res.dateReservation}</time>\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <Clock size={18} /> Heure de réservation : {res.heureReservation || 'Non précisée'}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <CalendarCheck size={18} /> Jour de consultation : {res.jourConsultation || 'Non précisé'}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <Clock size={18} /> Heure de consultation : {res.heureConsultation || 'Non précisée'}\r\n+                    </p>\r\n+                    <p className=\"text-indigo-800 font-semibold\">\r\n+                      Statut : <span className={\r\n+                        res.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                        res.statut === 'PAYEE' ? 'text-green-600' :\r\n+                        res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n+                        'text-indigo-700'\r\n+                      }>{res.statut.replace('_', ' ')}</span>\r\n+                    </p>\r\n+                    <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n+                      <Euro size={16} /> {res.prix} €\r\n+                    </p>\r\n+                  </div>\r\n \r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Clock size={18} className=\"text-yellow-600\" />\r\n-                  Heure réservation : <span className=\"font-medium\">{res.heureReservation || '-'}</span>\r\n-                </p>\r\n-\r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <CalendarDays size={18} className=\"text-green-600\" />\r\n-                  Jour consultation : <span className=\"font-medium\">{res.jourConsultation || '-'}</span>\r\n-                </p>\r\n-\r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Clock size={18} className=\"text-yellow-600\" />\r\n-                  Heure consultation : <span className=\"font-medium\">{res.heureConsultation || '-'}</span>\r\n-                </p>\r\n-\r\n-                <p className=\"flex items-center gap-2 text-gray-700\">\r\n-                  <Tag size={18} className=\"text-purple-600\" />\r\n-                  Statut : \r\n-                  <span\r\n-                    className={`ml-2 px-3 py-1 rounded-full font-semibold text-sm ${statutColors[res.statut] || 'bg-gray-100 text-gray-700'}`}\r\n-                    title={`Statut : ${res.statut}`}\r\n-                  >\r\n-                    {statutEmojis[res.statut] || ''} {res.statut}\r\n-                  </span>\r\n-                </p>\r\n-\r\n-                <p className=\"flex items-center gap-2 text-gray-700 text-lg font-semibold\">\r\n-                  Prix : <span className=\"text-indigo-700\">{res.prix} €</span> 💶\r\n-                </p>\r\n-              </div>\r\n-\r\n-              {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                <button\r\n-                  onClick={() => handleAnnuler(res.id)}\r\n-                  disabled={loadingAnnulation}\r\n-                  className=\"mt-6 md:mt-0 inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n-                  aria-label=\"Annuler la réservation\"\r\n-                  title=\"Annuler la réservation\"\r\n-                >\r\n-                  <Trash2 size={20} />\r\n-                  Annuler\r\n-                </button>\r\n-              )}\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n+                  {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n+                    <AnimatedButton\r\n+                      disabled={loadingAnnulation}\r\n+                      onClick={() => handleAnnuler(res.id)}\r\n+                      className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                      aria-label=\"Annuler la réservation\"\r\n+                      title=\"Annuler la réservation\"\r\n+                    >\r\n+                      <Trash2 size={20} />\r\n+                      Annuler\r\n+                    </AnimatedButton>\r\n+                  )}\r\n+                </motion.li>\r\n+              ))}\r\n+            </AnimatePresence>\r\n+          </ul>\r\n+        )}\r\n+      </main>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1750175676335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2, CalendarCheck, Clock, User, Euro, Search } from 'lucide-react';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n+import { Trash2, Search } from 'lucide-react';\r\n \r\n-const AnimatedButton = ({ children, ...props }) => (\r\n-  <motion.button\r\n-    whileHover={{ scale: 1.05, boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}\r\n-    whileTap={{ scale: 0.95 }}\r\n-    transition={{ type: 'spring', stiffness: 300 }}\r\n-    {...props}\r\n-  >\r\n-    {children}\r\n-  </motion.button>\r\n-);\r\n-\r\n const STATUTS = [\r\n   '',\r\n   'EN_ATTENTE',\r\n   'EN_ATTENTE_PAIEMENT',\r\n@@ -58,125 +46,105 @@\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n \r\n-  // Filtre combiné sur nom professionnel et statut\r\n+  // Filtrer par nom professionnel + statut\r\n   const filteredReservations = reservations.filter(res => {\r\n     const nomOk = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n     const statutOk = statutFilter === '' || res.statut === statutFilter;\r\n     return nomOk && statutOk;\r\n   });\r\n \r\n   if (error) {\r\n-    return <div className=\"text-red-600 text-center mt-6 font-semibold\">❌ Erreur : {error}</div>;\r\n+    return <div className=\"text-red-500 text-center mt-6\">Erreur : {error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"min-h-screen flex items-start justify-center p-10 bg-indigo-50\">\r\n-      {/* Colonne recherche */}\r\n-      <aside className=\"w-64 mr-10 sticky top-24 self-start bg-white p-6 rounded-xl shadow-md h-fit\">\r\n-        <h3 className=\"text-xl font-bold mb-4 text-indigo-700 flex items-center gap-2\">\r\n-          <Search size={24} /> Filtres\r\n-        </h3>\r\n-        <div className=\"mb-6\">\r\n-          <label htmlFor=\"search\" className=\"block mb-1 font-semibold text-gray-700\">\r\n-            Rechercher un professionnel\r\n-          </label>\r\n-          <input\r\n-            id=\"search\"\r\n-            type=\"search\"\r\n-            placeholder=\"Nom du professionnel\"\r\n-            value={searchTerm}\r\n-            onChange={(e) => setSearchTerm(e.target.value)}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-          />\r\n-        </div>\r\n-        <div>\r\n-          <label htmlFor=\"statut\" className=\"block mb-1 font-semibold text-gray-700\">\r\n-            Filtrer par statut\r\n-          </label>\r\n-          <select\r\n-            id=\"statut\"\r\n-            value={statutFilter}\r\n-            onChange={(e) => setStatutFilter(e.target.value)}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-          >\r\n-            {STATUTS.map(st => (\r\n-              <option key={st} value={st}>\r\n-                {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n-              </option>\r\n-            ))}\r\n-          </select>\r\n-        </div>\r\n-      </aside>\r\n+    <div className=\"min-h-screen bg-gray-100 p-8 flex justify-center\">\r\n+      {/* Conteneur principal */}\r\n+      <div className=\"flex w-full max-w-5xl gap-10\">\r\n+        {/* Recherche - filtre */}\r\n+        <aside className=\"w-64 bg-white p-6 rounded shadow\">\r\n+          <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n+            <Search size={20} /> Filtres\r\n+          </h3>\r\n+          <div className=\"mb-6\">\r\n+            <label htmlFor=\"search\" className=\"block mb-1 font-medium\">\r\n+              Rechercher un professionnel\r\n+            </label>\r\n+            <input\r\n+              id=\"search\"\r\n+              type=\"text\"\r\n+              placeholder=\"Nom du professionnel\"\r\n+              value={searchTerm}\r\n+              onChange={(e) => setSearchTerm(e.target.value)}\r\n+              className=\"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label htmlFor=\"statut\" className=\"block mb-1 font-medium\">\r\n+              Filtrer par statut\r\n+            </label>\r\n+            <select\r\n+              id=\"statut\"\r\n+              value={statutFilter}\r\n+              onChange={(e) => setStatutFilter(e.target.value)}\r\n+              className=\"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+            >\r\n+              {STATUTS.map(st => (\r\n+                <option key={st} value={st}>\r\n+                  {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+        </aside>\r\n \r\n-      {/* Liste réservations */}\r\n-      <main className=\"flex-1 max-w-4xl\">\r\n-        <h2 className=\"text-3xl font-extrabold mb-6 text-indigo-700 flex items-center gap-3\">\r\n-          <CalendarCheck size={36} /> Mes Réservations\r\n-        </h2>\r\n+        {/* Liste réservations */}\r\n+        <main className=\"flex-1\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-gray-700\">Mes Réservations</h2>\r\n \r\n-        {filteredReservations.length === 0 ? (\r\n-          <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n-        ) : (\r\n-          <ul className=\"space-y-8\">\r\n-            <AnimatePresence>\r\n-              {filteredReservations.map((res) => (\r\n-                <motion.li\r\n-                  key={res.id}\r\n-                  initial={{ opacity: 0, y: 15 }}\r\n-                  animate={{ opacity: 1, y: 0 }}\r\n-                  exit={{ opacity: 0, y: -15 }}\r\n-                  transition={{ duration: 0.3 }}\r\n-                  className=\"border border-indigo-200 rounded-xl bg-indigo-50 p-6 flex flex-col md:flex-row justify-between items-start md:items-center gap-6 shadow-md\"\r\n-                >\r\n-                  <div className=\"space-y-2 md:w-3/4\">\r\n-                    <p className=\"text-lg font-semibold text-indigo-900 flex items-center gap-2\">\r\n-                      <User size={20} /> Docteur : {res.professionnelNom}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <CalendarCheck size={18} /> Date de réservation : <time dateTime={res.dateReservation}>{res.dateReservation}</time>\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <Clock size={18} /> Heure de réservation : {res.heureReservation || 'Non précisée'}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <CalendarCheck size={18} /> Jour de consultation : {res.jourConsultation || 'Non précisé'}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <Clock size={18} /> Heure de consultation : {res.heureConsultation || 'Non précisée'}\r\n-                    </p>\r\n-                    <p className=\"text-indigo-800 font-semibold\">\r\n-                      Statut : <span className={\r\n+          {filteredReservations.length === 0 ? (\r\n+            <p className=\"text-gray-500 text-center\">Aucune réservation trouvée.</p>\r\n+          ) : (\r\n+            <ul className=\"space-y-5\">\r\n+              {filteredReservations.map(res => (\r\n+                <li key={res.id} className=\"bg-white rounded shadow p-5 flex justify-between items-center\">\r\n+                  <div>\r\n+                    <p><strong>Docteur :</strong> {res.professionnelNom}</p>\r\n+                    <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n+                    <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n+                    <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n+                    <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n+                    <p>\r\n+                      <strong>Statut :</strong> <span className={\r\n                         res.statut === 'ANNULEE' ? 'text-red-600' :\r\n                         res.statut === 'PAYEE' ? 'text-green-600' :\r\n                         res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n-                        'text-indigo-700'\r\n+                        'text-gray-800'\r\n                       }>{res.statut.replace('_', ' ')}</span>\r\n                     </p>\r\n-                    <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n-                      <Euro size={16} /> {res.prix} €\r\n-                    </p>\r\n+                    <p><strong>Prix :</strong> {res.prix} €</p>\r\n                   </div>\r\n \r\n                   {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                    <AnimatedButton\r\n+                    <button\r\n                       disabled={loadingAnnulation}\r\n                       onClick={() => handleAnnuler(res.id)}\r\n-                      className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                      className=\"ml-4 flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 text-white font-semibold rounded px-4 py-2\"\r\n                       aria-label=\"Annuler la réservation\"\r\n                       title=\"Annuler la réservation\"\r\n                     >\r\n-                      <Trash2 size={20} />\r\n+                      <Trash2 size={18} />\r\n                       Annuler\r\n-                    </AnimatedButton>\r\n+                    </button>\r\n                   )}\r\n-                </motion.li>\r\n+                </li>\r\n               ))}\r\n-            </AnimatePresence>\r\n-          </ul>\r\n-        )}\r\n-      </main>\r\n+            </ul>\r\n+          )}\r\n+        </main>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1750175711000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,20 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2, Search } from 'lucide-react';\r\n+import { Trash2, CalendarCheck, Clock, User, Euro, Search } from 'lucide-react';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n \r\n+const AnimatedButton = ({ children, ...props }) => (\r\n+  <motion.button\r\n+    whileHover={{ scale: 1.05, boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}\r\n+    whileTap={{ scale: 0.95 }}\r\n+    transition={{ type: 'spring', stiffness: 300 }}\r\n+    {...props}\r\n+  >\r\n+    {children}\r\n+  </motion.button>\r\n+);\r\n+\r\n const STATUTS = [\r\n   '',\r\n   'EN_ATTENTE',\r\n   'EN_ATTENTE_PAIEMENT',\r\n@@ -46,105 +58,125 @@\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n \r\n-  // Filtrer par nom professionnel + statut\r\n+  // Filtre combiné sur nom professionnel et statut\r\n   const filteredReservations = reservations.filter(res => {\r\n     const nomOk = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n     const statutOk = statutFilter === '' || res.statut === statutFilter;\r\n     return nomOk && statutOk;\r\n   });\r\n \r\n   if (error) {\r\n-    return <div className=\"text-red-500 text-center mt-6\">Erreur : {error}</div>;\r\n+    return <div className=\"text-red-600 text-center mt-6 font-semibold\">❌ Erreur : {error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-gray-100 p-8 flex justify-center\">\r\n-      {/* Conteneur principal */}\r\n-      <div className=\"flex w-full max-w-5xl gap-10\">\r\n-        {/* Recherche - filtre */}\r\n-        <aside className=\"w-64 bg-white p-6 rounded shadow\">\r\n-          <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n-            <Search size={20} /> Filtres\r\n-          </h3>\r\n-          <div className=\"mb-6\">\r\n-            <label htmlFor=\"search\" className=\"block mb-1 font-medium\">\r\n-              Rechercher un professionnel\r\n-            </label>\r\n-            <input\r\n-              id=\"search\"\r\n-              type=\"text\"\r\n-              placeholder=\"Nom du professionnel\"\r\n-              value={searchTerm}\r\n-              onChange={(e) => setSearchTerm(e.target.value)}\r\n-              className=\"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label htmlFor=\"statut\" className=\"block mb-1 font-medium\">\r\n-              Filtrer par statut\r\n-            </label>\r\n-            <select\r\n-              id=\"statut\"\r\n-              value={statutFilter}\r\n-              onChange={(e) => setStatutFilter(e.target.value)}\r\n-              className=\"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-            >\r\n-              {STATUTS.map(st => (\r\n-                <option key={st} value={st}>\r\n-                  {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-        </aside>\r\n+    <div className=\"min-h-screen flex items-start justify-center p-10 bg-indigo-50\">\r\n+      {/* Colonne recherche */}\r\n+      <aside className=\"w-64 mr-10 sticky top-24 self-start bg-white p-6 rounded-xl shadow-md h-fit\">\r\n+        <h3 className=\"text-xl font-bold mb-4 text-indigo-700 flex items-center gap-2\">\r\n+          <Search size={24} /> Filtres\r\n+        </h3>\r\n+        <div className=\"mb-6\">\r\n+          <label htmlFor=\"search\" className=\"block mb-1 font-semibold text-gray-700\">\r\n+            Rechercher un professionnel\r\n+          </label>\r\n+          <input\r\n+            id=\"search\"\r\n+            type=\"search\"\r\n+            placeholder=\"Nom du professionnel\"\r\n+            value={searchTerm}\r\n+            onChange={(e) => setSearchTerm(e.target.value)}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+          />\r\n+        </div>\r\n+        <div>\r\n+          <label htmlFor=\"statut\" className=\"block mb-1 font-semibold text-gray-700\">\r\n+            Filtrer par statut\r\n+          </label>\r\n+          <select\r\n+            id=\"statut\"\r\n+            value={statutFilter}\r\n+            onChange={(e) => setStatutFilter(e.target.value)}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n+          >\r\n+            {STATUTS.map(st => (\r\n+              <option key={st} value={st}>\r\n+                {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n+              </option>\r\n+            ))}\r\n+          </select>\r\n+        </div>\r\n+      </aside>\r\n \r\n-        {/* Liste réservations */}\r\n-        <main className=\"flex-1\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-gray-700\">Mes Réservations</h2>\r\n+      {/* Liste réservations */}\r\n+      <main className=\"flex-1 max-w-4xl\">\r\n+        <h2 className=\"text-3xl font-extrabold mb-6 text-indigo-700 flex items-center gap-3\">\r\n+          <CalendarCheck size={36} /> Mes Réservations\r\n+        </h2>\r\n \r\n-          {filteredReservations.length === 0 ? (\r\n-            <p className=\"text-gray-500 text-center\">Aucune réservation trouvée.</p>\r\n-          ) : (\r\n-            <ul className=\"space-y-5\">\r\n-              {filteredReservations.map(res => (\r\n-                <li key={res.id} className=\"bg-white rounded shadow p-5 flex justify-between items-center\">\r\n-                  <div>\r\n-                    <p><strong>Docteur :</strong> {res.professionnelNom}</p>\r\n-                    <p><strong>Date de réservation :</strong> {res.dateReservation}</p>\r\n-                    <p><strong>Heure de réservation :</strong> {res.heureReservation}</p>\r\n-                    <p><strong>Jour de consultation :</strong> {res.jourConsultation}</p>\r\n-                    <p><strong>Heure de consultation :</strong> {res.heureConsultation}</p>\r\n-                    <p>\r\n-                      <strong>Statut :</strong> <span className={\r\n+        {filteredReservations.length === 0 ? (\r\n+          <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n+        ) : (\r\n+          <ul className=\"space-y-8\">\r\n+            <AnimatePresence>\r\n+              {filteredReservations.map((res) => (\r\n+                <motion.li\r\n+                  key={res.id}\r\n+                  initial={{ opacity: 0, y: 15 }}\r\n+                  animate={{ opacity: 1, y: 0 }}\r\n+                  exit={{ opacity: 0, y: -15 }}\r\n+                  transition={{ duration: 0.3 }}\r\n+                  className=\"border border-indigo-200 rounded-xl bg-indigo-50 p-6 flex flex-col md:flex-row justify-between items-start md:items-center gap-6 shadow-md\"\r\n+                >\r\n+                  <div className=\"space-y-2 md:w-3/4\">\r\n+                    <p className=\"text-lg font-semibold text-indigo-900 flex items-center gap-2\">\r\n+                      <User size={20} /> Docteur : {res.professionnelNom}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <CalendarCheck size={18} /> Date de réservation : <time dateTime={res.dateReservation}>{res.dateReservation}</time>\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <Clock size={18} /> Heure de réservation : {res.heureReservation || 'Non précisée'}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <CalendarCheck size={18} /> Jour de consultation : {res.jourConsultation || 'Non précisé'}\r\n+                    </p>\r\n+                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                      <Clock size={18} /> Heure de consultation : {res.heureConsultation || 'Non précisée'}\r\n+                    </p>\r\n+                    <p className=\"text-indigo-800 font-semibold\">\r\n+                      Statut : <span className={\r\n                         res.statut === 'ANNULEE' ? 'text-red-600' :\r\n                         res.statut === 'PAYEE' ? 'text-green-600' :\r\n                         res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n-                        'text-gray-800'\r\n+                        'text-indigo-700'\r\n                       }>{res.statut.replace('_', ' ')}</span>\r\n                     </p>\r\n-                    <p><strong>Prix :</strong> {res.prix} €</p>\r\n+                    <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n+                      <Euro size={16} /> {res.prix} €\r\n+                    </p>\r\n                   </div>\r\n \r\n                   {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                    <button\r\n+                    <AnimatedButton\r\n                       disabled={loadingAnnulation}\r\n                       onClick={() => handleAnnuler(res.id)}\r\n-                      className=\"ml-4 flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 text-white font-semibold rounded px-4 py-2\"\r\n+                      className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n                       aria-label=\"Annuler la réservation\"\r\n                       title=\"Annuler la réservation\"\r\n                     >\r\n-                      <Trash2 size={18} />\r\n+                      <Trash2 size={20} />\r\n                       Annuler\r\n-                    </button>\r\n+                    </AnimatedButton>\r\n                   )}\r\n-                </li>\r\n+                </motion.li>\r\n               ))}\r\n-            </ul>\r\n-          )}\r\n-        </main>\r\n-      </div>\r\n+            </AnimatePresence>\r\n+          </ul>\r\n+        )}\r\n+      </main>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1750175751402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2, CalendarCheck, Clock, User, Euro, Search } from 'lucide-react';\r\n+import { Trash2, CalendarCheck, Clock, User, Euro } from 'lucide-react';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n \r\n+// Bouton animé avec framer-motion\r\n const AnimatedButton = ({ children, ...props }) => (\r\n   <motion.button\r\n     whileHover={{ scale: 1.05, boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}\r\n     whileTap={{ scale: 0.95 }}\r\n@@ -13,23 +14,13 @@\n     {children}\r\n   </motion.button>\r\n );\r\n \r\n-const STATUTS = [\r\n-  '',\r\n-  'EN_ATTENTE',\r\n-  'EN_ATTENTE_PAIEMENT',\r\n-  'PAYEE',\r\n-  'REFUSE',\r\n-  'ANNULEE',\r\n-];\r\n-\r\n const MesReservations = () => {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [error, setError] = useState(null);\r\n   const [loadingAnnulation, setLoadingAnnulation] = useState(false);\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n-  const [statutFilter, setStatutFilter] = useState('');\r\n \r\n   useEffect(() => {\r\n     const fetchReservations = async () => {\r\n       try {\r\n@@ -58,125 +49,91 @@\n       setLoadingAnnulation(false);\r\n     }\r\n   };\r\n \r\n-  // Filtre combiné sur nom professionnel et statut\r\n-  const filteredReservations = reservations.filter(res => {\r\n-    const nomOk = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n-    const statutOk = statutFilter === '' || res.statut === statutFilter;\r\n-    return nomOk && statutOk;\r\n-  });\r\n+  const filteredReservations = reservations.filter(res =>\r\n+    res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase())\r\n+  );\r\n \r\n   if (error) {\r\n     return <div className=\"text-red-600 text-center mt-6 font-semibold\">❌ Erreur : {error}</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"min-h-screen flex items-start justify-center p-10 bg-indigo-50\">\r\n-      {/* Colonne recherche */}\r\n-      <aside className=\"w-64 mr-10 sticky top-24 self-start bg-white p-6 rounded-xl shadow-md h-fit\">\r\n-        <h3 className=\"text-xl font-bold mb-4 text-indigo-700 flex items-center gap-2\">\r\n-          <Search size={24} /> Filtres\r\n-        </h3>\r\n-        <div className=\"mb-6\">\r\n-          <label htmlFor=\"search\" className=\"block mb-1 font-semibold text-gray-700\">\r\n-            Rechercher un professionnel\r\n-          </label>\r\n-          <input\r\n-            id=\"search\"\r\n-            type=\"search\"\r\n-            placeholder=\"Nom du professionnel\"\r\n-            value={searchTerm}\r\n-            onChange={(e) => setSearchTerm(e.target.value)}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-          />\r\n-        </div>\r\n-        <div>\r\n-          <label htmlFor=\"statut\" className=\"block mb-1 font-semibold text-gray-700\">\r\n-            Filtrer par statut\r\n-          </label>\r\n-          <select\r\n-            id=\"statut\"\r\n-            value={statutFilter}\r\n-            onChange={(e) => setStatutFilter(e.target.value)}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n-          >\r\n-            {STATUTS.map(st => (\r\n-              <option key={st} value={st}>\r\n-                {st === '' ? 'Tous' : st.replace('_', ' ')}\r\n-              </option>\r\n-            ))}\r\n-          </select>\r\n-        </div>\r\n-      </aside>\r\n+    <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-xl mt-10\">\r\n+      <h2 className=\"text-3xl font-extrabold mb-6 text-indigo-700 flex items-center gap-3\">\r\n+        <CalendarCheck size={36} /> Mes Réservations\r\n+      </h2>\r\n \r\n-      {/* Liste réservations */}\r\n-      <main className=\"flex-1 max-w-4xl\">\r\n-        <h2 className=\"text-3xl font-extrabold mb-6 text-indigo-700 flex items-center gap-3\">\r\n-          <CalendarCheck size={36} /> Mes Réservations\r\n-        </h2>\r\n+      <input\r\n+        type=\"search\"\r\n+        placeholder=\"🔍 Rechercher un professionnel...\"\r\n+        value={searchTerm}\r\n+        onChange={(e) => setSearchTerm(e.target.value)}\r\n+        className=\"w-full max-w-md mb-8 px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n+        aria-label=\"Recherche par nom du professionnel\"\r\n+      />\r\n \r\n-        {filteredReservations.length === 0 ? (\r\n-          <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n-        ) : (\r\n-          <ul className=\"space-y-8\">\r\n-            <AnimatePresence>\r\n-              {filteredReservations.map((res) => (\r\n-                <motion.li\r\n-                  key={res.id}\r\n-                  initial={{ opacity: 0, y: 15 }}\r\n-                  animate={{ opacity: 1, y: 0 }}\r\n-                  exit={{ opacity: 0, y: -15 }}\r\n-                  transition={{ duration: 0.3 }}\r\n-                  className=\"border border-indigo-200 rounded-xl bg-indigo-50 p-6 flex flex-col md:flex-row justify-between items-start md:items-center gap-6 shadow-md\"\r\n-                >\r\n-                  <div className=\"space-y-2 md:w-3/4\">\r\n-                    <p className=\"text-lg font-semibold text-indigo-900 flex items-center gap-2\">\r\n-                      <User size={20} /> Docteur : {res.professionnelNom}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <CalendarCheck size={18} /> Date de réservation : <time dateTime={res.dateReservation}>{res.dateReservation}</time>\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <Clock size={18} /> Heure de réservation : {res.heureReservation || 'Non précisée'}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <CalendarCheck size={18} /> Jour de consultation : {res.jourConsultation || 'Non précisé'}\r\n-                    </p>\r\n-                    <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                      <Clock size={18} /> Heure de consultation : {res.heureConsultation || 'Non précisée'}\r\n-                    </p>\r\n-                    <p className=\"text-indigo-800 font-semibold\">\r\n-                      Statut : <span className={\r\n-                        res.statut === 'ANNULEE' ? 'text-red-600' :\r\n-                        res.statut === 'PAYEE' ? 'text-green-600' :\r\n-                        res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n-                        'text-indigo-700'\r\n-                      }>{res.statut.replace('_', ' ')}</span>\r\n-                    </p>\r\n-                    <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n-                      <Euro size={16} /> {res.prix} €\r\n-                    </p>\r\n-                  </div>\r\n+      {filteredReservations.length === 0 ? (\r\n+        <p className=\"text-gray-500 text-center text-lg\">Aucune réservation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-8\">\r\n+          <AnimatePresence>\r\n+            {filteredReservations.map((res) => (\r\n+              <motion.li\r\n+                key={res.id}\r\n+                initial={{ opacity: 0, y: 15 }}\r\n+                animate={{ opacity: 1, y: 0 }}\r\n+                exit={{ opacity: 0, y: -15 }}\r\n+                transition={{ duration: 0.3 }}\r\n+                className=\"border border-indigo-200 rounded-xl bg-indigo-50 p-6 flex flex-col md:flex-row justify-between items-start md:items-center gap-6 shadow-md\"\r\n+              >\r\n+                <div className=\"space-y-2 md:w-3/4\">\r\n+                  <p className=\"text-lg font-semibold text-indigo-900 flex items-center gap-2\">\r\n+                    <User size={20} /> Docteur : {res.professionnelNom}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <CalendarCheck size={18} /> Date de réservation : <time dateTime={res.dateReservation}>{res.dateReservation}</time>\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <Clock size={18} /> Heure de réservation : {res.heureReservation || 'Non précisée'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <CalendarCheck size={18} /> Jour de consultation : {res.jourConsultation || 'Non précisé'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <Clock size={18} /> Heure de consultation : {res.heureConsultation || 'Non précisée'}\r\n+                  </p>\r\n+                  <p className=\"text-indigo-800 font-semibold\">\r\n+                    Statut : <span className={\r\n+                      res.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                      res.statut === 'PAYEE' ? 'text-green-600' :\r\n+                      res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n+                      'text-indigo-700'\r\n+                    }>{res.statut}</span>\r\n+                  </p>\r\n+                  <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n+                    < size={16} /> {res.prix} €\r\n+                  </p>\r\n+                </div>\r\n \r\n-                  {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n-                    <AnimatedButton\r\n-                      disabled={loadingAnnulation}\r\n-                      onClick={() => handleAnnuler(res.id)}\r\n-                      className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n-                      aria-label=\"Annuler la réservation\"\r\n-                      title=\"Annuler la réservation\"\r\n-                    >\r\n-                      <Trash2 size={20} />\r\n-                      Annuler\r\n-                    </AnimatedButton>\r\n-                  )}\r\n-                </motion.li>\r\n-              ))}\r\n-            </AnimatePresence>\r\n-          </ul>\r\n-        )}\r\n-      </main>\r\n+                {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n+                  <AnimatedButton\r\n+                    disabled={loadingAnnulation}\r\n+                    onClick={() => handleAnnuler(res.id)}\r\n+                    className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                    aria-label=\"Annuler la réservation\"\r\n+                    title=\"Annuler la réservation\"\r\n+                  >\r\n+                    <Trash2 size={20} />\r\n+                    Annuler\r\n+                  </AnimatedButton>\r\n+                )}\r\n+              </motion.li>\r\n+            ))}\r\n+          </AnimatePresence>\r\n+        </ul>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1750175757219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n                       'text-indigo-700'\r\n                     }>{res.statut}</span>\r\n                   </p>\r\n                   <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n-                    < size={16} /> {res.prix} €\r\n+                    <Euro size={16} /> {res.prix} \r\n                   </p>\r\n                 </div>\r\n \r\n                 {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n"
                },
                {
                    "date": 1750175791896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n                       res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n                       'text-indigo-700'\r\n                     }>{res.statut}</span>\r\n                   </p>\r\n-                  <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n+                  <p className=\"text-gray-900 font-semibold flex items-center gap-1\">Prix\r\n                     <Euro size={16} /> {res.prix} \r\n                   </p>\r\n                 </div>\r\n \r\n"
                },
                {
                    "date": 1750175882865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,5 +132,31 @@\n                       res.statut === 'EN_ATTENTE_PAIEMENT' ? 'text-yellow-600' :\r\n                       'text-indigo-700'\r\n                     }>{res.statut}</span>\r\n                   </p>\r\n-                  <p className=\"text-gr\n\\ No newline at end of file\n+                  <p className=\"text-gray-900 font-semibold flex items-center gap-1\">\r\n+                    <Euro size={16} /> {res.prix} €\r\n+                  </p>\r\n+                </div>\r\n+\r\n+                {(res.statut === 'EN_ATTENTE' || res.statut === 'EN_ATTENTE_PAIEMENT') && (\r\n+                  <AnimatedButton\r\n+                    disabled={loadingAnnulation}\r\n+                    onClick={() => handleAnnuler(res.id)}\r\n+                    className=\"inline-flex items-center gap-2 bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold rounded-xl px-5 py-3 shadow-lg transition\"\r\n+                    aria-label=\"Annuler la réservation\"\r\n+                    title=\"Annuler la réservation\"\r\n+                  >\r\n+                    <Trash2 size={20} />\r\n+                    Annuler\r\n+                  </AnimatedButton>\r\n+                )}\r\n+              </motion.li>\r\n+            ))}\r\n+          </AnimatePresence>\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default MesReservations;\r\n"
                },
                {
                    "date": 1750175997804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { Trash2, CalendarCheck, Clock, User, Euro, Search } from 'lucide-react';\r\n+import { Trash2, CalendarCheck, Clock, User, Euro } from 'lucide-react';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n \r\n+// Bouton animé avec framer-motion\r\n const AnimatedButton = ({ children, ...props }) => (\r\n   <motion.button\r\n     whileHover={{ scale: 1.05, boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}\r\n     whileTap={{ scale: 0.95 }}\r\n@@ -14,9 +15,9 @@\n   </motion.button>\r\n );\r\n \r\n const STATUTS = [\r\n-  { value: '', label: 'Tous' },\r\n+  { value: '', label: 'Tous les statuts' },\r\n   { value: 'EN_ATTENTE', label: 'En attente' },\r\n   { value: 'EN_ATTENTE_PAIEMENT', label: 'En attente paiement' },\r\n   { value: 'PAYEE', label: 'Payée' },\r\n   { value: 'REFUSE', label: 'Refusée' },\r\n@@ -38,8 +39,9 @@\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n     };\r\n+\r\n     fetchReservations();\r\n   }, []);\r\n \r\n   const handleAnnuler = async (id) => {\r\n@@ -58,11 +60,11 @@\n     }\r\n   };\r\n \r\n   const filteredReservations = reservations.filter(res => {\r\n-    const nomOk = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n-    const statutOk = statutFilter === '' || res.statut === statutFilter;\r\n-    return nomOk && statutOk;\r\n+    const matchesNom = res.professionnelNom.toLowerCase().includes(searchTerm.toLowerCase());\r\n+    const matchesStatut = statutFilter === '' || res.statut === statutFilter;\r\n+    return matchesNom && matchesStatut;\r\n   });\r\n \r\n   if (error) {\r\n     return <div className=\"text-red-600 text-center mt-6 font-semibold\">❌ Erreur : {error}</div>;\r\n@@ -79,15 +81,15 @@\n           type=\"search\"\r\n           placeholder=\"🔍 Rechercher un professionnel...\"\r\n           value={searchTerm}\r\n           onChange={(e) => setSearchTerm(e.target.value)}\r\n-          className=\"w-full sm:max-w-md px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n+          className=\"w-full sm:max-w-xs px-3 py-2 text-sm border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n           aria-label=\"Recherche par nom du professionnel\"\r\n         />\r\n         <select\r\n           value={statutFilter}\r\n           onChange={(e) => setStatutFilter(e.target.value)}\r\n-          className=\"w-full sm:max-w-xs px-4 py-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n+          className=\"w-full sm:max-w-[160px] px-3 py-2 text-sm border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n           aria-label=\"Filtrer par statut\"\r\n         >\r\n           {STATUTS.map(({ value, label }) => (\r\n             <option key={value} value={value}>{label}</option>\r\n"
                }
            ],
            "date": 1749940066277,
            "name": "Commit-0",
            "content": "// src/components/utilisateur/MesReservations.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { getReservationsUtilisateur, cancelReservation } from '../../services/serviceUtilisateur';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCalendarAlt, faTimesCircle, faClock, faVideo, \r\n  faCalendarCheck, faInfoCircle, faDollarSign, faCheckCircle \r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst MesReservations = ({ onError, onShowConfirm, onShowInfo }) => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchMesReservations = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getReservationsUtilisateur();\r\n      setReservations(data);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des réservations:\", err);\r\n      onError(\"Impossible de charger vos réservations. Veuillez vous reconnecter.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [onError]);\r\n\r\n  useEffect(() => {\r\n    fetchMesReservations();\r\n  }, [fetchMesReservations]);\r\n\r\n  const handleAnnulerReservation = (reservationId) => {\r\n    onShowConfirm(\r\n      \"Êtes-vous sûr de vouloir annuler cette réservation ?\",\r\n      async () => {\r\n        try {\r\n          await cancelReservation(reservationId);\r\n          fetchMesReservations();\r\n        } catch (err) {\r\n          console.error(\"Erreur lors de l'annulation :\", err.response?.data || err.message);\r\n          onError(`Erreur lors de l'annulation : ${err.response?.data?.message || err.message}`);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const formatDateTime = (dateString, timeString) => {\r\n    if (!dateString) return 'N/A';\r\n    try {\r\n      const dateTime = new Date(`${dateString}T${timeString || '00:00'}:00`);\r\n      if (isNaN(dateTime.getTime())) {\r\n        console.warn(\"Format date invalide:\", dateString, timeString);\r\n        return `${dateString}${timeString ? ' ' + timeString : ''}`;\r\n      }\r\n      return dateTime.toLocaleString('fr-FR', {\r\n        year: 'numeric', month: 'long', day: 'numeric',\r\n        hour: '2-digit', minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return `${dateString} ${timeString || ''}`;\r\n    }\r\n  };\r\n\r\n  const showReservationDetails = (res) => {\r\n    const details = `\r\nDétails de la réservation ${res.id}:\r\nProfessionnel: ${res.professionnel?.nom} ${res.professionnel?.prenom}\r\nDate Demande: ${formatDateTime(res.dateReservation, res.heureReservation)}\r\nStatut: ${res.statut}\r\nPrix: ${res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\nConsultation: ${res.consultation ? `Date: ${formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}, Prix: ${res.consultation.prix || 'N/A'} MAD` : 'Non créée'}\r\n    `;\r\n    onShowInfo(\"Détails de la réservation\", details);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center py-8 text-gray-600\">Chargement de vos réservations...</div>;\r\n  }\r\n\r\n  if (!reservations.length) {\r\n    return <p className=\"text-gray-600 p-4 bg-gray-50 rounded-md\">Vous n'avez aucune réservation pour le moment.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto shadow-md rounded-lg\">\r\n      <table className=\"min-w-full divide-y divide-gray-200\">\r\n        <thead className=\"bg-gray-50\">\r\n          <tr>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID Réservation</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Professionnel</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date & Heure Dem.</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Consultation Prévue</th>\r\n            <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n          {reservations.map((res) => (\r\n            <tr key={res.id}>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{res.id}</td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                {res.professionnel?.nom} {res.professionnel?.prenom}\r\n              </td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                {formatDateTime(res.dateReservation, res.heureReservation)}\r\n              </td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                <FontAwesomeIcon icon={faDollarSign} className=\"mr-1\" />\r\n                {res.prix ? `${res.prix.toFixed(2)} MAD` : 'N/A'}\r\n              </td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n                  ${res.statut === 'EN_ATTENTE' ? 'bg-yellow-100 text-yellow-800' :\r\n                  res.statut === 'VALIDÉ' ? 'bg-green-100 text-green-800' :\r\n                  (res.statut === 'REFUSE' || res.statut === 'ANNULEE') ? 'bg-red-100 text-red-800' :\r\n                  res.statut === 'PAYEE' ? 'bg-blue-100 text-blue-800' :\r\n                  'bg-gray-100 text-gray-800'}`}>\r\n                  <FontAwesomeIcon icon={\r\n                    res.statut === 'EN_ATTENTE' ? faClock :\r\n                    res.statut === 'VALIDÉ' ? faCheckCircle :\r\n                    (res.statut === 'REFUSE' || res.statut === 'ANNULEE') ? faTimesCircle :\r\n                    faInfoCircle\r\n                  } className=\"mr-1\" />\r\n                  {res.statut}\r\n                </span>\r\n              </td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                {res.statut === 'VALIDÉ' && res.consultation ? (\r\n                  <>\r\n                    <p><FontAwesomeIcon icon={faCalendarCheck} className=\"mr-1\" />\r\n                      {formatDateTime(res.consultation.dateConsultation, res.consultation.heure)}\r\n                    </p>\r\n                    {res.consultation.lienVisio && (\r\n                      <a href={res.consultation.lienVisio} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center mt-1\">\r\n                        <FontAwesomeIcon icon={faVideo} className=\"mr-1\" /> Rejoindre la visio\r\n                      </a>\r\n                    )}\r\n                  </>\r\n                ) : res.statut === 'VALIDÉ' && !res.consultation ? (\r\n                  <p className=\"text-red-500\">Consultation non trouvée</p>\r\n                ) : (\r\n                  <p className=\"text-gray-500\">N/A</p>\r\n                )}\r\n              </td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-medium\">\r\n                {res.statut === 'EN_ATTENTE' && (\r\n                  <button\r\n                    onClick={() => handleAnnulerReservation(res.id)}\r\n                    className=\"text-red-600 hover:text-red-900\"\r\n                    title=\"Annuler cette réservation\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Annuler\r\n                  </button>\r\n                )}\r\n                <button\r\n                  onClick={() => showReservationDetails(res)}\r\n                  className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n                  title=\"Voir les détails\"\r\n                >\r\n                  <FontAwesomeIcon icon={faInfoCircle} /> Détails\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MesReservations;\r\n"
        }
    ]
}