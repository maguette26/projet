{
    "sourceFile": "src/components/utilisateur/Consultations.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1750178522566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750178576510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,104 @@\n+import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+\r\n+const formatDateTime = (dateStr, heureStr) => {\r\n+  const date = new Date(dateStr + 'T' + heureStr);\r\n+  return date.toLocaleString('fr-FR', { dateStyle: 'medium', timeStyle: 'short' });\r\n+};\r\n+\r\n const Consultations = () => {\r\n-  // ... ton code composant ...\r\n+  const [consultations, setConsultations] = useState([]);\r\n+  const [filtre, setFiltre] = useState('');\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchConsultations = async () => {\r\n+      try {\r\n+        const res = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        setConsultations(res.data);\r\n+      } catch (err) {\r\n+        setError('Erreur lors du chargement des consultations');\r\n+      }\r\n+    };\r\n+    fetchConsultations();\r\n+  }, []);\r\n+\r\n+  const filteredConsultations = filtre\r\n+    ? consultations.filter(c => c.statut === filtre)\r\n+    : consultations;\r\n+\r\n+  return (\r\n+    <div className=\"max-w-5xl mx-auto p-6\">\r\n+      <motion.h2\r\n+        className=\"text-4xl font-extrabold text-indigo-700 mb-6\"\r\n+        initial={{ y: -20, opacity: 0 }}\r\n+        animate={{ y: 0, opacity: 1 }}\r\n+      >\r\n+        Mes Consultations\r\n+      </motion.h2>\r\n+\r\n+      <div className=\"flex justify-end mb-4\">\r\n+        <select\r\n+          className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n+          value={filtre}\r\n+          onChange={(e) => setFiltre(e.target.value)}\r\n+        >\r\n+          <option value=\"\">Tous les statuts</option>\r\n+          <option value=\"A_VENIR\">À venir</option>\r\n+          <option value=\"TERMINEE\">Terminées</option>\r\n+          <option value=\"ANNULEE\">Annulées</option>\r\n+        </select>\r\n+      </div>\r\n+\r\n+      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n+\r\n+      {filteredConsultations.length === 0 ? (\r\n+        <p className=\"text-gray-600 text-center text-lg\">Aucune consultation trouvée.</p>\r\n+      ) : (\r\n+        <motion.table\r\n+          initial={{ opacity: 0 }}\r\n+          animate={{ opacity: 1 }}\r\n+          className=\"min-w-full bg-white shadow rounded\"\r\n+        >\r\n+          <thead className=\"bg-indigo-100 text-indigo-700 text-left text-sm\">\r\n+            <tr>\r\n+              <th className=\"px-6 py-3\">Date & Heure</th>\r\n+              <th className=\"px-6 py-3\">Professionnel</th>\r\n+              <th className=\"px-6 py-3\">Prix</th>\r\n+              <th className=\"px-6 py-3\">Durée</th>\r\n+              <th className=\"px-6 py-3\">Statut</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody className=\"text-sm text-gray-700\">\r\n+            <AnimatePresence>\r\n+              {filteredConsultations.map(con => (\r\n+                <motion.tr\r\n+                  key={con.idConsultation}\r\n+                  initial={{ opacity: 0, y: 10 }}\r\n+                  animate={{ opacity: 1, y: 0 }}\r\n+                  exit={{ opacity: 0, y: -10 }}\r\n+                  className=\"hover:bg-indigo-50\"\r\n+                >\r\n+                  <td className=\"px-6 py-4\">{formatDateTime(con.dateConsultation, con.heure)}</td>\r\n+                  <td className=\"px-6 py-4\">{con.professionnel ? `Dr. ${con.professionnel.prenom} ${con.professionnel.nom}` : 'N/A'}</td>\r\n+                  <td className=\"px-6 py-4\">{con.prix} MAD</td>\r\n+                  <td className=\"px-6 py-4\">{con.dureeMinutes} min</td>\r\n+                  <td className={`px-6 py-4 font-semibold ${\r\n+                    con.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                    con.statut === 'TERMINEE' ? 'text-green-600' :\r\n+                    'text-indigo-600'\r\n+                  }`}>\r\n+                    {con.statut.replace('_', ' ')}\r\n+                  </td>\r\n+                </motion.tr>\r\n+              ))}\r\n+            </AnimatePresence>\r\n+          </tbody>\r\n+        </motion.table>\r\n+      )}\r\n+    </div>\r\n+  );\r\n };\r\n \r\n export default Consultations;\r\n"
                },
                {
                    "date": 1750178734063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,104 +1,71 @@\n import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n \r\n-const formatDateTime = (dateStr, heureStr) => {\r\n-  const date = new Date(dateStr + 'T' + heureStr);\r\n-  return date.toLocaleString('fr-FR', { dateStyle: 'medium', timeStyle: 'short' });\r\n-};\r\n-\r\n-const Consultations = () => {\r\n-  const [consultations, setConsultations] = useState([]);\r\n-  const [filtre, setFiltre] = useState('');\r\n+function MesReservations() {\r\n+  const [reservations, setReservations] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n-    const fetchConsultations = async () => {\r\n-      try {\r\n-        const res = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n-        setConsultations(res.data);\r\n-      } catch (err) {\r\n-        setError('Erreur lors du chargement des consultations');\r\n-      }\r\n-    };\r\n-    fetchConsultations();\r\n+    fetch('/api/reservations/mes-reservations', {\r\n+      credentials: 'include', // si tu utilises cookie/session\r\n+      headers: {\r\n+        'Accept': 'application/json',\r\n+      },\r\n+    })\r\n+      .then(async (res) => {\r\n+        if (!res.ok) {\r\n+          const err = await res.text();\r\n+          throw new Error(err || 'Erreur réseau');\r\n+        }\r\n+        return res.json();\r\n+      })\r\n+      .then(data => {\r\n+        setReservations(data);\r\n+        setLoading(false);\r\n+      })\r\n+      .catch(err => {\r\n+        setError(err.message);\r\n+        setLoading(false);\r\n+      });\r\n   }, []);\r\n \r\n-  const filteredConsultations = filtre\r\n-    ? consultations.filter(c => c.statut === filtre)\r\n-    : consultations;\r\n+  if (loading) return <p>Chargement...</p>;\r\n+  if (error) return <p>Erreur : {error}</p>;\r\n+  if (reservations.length === 0) return <p>Aucune réservation trouvée.</p>;\r\n \r\n   return (\r\n-    <div className=\"max-w-5xl mx-auto p-6\">\r\n-      <motion.h2\r\n-        className=\"text-4xl font-extrabold text-indigo-700 mb-6\"\r\n-        initial={{ y: -20, opacity: 0 }}\r\n-        animate={{ y: 0, opacity: 1 }}\r\n-      >\r\n-        Mes Consultations\r\n-      </motion.h2>\r\n-\r\n-      <div className=\"flex justify-end mb-4\">\r\n-        <select\r\n-          className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n-          value={filtre}\r\n-          onChange={(e) => setFiltre(e.target.value)}\r\n-        >\r\n-          <option value=\"\">Tous les statuts</option>\r\n-          <option value=\"A_VENIR\">À venir</option>\r\n-          <option value=\"TERMINEE\">Terminées</option>\r\n-          <option value=\"ANNULEE\">Annulées</option>\r\n-        </select>\r\n-      </div>\r\n-\r\n-      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n-\r\n-      {filteredConsultations.length === 0 ? (\r\n-        <p className=\"text-gray-600 text-center text-lg\">Aucune consultation trouvée.</p>\r\n-      ) : (\r\n-        <motion.table\r\n-          initial={{ opacity: 0 }}\r\n-          animate={{ opacity: 1 }}\r\n-          className=\"min-w-full bg-white shadow rounded\"\r\n-        >\r\n-          <thead className=\"bg-indigo-100 text-indigo-700 text-left text-sm\">\r\n-            <tr>\r\n-              <th className=\"px-6 py-3\">Date & Heure</th>\r\n-              <th className=\"px-6 py-3\">Professionnel</th>\r\n-              <th className=\"px-6 py-3\">Prix</th>\r\n-              <th className=\"px-6 py-3\">Durée</th>\r\n-              <th className=\"px-6 py-3\">Statut</th>\r\n+    <div>\r\n+      <h2>Mes Réservations</h2>\r\n+      <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse' }}>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>ID</th>\r\n+            <th>Date Réservation</th>\r\n+            <th>Heure Réservation</th>\r\n+            <th>Statut</th>\r\n+            <th>Prix (€)</th>\r\n+            <th>Professionnel</th>\r\n+            <th>Jour Consultation</th>\r\n+            <th>Heure Consultation</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {reservations.map(r => (\r\n+            <tr key={r.id}>\r\n+              <td>{r.id}</td>\r\n+              <td>{new Date(r.dateReservation).toLocaleDateString()}</td>\r\n+              <td>{r.heureReservation || '-'}</td>\r\n+              <td>{r.statut}</td>\r\n+              <td>{r.prix.toFixed(2)}</td>\r\n+              <td>{r.professionnelNom}</td>\r\n+              <td>{r.jourConsultation ? new Date(r.jourConsultation).toLocaleDateString() : '-'}</td>\r\n+              <td>{r.heureConsultation || '-'}</td>\r\n             </tr>\r\n-          </thead>\r\n-          <tbody className=\"text-sm text-gray-700\">\r\n-            <AnimatePresence>\r\n-              {filteredConsultations.map(con => (\r\n-                <motion.tr\r\n-                  key={con.idConsultation}\r\n-                  initial={{ opacity: 0, y: 10 }}\r\n-                  animate={{ opacity: 1, y: 0 }}\r\n-                  exit={{ opacity: 0, y: -10 }}\r\n-                  className=\"hover:bg-indigo-50\"\r\n-                >\r\n-                  <td className=\"px-6 py-4\">{formatDateTime(con.dateConsultation, con.heure)}</td>\r\n-                  <td className=\"px-6 py-4\">{con.professionnel ? `Dr. ${con.professionnel.prenom} ${con.professionnel.nom}` : 'N/A'}</td>\r\n-                  <td className=\"px-6 py-4\">{con.prix} MAD</td>\r\n-                  <td className=\"px-6 py-4\">{con.dureeMinutes} min</td>\r\n-                  <td className={`px-6 py-4 font-semibold ${\r\n-                    con.statut === 'ANNULEE' ? 'text-red-600' :\r\n-                    con.statut === 'TERMINEE' ? 'text-green-600' :\r\n-                    'text-indigo-600'\r\n-                  }`}>\r\n-                    {con.statut.replace('_', ' ')}\r\n-                  </td>\r\n-                </motion.tr>\r\n-              ))}\r\n-            </AnimatePresence>\r\n-          </tbody>\r\n-        </motion.table>\r\n-      )}\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n     </div>\r\n   );\r\n-};\r\n+}\r\n \r\n-export default Consultations;\r\n+export default MesReservations;\r\n"
                },
                {
                    "date": 1750178793547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,16 @@\n import React, { useEffect, useState } from 'react';\r\n+import { Clock, Calendar, UserCheck, XCircle } from 'lucide-react';\r\n \r\n function MesReservations() {\r\n   const [reservations, setReservations] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n     fetch('/api/reservations/mes-reservations', {\r\n-      credentials: 'include', // si tu utilises cookie/session\r\n-      headers: {\r\n-        'Accept': 'application/json',\r\n-      },\r\n+      credentials: 'include',\r\n+      headers: { Accept: 'application/json' },\r\n     })\r\n       .then(async (res) => {\r\n         if (!res.ok) {\r\n           const err = await res.text();\r\n@@ -28,43 +27,62 @@\n         setLoading(false);\r\n       });\r\n   }, []);\r\n \r\n-  if (loading) return <p>Chargement...</p>;\r\n-  if (error) return <p>Erreur : {error}</p>;\r\n-  if (reservations.length === 0) return <p>Aucune réservation trouvée.</p>;\r\n+  if (loading) return <p className=\"text-center mt-8 text-gray-600\">Chargement...</p>;\r\n+  if (error) return <p className=\"text-center mt-8 text-red-600\">Erreur : {error}</p>;\r\n+  if (reservations.length === 0) return <p className=\"text-center mt-8 text-gray-500\">Aucune réservation trouvée.</p>;\r\n \r\n   return (\r\n-    <div>\r\n-      <h2>Mes Réservations</h2>\r\n-      <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse' }}>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>ID</th>\r\n-            <th>Date Réservation</th>\r\n-            <th>Heure Réservation</th>\r\n-            <th>Statut</th>\r\n-            <th>Prix (€)</th>\r\n-            <th>Professionnel</th>\r\n-            <th>Jour Consultation</th>\r\n-            <th>Heure Consultation</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {reservations.map(r => (\r\n-            <tr key={r.id}>\r\n-              <td>{r.id}</td>\r\n-              <td>{new Date(r.dateReservation).toLocaleDateString()}</td>\r\n-              <td>{r.heureReservation || '-'}</td>\r\n-              <td>{r.statut}</td>\r\n-              <td>{r.prix.toFixed(2)}</td>\r\n-              <td>{r.professionnelNom}</td>\r\n-              <td>{r.jourConsultation ? new Date(r.jourConsultation).toLocaleDateString() : '-'}</td>\r\n-              <td>{r.heureConsultation || '-'}</td>\r\n+    <div className=\"max-w-5xl mx-auto p-4\">\r\n+      <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Mes Réservations</h2>\r\n+      <div className=\"overflow-x-auto shadow-md rounded-lg border border-gray-200\">\r\n+        <table className=\"min-w-full divide-y divide-gray-200\">\r\n+          <thead className=\"bg-gray-50\">\r\n+            <tr>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n+                <Calendar size={16} /> Date Réservation\r\n+              </th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n+                <Clock size={16} /> Heure Réservation\r\n+              </th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix (€)</th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n+                <UserCheck size={16} /> Professionnel\r\n+              </th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n+                <Calendar size={16} /> Jour Consultation\r\n+              </th>\r\n+              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n+                <Clock size={16} /> Heure Consultation\r\n+              </th>\r\n             </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n+          </thead>\r\n+          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+            {reservations.map(r => (\r\n+              <tr key={r.id} className=\"hover:bg-gray-50\">\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900\">{r.id}</td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{new Date(r.dateReservation).toLocaleDateString()}</td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.heureReservation || <XCircle className=\"inline-block text-red-400\" size={16} />}</td>\r\n+                <td className={`px-4 py-3 whitespace-nowrap text-sm font-semibold ${\r\n+                  r.statut === 'EN_ATTENTE' ? 'text-yellow-600' :\r\n+                  r.statut === 'ACCEPTEE' ? 'text-green-600' :\r\n+                  r.statut === 'REFUSEE' ? 'text-red-600' : 'text-gray-600'}`}>\r\n+                  {r.statut}\r\n+                </td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.prix.toFixed(2)}</td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900\">{r.professionnelNom}</td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">\r\n+                  {r.jourConsultation ? new Date(r.jourConsultation).toLocaleDateString() : <XCircle className=\"inline-block text-red-400\" size={16} />}\r\n+                </td>\r\n+                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.heureConsultation || <XCircle className=\"inline-block text-red-400\" size={16} />}</td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1750178925945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,8 @@\n       <div className=\"overflow-x-auto shadow-md rounded-lg border border-gray-200\">\r\n         <table className=\"min-w-full divide-y divide-gray-200\">\r\n           <thead className=\"bg-gray-50\">\r\n             <tr>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n               <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n                 <Calendar size={16} /> Date Réservation\r\n               </th>\r\n               <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n@@ -61,9 +60,8 @@\n           </thead>\r\n           <tbody className=\"bg-white divide-y divide-gray-200\">\r\n             {reservations.map(r => (\r\n               <tr key={r.id} className=\"hover:bg-gray-50\">\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900\">{r.id}</td>\r\n                 <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{new Date(r.dateReservation).toLocaleDateString()}</td>\r\n                 <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.heureReservation || <XCircle className=\"inline-block text-red-400\" size={16} />}</td>\r\n                 <td className={`px-4 py-3 whitespace-nowrap text-sm font-semibold ${\r\n                   r.statut === 'EN_ATTENTE' ? 'text-yellow-600' :\r\n"
                },
                {
                    "date": 1750179008855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +1,117 @@\n import React, { useEffect, useState } from 'react';\r\n-import { Clock, Calendar, UserCheck, XCircle } from 'lucide-react';\r\n+import axios from 'axios';\r\n+import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n+import { toast, ToastContainer } from 'react-toastify';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n \r\n-function MesReservations() {\r\n-  const [reservations, setReservations] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+const MesConsultations = () => {\r\n+  const [consultations, setConsultations] = useState([]);\r\n+  const [statut, setStatut] = useState('');\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n-    fetch('/api/reservations/mes-reservations', {\r\n-      credentials: 'include',\r\n-      headers: { Accept: 'application/json' },\r\n-    })\r\n-      .then(async (res) => {\r\n-        if (!res.ok) {\r\n-          const err = await res.text();\r\n-          throw new Error(err || 'Erreur réseau');\r\n-        }\r\n-        return res.json();\r\n-      })\r\n-      .then(data => {\r\n-        setReservations(data);\r\n-        setLoading(false);\r\n-      })\r\n-      .catch(err => {\r\n+    const fetchConsultations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        setConsultations(response.data);\r\n+      } catch (err) {\r\n         setError(err.message);\r\n-        setLoading(false);\r\n-      });\r\n+      }\r\n+    };\r\n+    fetchConsultations();\r\n   }, []);\r\n \r\n-  if (loading) return <p className=\"text-center mt-8 text-gray-600\">Chargement...</p>;\r\n-  if (error) return <p className=\"text-center mt-8 text-red-600\">Erreur : {error}</p>;\r\n-  if (reservations.length === 0) return <p className=\"text-center mt-8 text-gray-500\">Aucune réservation trouvée.</p>;\r\n+  const filteredConsultations = consultations.filter(c =>\r\n+    statut ? c.statut === statut : true\r\n+  );\r\n \r\n   return (\r\n-    <div className=\"max-w-5xl mx-auto p-4\">\r\n-      <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Mes Réservations</h2>\r\n-      <div className=\"overflow-x-auto shadow-md rounded-lg border border-gray-200\">\r\n-        <table className=\"min-w-full divide-y divide-gray-200\">\r\n-          <thead className=\"bg-gray-50\">\r\n-            <tr>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n-                <Calendar size={16} /> Date Réservation\r\n-              </th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n-                <Clock size={16} /> Heure Réservation\r\n-              </th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statut</th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prix (€)</th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n-                <UserCheck size={16} /> Professionnel\r\n-              </th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n-                <Calendar size={16} /> Jour Consultation\r\n-              </th>\r\n-              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider flex items-center gap-1\">\r\n-                <Clock size={16} /> Heure Consultation\r\n-              </th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n-            {reservations.map(r => (\r\n-              <tr key={r.id} className=\"hover:bg-gray-50\">\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{new Date(r.dateReservation).toLocaleDateString()}</td>\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.heureReservation || <XCircle className=\"inline-block text-red-400\" size={16} />}</td>\r\n-                <td className={`px-4 py-3 whitespace-nowrap text-sm font-semibold ${\r\n-                  r.statut === 'EN_ATTENTE' ? 'text-yellow-600' :\r\n-                  r.statut === 'ACCEPTEE' ? 'text-green-600' :\r\n-                  r.statut === 'REFUSEE' ? 'text-red-600' : 'text-gray-600'}`}>\r\n-                  {r.statut}\r\n-                </td>\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.prix.toFixed(2)}</td>\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900\">{r.professionnelNom}</td>\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">\r\n-                  {r.jourConsultation ? new Date(r.jourConsultation).toLocaleDateString() : <XCircle className=\"inline-block text-red-400\" size={16} />}\r\n-                </td>\r\n-                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700\">{r.heureConsultation || <XCircle className=\"inline-block text-red-400\" size={16} />}</td>\r\n-              </tr>\r\n+    <div className=\"max-w-5xl mx-auto p-6\">\r\n+      <ToastContainer position=\"top-right\" />\r\n+      \r\n+      {/* Titre + Filtre */}\r\n+      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n+        <motion.h2\r\n+          className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n+          initial={{ y: -20, opacity: 0 }}\r\n+          animate={{ y: 0, opacity: 1 }}\r\n+        >\r\n+          <MessageSquare size={32} /> Mes Consultations\r\n+        </motion.h2>\r\n+\r\n+        <div className=\"flex gap-3 items-center\">\r\n+          <SlidersHorizontal className=\"text-gray-500\" />\r\n+          <select\r\n+            value={statut}\r\n+            onChange={(e) => setStatut(e.target.value)}\r\n+            className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n+          >\r\n+            <option value=\"\">Tous les statuts</option>\r\n+            <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n+            <option value=\"EN_COURS\">🔵 En cours</option>\r\n+            <option value=\"TERMINEE\">✅ Terminée</option>\r\n+            <option value=\"ANNULEE\">❌ Annulée</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {error && (\r\n+        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n+      )}\r\n+\r\n+      {filteredConsultations.length === 0 ? (\r\n+        <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-6\">\r\n+          <AnimatePresence>\r\n+            {filteredConsultations.map((c) => (\r\n+              <motion.li\r\n+                key={c.id}\r\n+                className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n+                initial={{ opacity: 0, y: 20 }}\r\n+                animate={{ opacity: 1, y: 0 }}\r\n+                exit={{ opacity: 0, y: -10 }}\r\n+                transition={{ duration: 0.3 }}\r\n+              >\r\n+                <div className=\"space-y-2 text-sm md:text-base\">\r\n+                  <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n+                    <User size={18} /> Docteur : {c.professionnelNom}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <CalendarCheck size={16} /> Date consultation : {new Date(c.jourConsultation).toLocaleDateString()}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <Clock size={16} /> Heure : {c.heureConsultation || '—'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium\">\r\n+                    Statut : <span className={\r\n+                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n+                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n+                    }>{c.statut}</span>\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix:\r\n+                    <Euro size={14} /> {c.prix.toFixed(2)}\r\n+                  </p>\r\n+                </div>\r\n+\r\n+                {/* Bouton optionnel d'action (exemple : voir détails) */}\r\n+                <motion.button\r\n+                  whileHover={{ scale: 1.05 }}\r\n+                  whileTap={{ scale: 0.95 }}\r\n+                  onClick={() => toast.info(`Consultation avec ${c.professionnelNom} le ${new Date(c.jourConsultation).toLocaleDateString()}`)}\r\n+                  className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n+                >\r\n+                  Voir détails\r\n+                </motion.button>\r\n+              </motion.li>\r\n             ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n+          </AnimatePresence>\r\n+        </ul>\r\n+      )}\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n \r\n-export default MesReservations;\r\n+export default MesConsultations;\r\n"
                },
                {
                    "date": 1750179018650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n   useEffect(() => {\r\n     const fetchConsultations = async () => {\r\n       try {\r\n-        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        const response = await axios.get('/api/reservations/mes-consultations', { withCredentials: true });\r\n         setConsultations(response.data);\r\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n"
                },
                {
                    "date": 1750179044882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n   useEffect(() => {\r\n     const fetchConsultations = async () => {\r\n       try {\r\n-        const response = await axios.get('/api/reservations/mes-consultations', { withCredentials: true });\r\n+        const response = await axios.get('/api/reservations/mes-creservatins', { withCredentials: true });\r\n         setConsultations(response.data);\r\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n"
                },
                {
                    "date": 1750180128974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n   useEffect(() => {\r\n     const fetchConsultations = async () => {\r\n       try {\r\n-        const response = await axios.get('/api/reservations/mes-creservatins', { withCredentials: true });\r\n+        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n         setConsultations(response.data);\r\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n@@ -48,9 +48,9 @@\n             className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n           >\r\n             <option value=\"\">Tous les statuts</option>\r\n             <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n-            <option value=\"EN_COURS\">🔵 En cours</option>\r\n+            <option value=\"CONFIRMEE\">🔵 Confirmée</option>\r\n             <option value=\"TERMINEE\">✅ Terminée</option>\r\n             <option value=\"ANNULEE\">❌ Annulée</option>\r\n           </select>\r\n         </div>\r\n@@ -66,24 +66,24 @@\n         <ul className=\"space-y-6\">\r\n           <AnimatePresence>\r\n             {filteredConsultations.map((c) => (\r\n               <motion.li\r\n-                key={c.id}\r\n+                key={c.idConsultation}\r\n                 className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n                 initial={{ opacity: 0, y: 20 }}\r\n                 animate={{ opacity: 1, y: 0 }}\r\n                 exit={{ opacity: 0, y: -10 }}\r\n                 transition={{ duration: 0.3 }}\r\n               >\r\n-                <div className=\"space-y-2 text-sm md:text-base\">\r\n+                <div className=\"space-y-2 text-sm md:text-base max-w-xl\">\r\n                   <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n-                    <User size={18} /> Docteur : {c.professionnelNom}\r\n+                    <User size={18} /> Docteur : {c.professionnel?.nom || '—'}\r\n                   </p>\r\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <CalendarCheck size={16} /> Date consultation : {new Date(c.jourConsultation).toLocaleDateString()}\r\n+                    <CalendarCheck size={16} /> Date consultation : {new Date(c.dateConsultation).toLocaleDateString()}\r\n                   </p>\r\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <Clock size={16} /> Heure : {c.heureConsultation || '—'}\r\n+                    <Clock size={16} /> Heure : {c.heure ? c.heure.substring(0,5) : '—'}\r\n                   </p>\r\n                   <p className=\"text-gray-800 font-medium\">\r\n                     Statut : <span className={\r\n                       c.statut === 'ANNULEE' ? 'text-red-600' :\r\n@@ -91,17 +91,31 @@\n                       c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n                     }>{c.statut}</span>\r\n                   </p>\r\n                   <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix:\r\n-                    <Euro size={14} /> {c.prix.toFixed(2)}\r\n+                    <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n                   </p>\r\n+\r\n+                  {/* Notes professionnel */}\r\n+                  {c.notesProfessionnel && (\r\n+                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n+                      <strong>Note du professionnel :</strong> {c.notesProfessionnel}\r\n+                    </p>\r\n+                  )}\r\n+\r\n+                  {/* Notes utilisateur */}\r\n+                  {c.notesUtilisateur && (\r\n+                    <p className=\"text-gray-700 italic text-sm mt-1\">\r\n+                      <strong>Note utilisateur :</strong> {c.notesUtilisateur}\r\n+                    </p>\r\n+                  )}\r\n                 </div>\r\n \r\n-                {/* Bouton optionnel d'action (exemple : voir détails) */}\r\n+                {/* Bouton optionnel d'action */}\r\n                 <motion.button\r\n                   whileHover={{ scale: 1.05 }}\r\n                   whileTap={{ scale: 0.95 }}\r\n-                  onClick={() => toast.info(`Consultation avec ${c.professionnelNom} le ${new Date(c.jourConsultation).toLocaleDateString()}`)}\r\n+                  onClick={() => toast.info(`Consultation avec ${c.professionnel?.nom || 'le professionnel'} le ${new Date(c.dateConsultation).toLocaleDateString()}`)}\r\n                   className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n                 >\r\n                   Voir détails\r\n                 </motion.button>\r\n"
                },
                {
                    "date": 1750180317544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,123 @@\n+import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n+import { toast, ToastContainer } from 'react-toastify';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+\r\n+const MesConsultations = () => {\r\n+  const [consultations, setConsultations] = useState([]);\r\n+  const [statut, setStatut] = useState('');\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchConsultations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        setConsultations(response.data);\r\n+      } catch (err) {\r\n+        setError(err.message);\r\n+      }\r\n+    };\r\n+    fetchConsultations();\r\n+  }, []);\r\n+\r\n+  const filteredConsultations = consultations.filter(c =>\r\n+    statut ? c.statut === statut : true\r\n+  );\r\n+\r\n+  return (\r\n+    <div className=\"max-w-5xl mx-auto p-6\">\r\n+      <ToastContainer position=\"top-right\" />\r\n+      \r\n+      {/* Titre + Filtre */}\r\n+      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n+        <motion.h2\r\n+          className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n+          initial={{ y: -20, opacity: 0 }}\r\n+          animate={{ y: 0, opacity: 1 }}\r\n+        >\r\n+          <MessageSquare size={32} /> Mes Consultations\r\n+        </motion.h2>\r\n+\r\n+        <div className=\"flex gap-3 items-center\">\r\n+          <SlidersHorizontal className=\"text-gray-500\" />\r\n+          <select\r\n+            value={statut}\r\n+            onChange={(e) => setStatut(e.target.value)}\r\n+            className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n+          >\r\n+            <option value=\"\">Tous les statuts</option>\r\n+            <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n+            <option value=\"CONFIRMEE\">🔵 Confirmée</option>\r\n+            <option value=\"TERMINEE\">✅ Terminée</option>\r\n+            <option value=\"ANNULEE\">❌ Annulée</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {error && (\r\n+        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n+      )}\r\n+\r\n+      {filteredConsultations.length === 0 ? (\r\n+        <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-6\">\r\n+          <AnimatePresence>\r\n+            {filteredConsultations.map((c) => (\r\n+              <motion.li\r\n+                key={c.idConsultation}\r\n+                className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n+                initial={{ opacity: 0, y: 20 }}\r\n+                animate={{ opacity: 1, y: 0 }}\r\n+                exit={{ opacity: 0, y: -10 }}\r\n+                transition={{ duration: 0.3 }}\r\n+              >\r\n+                <div className=\"space-y-2 text-sm md:text-base max-w-xl\">\r\n+                  <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n+                    <User size={18} /> Docteur : {c.professionnel?.nom || '—'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <CalendarCheck size={16} /> Date : {new Date(c.dateConsultation).toLocaleDateString()}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium\">\r\n+                    Statut : <span className={\r\n+                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n+                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n+                    }>{c.statut}</span>\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n+                    <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n+                  </p>\r\n+\r\n+                  {/* Note utilisateur */}\r\n+                  {c.notesUtilisateur && (\r\n+                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n+                      <strong>Votre note :</strong> {c.notesUtilisateur}\r\n+                    </p>\r\n+                  )}\r\n+                </div>\r\n+\r\n+                <motion.button\r\n+                  whileHover={{ scale: 1.05 }}\r\n+                  whileTap={{ scale: 0.95 }}\r\n+                  onClick={() => toast.info(`Consultation avec ${c.professionnel?.nom || 'le professionnel'} le ${new Date(c.dateConsultation).toLocaleDateString()}`)}\r\n+                  className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n+                >\r\n+                  Voir détails\r\n+                </motion.button>\r\n+              </motion.li>\r\n+            ))}\r\n+          </AnimatePresence>\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default MesConsultations;\r\n"
                },
                {
                    "date": 1750183411284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,254 +1,60 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n-import { toast, ToastContainer } from 'react-toastify';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n \r\n-const MesConsultations = () => {\r\n-  const [consultations, setConsultations] = useState([]);\r\n-  const [statut, setStatut] = useState('');\r\n-  const [error, setError] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchConsultations = async () => {\r\n-      try {\r\n-        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n-        setConsultations(response.data);\r\n-      } catch (err) {\r\n-        setError(err.message);\r\n-      }\r\n-    };\r\n-    fetchConsultations();\r\n-  }, []);\r\n-\r\n-  const filteredConsultations = consultations.filter(c =>\r\n-    statut ? c.statut === statut : true\r\n-  );\r\n-\r\n-  return (\r\n-    <div className=\"max-w-5xl mx-auto p-6\">\r\n-      <ToastContainer position=\"top-right\" />\r\n-      \r\n-      {/* Titre + Filtre */}\r\n-      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n-        <motion.h2\r\n-          className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n-          initial={{ y: -20, opacity: 0 }}\r\n-          animate={{ y: 0, opacity: 1 }}\r\n-        >\r\n-          <MessageSquare size={32} /> Mes Consultations\r\n-        </motion.h2>\r\n-\r\n-        <div className=\"flex gap-3 items-center\">\r\n-          <SlidersHorizontal className=\"text-gray-500\" />\r\n-          <select\r\n-            value={statut}\r\n-            onChange={(e) => setStatut(e.target.value)}\r\n-            className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n-          >\r\n-            <option value=\"\">Tous les statuts</option>\r\n-            <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n-            <option value=\"CONFIRMEE\">🔵 Confirmée</option>\r\n-            <option value=\"TERMINEE\">✅ Terminée</option>\r\n-            <option value=\"ANNULEE\">❌ Annulée</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {error && (\r\n-        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n-      )}\r\n-\r\n-      {filteredConsultations.length === 0 ? (\r\n-        <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n-      ) : (\r\n-        <ul className=\"space-y-6\">\r\n-          <AnimatePresence>\r\n-            {filteredConsultations.map((c) => (\r\n-              <motion.li\r\n-                key={c.idConsultation}\r\n-                className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n-                initial={{ opacity: 0, y: 20 }}\r\n-                animate={{ opacity: 1, y: 0 }}\r\n-                exit={{ opacity: 0, y: -10 }}\r\n-                transition={{ duration: 0.3 }}\r\n-              >\r\n-                <div className=\"space-y-2 text-sm md:text-base max-w-xl\">\r\n-                  <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n-                    <User size={18} /> Docteur : {c.professionnel?.nom || '—'}\r\n-                  </p>\r\n-                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <CalendarCheck size={16} /> Date : {new Date(c.dateConsultation).toLocaleDateString()}\r\n-                  </p>\r\n-                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n-                  </p>\r\n-                  <p className=\"text-gray-800 font-medium\">\r\n-                    Statut : <span className={\r\n-                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n-                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n-                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n-                    }>{c.statut}</span>\r\n-                  </p>\r\n-                  <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n-                    <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n-                  </p>\r\n-\r\n-                  {/* Note utilisateur */}\r\n-                  {c.notesUtilisateur && (\r\n-                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n-                      <strong>Votre note :</strong> {c.notesUtilisateur}\r\n-                    </p>\r\n-                  )}\r\n-                </div>\r\n-\r\n-                <motion.button\r\n-                  whileHover={{ scale: 1.05 }}\r\n-                  whileTap={{ scale: 0.95 }}\r\n-                  onClick={() => toast.info(`Consultation avec ${c.professionnel?.nom || 'le professionnel'} le ${new Date(c.dateConsultation).toLocaleDateString()}`)}\r\n-                  className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n-                >\r\n-                  Voir détails\r\n-                </motion.button>\r\n-              </motion.li>\r\n-            ))}\r\n-          </AnimatePresence>\r\n-        </ul>\r\n-      )}\r\n-    </div>\r\n-  );\r\n+const statutStyles = {\r\n+  CONFIRME: { color: 'green', label: 'Confirmée' },\r\n+  EN_ATTENTE: { color: 'orange', label: 'En attente' },\r\n+  ANNULE: { color: 'red', label: 'Annulée' },\r\n+  // ajoute d'autres statuts si besoin\r\n };\r\n \r\n-export default MesConsultations;\r\n-import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n-import { toast, ToastContainer } from 'react-toastify';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-\r\n-const MesConsultations = () => {\r\n+function MesConsultations() {\r\n   const [consultations, setConsultations] = useState([]);\r\n-  const [statut, setStatut] = useState('');\r\n+  const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n-    const fetchConsultations = async () => {\r\n-      try {\r\n-        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n-        setConsultations(response.data);\r\n-      } catch (err) {\r\n-        setError(err.message);\r\n-      }\r\n-    };\r\n-    fetchConsultations();\r\n+    axios.get('/api/consultations/mes-consultations')\r\n+      .then(res => {\r\n+        setConsultations(res.data);\r\n+        setLoading(false);\r\n+      })\r\n+      .catch(err => {\r\n+        setError('Erreur lors du chargement des consultations');\r\n+        setLoading(false);\r\n+      });\r\n   }, []);\r\n \r\n-  const filteredConsultations = consultations.filter(c =>\r\n-    statut ? c.statut === statut : true\r\n-  );\r\n+  if (loading) return <div>Chargement...</div>;\r\n+  if (error) return <div>{error}</div>;\r\n \r\n   return (\r\n-    <div className=\"max-w-5xl mx-auto p-6\">\r\n-      <ToastContainer position=\"top-right\" />\r\n-      \r\n-      {/* Titre + Filtre */}\r\n-      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n-        <motion.h2\r\n-          className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n-          initial={{ y: -20, opacity: 0 }}\r\n-          animate={{ y: 0, opacity: 1 }}\r\n-        >\r\n-          <MessageSquare size={32} /> Mes Consultations\r\n-        </motion.h2>\r\n+    <div>\r\n+      <h2>Mes consultations</h2>\r\n+      {consultations.length === 0 && <p>Aucune consultation trouvée.</p>}\r\n+      <ul>\r\n+        {consultations.map(c => {\r\n+          const statut = c.statut || 'INCONNU';\r\n+          const style = statutStyles[statut] || { color: 'gray', label: statut };\r\n \r\n-        <div className=\"flex gap-3 items-center\">\r\n-          <SlidersHorizontal className=\"text-gray-500\" />\r\n-          <select\r\n-            value={statut}\r\n-            onChange={(e) => setStatut(e.target.value)}\r\n-            className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n-          >\r\n-            <option value=\"\">Tous les statuts</option>\r\n-            <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n-            <option value=\"CONFIRMEE\">🔵 Confirmée</option>\r\n-            <option value=\"TERMINEE\">✅ Terminée</option>\r\n-            <option value=\"ANNULEE\">❌ Annulée</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {error && (\r\n-        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n-      )}\r\n-\r\n-      {filteredConsultations.length === 0 ? (\r\n-        <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n-      ) : (\r\n-        <ul className=\"space-y-6\">\r\n-          <AnimatePresence>\r\n-            {filteredConsultations.map((c) => (\r\n-              <motion.li\r\n-                key={c.idConsultation}\r\n-                className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n-                initial={{ opacity: 0, y: 20 }}\r\n-                animate={{ opacity: 1, y: 0 }}\r\n-                exit={{ opacity: 0, y: -10 }}\r\n-                transition={{ duration: 0.3 }}\r\n-              >\r\n-                <div className=\"space-y-2 text-sm md:text-base max-w-xl\">\r\n-                  <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n-                    <User size={18} /> Docteur : {c.professionnel?.nom || '—'}\r\n-                  </p>\r\n-                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <CalendarCheck size={16} /> Date consultation : {new Date(c.dateConsultation).toLocaleDateString()}\r\n-                  </p>\r\n-                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <Clock size={16} /> Heure : {c.heure ? c.heure.substring(0,5) : '—'}\r\n-                  </p>\r\n-                  <p className=\"text-gray-800 font-medium\">\r\n-                    Statut : <span className={\r\n-                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n-                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n-                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n-                    }>{c.statut}</span>\r\n-                  </p>\r\n-                  <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix:\r\n-                    <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n-                  </p>\r\n-\r\n-                  {/* Notes professionnel */}\r\n-                  {c.notesProfessionnel && (\r\n-                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n-                      <strong>Note du professionnel :</strong> {c.notesProfessionnel}\r\n-                    </p>\r\n-                  )}\r\n-\r\n-                  {/* Notes utilisateur */}\r\n-                  {c.notesUtilisateur && (\r\n-                    <p className=\"text-gray-700 italic text-sm mt-1\">\r\n-                      <strong>Note utilisateur :</strong> {c.notesUtilisateur}\r\n-                    </p>\r\n-                  )}\r\n-                </div>\r\n-\r\n-                {/* Bouton optionnel d'action */}\r\n-                <motion.button\r\n-                  whileHover={{ scale: 1.05 }}\r\n-                  whileTap={{ scale: 0.95 }}\r\n-                  onClick={() => toast.info(`Consultation avec ${c.professionnel?.nom || 'le professionnel'} le ${new Date(c.dateConsultation).toLocaleDateString()}`)}\r\n-                  className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n-                >\r\n-                  Voir détails\r\n-                </motion.button>\r\n-              </motion.li>\r\n-            ))}\r\n-          </AnimatePresence>\r\n-        </ul>\r\n-      )}\r\n+          return (\r\n+            <li key={c.id} style={{ marginBottom: '1rem', borderBottom: '1px solid #ccc', paddingBottom: '0.5rem' }}>\r\n+              <div><strong>Date :</strong> {new Date(c.date).toLocaleDateString()}</div>\r\n+              <div><strong>Heure :</strong> {c.heure}</div>\r\n+              <div><strong>Prix :</strong> {c.prix} €</div>\r\n+              <div>\r\n+                <strong>Statut :</strong>{' '}\r\n+                <span style={{ color: style.color, fontWeight: 'bold' }}>{style.label}</span>\r\n+              </div>\r\n+              <div><strong>Professionnel :</strong> {c.professionnelPrenom} {c.professionnelNom}</div>\r\n+              {c.notesProfessionnel && <div><strong>Notes pro :</strong> {c.notesProfessionnel}</div>}\r\n+              {c.notesUtilisateur && <div><strong>Mes notes :</strong> {c.notesUtilisateur}</div>}\r\n+            </li>\r\n+          );\r\n+        })}\r\n+      </ul>\r\n     </div>\r\n   );\r\n-};\r\n+}\r\n \r\n export default MesConsultations;\r\n"
                },
                {
                    "date": 1750183423404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n \r\n const statutStyles = {\r\n-  CONFIRME: { color: 'green', label: 'Confirmée' },\r\n+  CONFIRMEE: { color: 'green', label: 'Confirmée' },\r\n   EN_ATTENTE: { color: 'orange', label: 'En attente' },\r\n   ANNULE: { color: 'red', label: 'Annulée' },\r\n   // ajoute d'autres statuts si besoin\r\n };\r\n"
                },
                {
                    "date": 1750183429960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const statutStyles = {\r\n   CONFIRMEE: { color: 'green', label: 'Confirmée' },\r\n   EN_ATTENTE: { color: 'orange', label: 'En attente' },\r\n-  ANNULE: { color: 'red', label: 'Annulée' },\r\n+  ANNULEE: { color: 'red', label: 'Annulée' },\r\n   // ajoute d'autres statuts si besoin\r\n };\r\n \r\n function MesConsultations() {\r\n"
                },
                {
                    "date": 1750183462670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const statutStyles = {\r\n   CONFIRMEE: { color: 'green', label: 'Confirmée' },\r\n   EN_ATTENTE: { color: 'orange', label: 'En attente' },\r\n-  ANNULEE: { color: 'red', label: 'Annulée' },\r\n+  ANNULE: { color: 'red', label: 'Annulée' },\r\n   // ajoute d'autres statuts si besoin\r\n };\r\n \r\n function MesConsultations() {\r\n"
                },
                {
                    "date": 1750183524112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,60 +1,130 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n+import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n+import { toast, ToastContainer } from 'react-toastify';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n \r\n-const statutStyles = {\r\n-  CONFIRMEE: { color: 'green', label: 'Confirmée' },\r\n-  EN_ATTENTE: { color: 'orange', label: 'En attente' },\r\n-  ANNULE: { color: 'red', label: 'Annulée' },\r\n-  // ajoute d'autres statuts si besoin\r\n-};\r\n-\r\n-function MesConsultations() {\r\n+const MesConsultations = () => {\r\n   const [consultations, setConsultations] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [statut, setStatut] = useState('');\r\n   const [error, setError] = useState(null);\r\n \r\n   useEffect(() => {\r\n-    axios.get('/api/consultations/mes-consultations')\r\n-      .then(res => {\r\n-        setConsultations(res.data);\r\n-        setLoading(false);\r\n-      })\r\n-      .catch(err => {\r\n-        setError('Erreur lors du chargement des consultations');\r\n-        setLoading(false);\r\n-      });\r\n+    const fetchConsultations = async () => {\r\n+      try {\r\n+        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        setConsultations(response.data);\r\n+      } catch (err) {\r\n+        setError(err.message);\r\n+      }\r\n+    };\r\n+    fetchConsultations();\r\n   }, []);\r\n \r\n-  if (loading) return <div>Chargement...</div>;\r\n-  if (error) return <div>{error}</div>;\r\n+  const filteredConsultations = consultations.filter(c =>\r\n+    statut ? c.statut === statut : true\r\n+  );\r\n \r\n   return (\r\n-    <div>\r\n-      <h2>Mes consultations</h2>\r\n-      {consultations.length === 0 && <p>Aucune consultation trouvée.</p>}\r\n-      <ul>\r\n-        {consultations.map(c => {\r\n-          const statut = c.statut || 'INCONNU';\r\n-          const style = statutStyles[statut] || { color: 'gray', label: statut };\r\n+    <div className=\"max-w-5xl mx-auto p-6\">\r\n+      <ToastContainer position=\"top-right\" />\r\n+      \r\n+      {/* Titre + Filtre */}\r\n+      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n+        <motion.h2\r\n+          className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n+          initial={{ y: -20, opacity: 0 }}\r\n+          animate={{ y: 0, opacity: 1 }}\r\n+        >\r\n+          <MessageSquare size={32} /> Mes Consultations\r\n+        </motion.h2>\r\n \r\n-          return (\r\n-            <li key={c.id} style={{ marginBottom: '1rem', borderBottom: '1px solid #ccc', paddingBottom: '0.5rem' }}>\r\n-              <div><strong>Date :</strong> {new Date(c.date).toLocaleDateString()}</div>\r\n-              <div><strong>Heure :</strong> {c.heure}</div>\r\n-              <div><strong>Prix :</strong> {c.prix} €</div>\r\n-              <div>\r\n-                <strong>Statut :</strong>{' '}\r\n-                <span style={{ color: style.color, fontWeight: 'bold' }}>{style.label}</span>\r\n-              </div>\r\n-              <div><strong>Professionnel :</strong> {c.professionnelPrenom} {c.professionnelNom}</div>\r\n-              {c.notesProfessionnel && <div><strong>Notes pro :</strong> {c.notesProfessionnel}</div>}\r\n-              {c.notesUtilisateur && <div><strong>Mes notes :</strong> {c.notesUtilisateur}</div>}\r\n-            </li>\r\n-          );\r\n-        })}\r\n-      </ul>\r\n+        <div className=\"flex gap-3 items-center\">\r\n+          <SlidersHorizontal className=\"text-gray-500\" />\r\n+          <select\r\n+            value={statut}\r\n+            onChange={(e) => setStatut(e.target.value)}\r\n+            className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n+          >\r\n+            <option value=\"\">Tous les statuts</option>\r\n+            <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n+            <option value=\"CONFIRME\">🔵 Confirmée</option>\r\n+            <option value=\"TERMINEE\">✅ Terminée</option>\r\n+            <option value=\"ANNULEE\">❌ Annulée</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {error && (\r\n+        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n+      )}\r\n+\r\n+      {filteredConsultations.length === 0 ? (\r\n+        <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n+      ) : (\r\n+        <ul className=\"space-y-6\">\r\n+          <AnimatePresence>\r\n+            {filteredConsultations.map((c) => (\r\n+              <motion.li\r\n+                key={c.id}\r\n+                className=\"bg-white p-6 rounded-2xl shadow-md border border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center gap-5\"\r\n+                initial={{ opacity: 0, y: 20 }}\r\n+                animate={{ opacity: 1, y: 0 }}\r\n+                exit={{ opacity: 0, y: -10 }}\r\n+                transition={{ duration: 0.3 }}\r\n+              >\r\n+                <div className=\"space-y-2 text-sm md:text-base max-w-xl\">\r\n+                  <p className=\"text-indigo-900 font-semibold flex items-center gap-2\">\r\n+                    <User size={18} /> Docteur : {c.professionnelPrenom} {c.professionnelNom || '—'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <CalendarCheck size={16} /> Date : {new Date(c.date).toLocaleDateString()}\r\n+                  </p>\r\n+                  <p className=\"text-gray-700 flex items-center gap-2\">\r\n+                    <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium\">\r\n+                    Statut : <span className={\r\n+                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n+                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n+                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n+                    }>{c.statut}</span>\r\n+                  </p>\r\n+                  <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n+                    <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n+                  </p>\r\n+\r\n+                  {/* Note utilisateur */}\r\n+                  {c.notesUtilisateur && (\r\n+                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n+                      <strong>Votre note :</strong> {c.notesUtilisateur}\r\n+                    </p>\r\n+                  )}\r\n+\r\n+                  {/* Note professionnel */}\r\n+                  {c.notesProfessionnel && (\r\n+                    <p className=\"text-gray-700 italic text-sm mt-1\">\r\n+                      <strong>Note du professionnel :</strong> {c.notesProfessionnel}\r\n+                    </p>\r\n+                  )}\r\n+                </div>\r\n+\r\n+                <motion.button\r\n+                  whileHover={{ scale: 1.05 }}\r\n+                  whileTap={{ scale: 0.95 }}\r\n+                  onClick={() => toast.info(`Consultation avec ${c.professionnelPrenom} ${c.professionnelNom} le ${new Date(c.date).toLocaleDateString()}`)}\r\n+                  className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n+                >\r\n+                  Voir détails\r\n+                </motion.button>\r\n+              </motion.li>\r\n+            ))}\r\n+          </AnimatePresence>\r\n+        </ul>\r\n+      )}\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n \r\n export default MesConsultations;\r\n"
                },
                {
                    "date": 1750183600387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n             className=\"border border-indigo-300 rounded-xl px-4 py-2 focus:ring-2 focus:ring-indigo-500 shadow-sm text-sm\"\r\n           >\r\n             <option value=\"\">Tous les statuts</option>\r\n             <option value=\"EN_ATTENTE\">🕒 En attente</option>\r\n-            <option value=\"CONFIRME\">🔵 Confirmée</option>\r\n+            <option value=\"CONFIRMEE\">🔵 Confirmée</option>\r\n             <option value=\"TERMINEE\">✅ Terminée</option>\r\n             <option value=\"ANNULEE\">❌ Annulée</option>\r\n           </select>\r\n         </div>\r\n"
                },
                {
                    "date": 1750184283827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,15 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n-import { CalendarCheck, Clock, User, Euro, MessageSquare, SlidersHorizontal } from 'lucide-react';\r\n+import {\r\n+  CalendarCheck,\r\n+  Clock,\r\n+  User,\r\n+  Euro,\r\n+  MessageSquare,\r\n+  SlidersHorizontal,\r\n+  Info\r\n+} from 'lucide-react';\r\n import { toast, ToastContainer } from 'react-toastify';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import 'react-toastify/dist/ReactToastify.css';\r\n \r\n@@ -12,9 +20,11 @@\n \r\n   useEffect(() => {\r\n     const fetchConsultations = async () => {\r\n       try {\r\n-        const response = await axios.get('/api/consultations/mes-consultations', { withCredentials: true });\r\n+        const response = await axios.get('/api/consultations/mes-consultations', {\r\n+          withCredentials: true,\r\n+        });\r\n         setConsultations(response.data);\r\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n@@ -25,12 +35,27 @@\n   const filteredConsultations = consultations.filter(c =>\r\n     statut ? c.statut === statut : true\r\n   );\r\n \r\n+  const getBadge = (statut) => {\r\n+    switch (statut) {\r\n+      case 'EN_ATTENTE':\r\n+        return <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold\">🕒 En attente</span>;\r\n+      case 'CONFIRMEE':\r\n+        return <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-semibold\">🔵 Confirmée</span>;\r\n+      case 'TERMINEE':\r\n+        return <span className=\"bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-semibold\">✅ Terminée</span>;\r\n+      case 'ANNULEE':\r\n+        return <span className=\"bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-semibold\">❌ Annulée</span>;\r\n+      default:\r\n+        return <span className=\"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-xs font-semibold\">Inconnu</span>;\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"max-w-5xl mx-auto p-6\">\r\n       <ToastContainer position=\"top-right\" />\r\n-      \r\n+\r\n       {/* Titre + Filtre */}\r\n       <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\r\n         <motion.h2\r\n           className=\"text-4xl font-extrabold text-indigo-700 flex items-center gap-3\"\r\n@@ -55,11 +80,9 @@\n           </select>\r\n         </div>\r\n       </div>\r\n \r\n-      {error && (\r\n-        <p className=\"text-red-600 text-center mb-6\">{error}</p>\r\n-      )}\r\n+      {error && <p className=\"text-red-600 text-center mb-6\">{error}</p>}\r\n \r\n       {filteredConsultations.length === 0 ? (\r\n         <p className=\"text-gray-500 text-center text-lg\">Aucune consultation trouvée.</p>\r\n       ) : (\r\n@@ -83,15 +106,12 @@\n                   </p>\r\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n                     <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n                   </p>\r\n-                  <p className=\"text-gray-800 font-medium\">\r\n-                    Statut : <span className={\r\n-                      c.statut === 'ANNULEE' ? 'text-red-600' :\r\n-                      c.statut === 'TERMINEE' ? 'text-green-600' :\r\n-                      c.statut === 'EN_ATTENTE' ? 'text-yellow-600' : 'text-indigo-500'\r\n-                    }>{c.statut}</span>\r\n-                  </p>\r\n+                  <div className=\"flex items-center gap-2\">\r\n+                    <Info size={16} className=\"text-gray-500\" />\r\n+                    {getBadge(c.statut)}\r\n+                  </div>\r\n                   <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n                     <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n                   </p>\r\n \r\n@@ -112,9 +132,13 @@\n \r\n                 <motion.button\r\n                   whileHover={{ scale: 1.05 }}\r\n                   whileTap={{ scale: 0.95 }}\r\n-                  onClick={() => toast.info(`Consultation avec ${c.professionnelPrenom} ${c.professionnelNom} le ${new Date(c.date).toLocaleDateString()}`)}\r\n+                  onClick={() =>\r\n+                    toast.info(\r\n+                      `Consultation avec ${c.professionnelPrenom} ${c.professionnelNom} le ${new Date(c.date).toLocaleDateString()}`\r\n+                    )\r\n+                  }\r\n                   className=\"px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white font-medium\"\r\n                 >\r\n                   Voir détails\r\n                 </motion.button>\r\n"
                },
                {
                    "date": 1750185934774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,15 @@\n         return <span className=\"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-xs font-semibold\">Inconnu</span>;\r\n     }\r\n   };\r\n \r\n+  // Fonction utilitaire pour formater \"13:30:00\" en \"13H30\"\r\n+  const formatHeure = (heureString) => {\r\n+    if (!heureString) return '—';\r\n+    const [heure, minutes] = heureString.split(':');\r\n+    return `${heure}H${minutes}`;\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"max-w-5xl mx-auto p-6\">\r\n       <ToastContainer position=\"top-right\" />\r\n \r\n@@ -104,9 +111,9 @@\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n                     <CalendarCheck size={16} /> Date : {new Date(c.date).toLocaleDateString()}\r\n                   </p>\r\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n+                    <Clock size={16} /> Heure : {formatHeure(c.heure)}\r\n                   </p>\r\n                   <div className=\"flex items-center gap-2\">\r\n                     <Info size={16} className=\"text-gray-500\" />\r\n                     {getBadge(c.statut)}\r\n"
                },
                {
                    "date": 1750186008837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,15 +50,8 @@\n         return <span className=\"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-xs font-semibold\">Inconnu</span>;\r\n     }\r\n   };\r\n \r\n-  // Fonction utilitaire pour formater \"13:30:00\" en \"13H30\"\r\n-  const formatHeure = (heureString) => {\r\n-    if (!heureString) return '—';\r\n-    const [heure, minutes] = heureString.split(':');\r\n-    return `${heure}H${minutes}`;\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"max-w-5xl mx-auto p-6\">\r\n       <ToastContainer position=\"top-right\" />\r\n \r\n@@ -111,9 +104,9 @@\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n                     <CalendarCheck size={16} /> Date : {new Date(c.date).toLocaleDateString()}\r\n                   </p>\r\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n-                    <Clock size={16} /> Heure : {formatHeure(c.heure)}\r\n+                    <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n                   </p>\r\n                   <div className=\"flex items-center gap-2\">\r\n                     <Info size={16} className=\"text-gray-500\" />\r\n                     {getBadge(c.statut)}\r\n"
                },
                {
                    "date": 1750186467253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,20 +114,23 @@\n                   <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n                     <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n                   </p>\r\n \r\n-                  {/* Note utilisateur */}\r\n-                  {c.notesUtilisateur && (\r\n-                    <p className=\"text-gray-700 italic text-sm mt-2\">\r\n-                      <strong>Votre note :</strong> {c.notesUtilisateur}\r\n-                    </p>\r\n-                  )}\r\n+                  {/* Notes uniquement si consultation terminée */}\r\n+                  {c.statut === 'TERMINEE' && (\r\n+                    <>\r\n+                      {c.notesUtilisateur && (\r\n+                        <p className=\"text-gray-700 italic text-sm mt-2\">\r\n+                          <strong>Votre note :</strong> {c.notesUtilisateur}\r\n+                        </p>\r\n+                      )}\r\n \r\n-                  {/* Note professionnel */}\r\n-                  {c.notesProfessionnel && (\r\n-                    <p className=\"text-gray-700 italic text-sm mt-1\">\r\n-                      <strong>Note du professionnel :</strong> {c.notesProfessionnel}\r\n-                    </p>\r\n+                      {c.notesProfessionnel && (\r\n+                        <p className=\"text-gray-700 italic text-sm mt-1\">\r\n+                          <strong>Note du professionnel :</strong> {c.notesProfessionnel}\r\n+                        </p>\r\n+                      )}\r\n+                    </>\r\n                   )}\r\n                 </div>\r\n \r\n                 <motion.button\r\n"
                },
                {
                    "date": 1750186485148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                   <p className=\"text-gray-700 flex items-center gap-2\">\r\n                     <Clock size={16} /> Heure : {c.heure?.substring(0, 5) || '—'}\r\n                   </p>\r\n                   <div className=\"flex items-center gap-2\">\r\n-                    <Info size={16} className=\"text-gray-500\" />\r\n+                    <Info size={16} className=\"text-gray-500\" />Statut\r\n                     {getBadge(c.statut)}\r\n                   </div>\r\n                   <p className=\"text-gray-800 font-medium flex items-center gap-1\">Prix :\r\n                     <Euro size={14} /> {c.prix?.toFixed(2) || '—'}\r\n"
                }
            ],
            "date": 1750178522566,
            "name": "Commit-0",
            "content": "const Consultations = () => {\r\n  // ... ton code composant ...\r\n};\r\n\r\nexport default Consultations;\r\n"
        }
    ]
}